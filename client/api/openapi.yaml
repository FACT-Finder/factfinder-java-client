openapi: 3.0.1
info:
  license: {}
  title: FACT-Finder REST-API
  version: v4
servers:
- url: //!!!DO NOT MANUALLY EDIT THIS FILE!!! Update files in this directory with
    ./gradlew :itests:default:test -PgenerateSpec/
tags:
- description: Operations for campaigns
  name: campaign
- description: Operations for a node inside of a cluster
  name: cluster
- description: Operations for imports
  name: import
- description: Operations for jobs
  name: jobs
- description: Operation for management
  name: management
- description: Operations for predictive basket
  name: predbasket
- description: Operations for records
  name: records
- description: Operations for search and suggest
  name: search
- description: Operations for tracking
  name: tracking
- description: Operations for managing users
  name: users
paths:
  /rest/v4/campaign/{channel}/page:
    get:
      deprecated: false
      operationId: getPageCampaignsUsingGET
      parameters:
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass a page ID for which you wish to obtain
          campaigns.
        in: query
        name: pageId
        required: true
        schema:
          type: string
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: This parameter is used to pass an id for the user session. This
          is important for recognising the user, if you want to trigger personalised
          campaigns, as well as for FACT-Finder tracking.
        in: query
        name: sid
        schema:
          type: string
      - description: The latitude coordinate of the current location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the current location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Currently selected markets
        explode: true
        in: query
        name: marketIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Campaign'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get page campaigns
      tags:
      - campaign
      x-accepts: application/json
  /rest/v4/campaign/{channel}/product:
    get:
      deprecated: false
      operationId: getProductCampaignsUsingGET
      parameters:
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass a ID (master or product) for which
          you wish to obtain campaigns.
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: productNumber
          enum:
          - productNumber
          - id
          type: string
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: This parameter is used to pass an id for the user session. This
          is important for recognising the user, if you want to trigger personalised
          campaigns, as well as for FACT-Finder tracking.
        in: query
        name: sid
        schema:
          type: string
      - description: The latitude coordinate of the current location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the current location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Currently selected markets
        explode: true
        in: query
        name: marketIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Campaign'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get product campaigns
      tags:
      - campaign
      x-accepts: application/json
  /rest/v4/campaign/{channel}/shoppingcart:
    get:
      deprecated: false
      operationId: getShoppingCartCampaignsUsingGET
      parameters:
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass product ID(s) for which you wish to
          obtain campaigns.
        explode: true
        in: query
        name: productNumber
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: This parameter is used to pass an id for the user session. This
          is important for recognising the user, if you want to trigger personalised
          campaigns, as well as for FACT-Finder tracking.
        in: query
        name: sid
        schema:
          type: string
      - description: The latitude coordinate of the current location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the current location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Currently selected markets
        explode: true
        in: query
        name: marketIds
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Campaign'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get shopping cart campaigns
      tags:
      - campaign
      x-accepts: application/json
  /rest/v4/cluster/database/sync/full:
    post:
      deprecated: false
      description: Applies missing delta updates to the worldmatch database if this
        node is on the same databaseVersion as the director. Otherwise it reloads
        the worldmatch database from postgres.
      operationId: fullSyncUsingPOST
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Fully synchronize the worldmatch database of this node.
      tags:
      - cluster
      x-accepts: application/json
  /rest/v4/cluster/{channel}/database/prune:
    post:
      deprecated: false
      description: Deletes the delta updates table and increments the databaseVersion.
        After prune every worker has to reload the worldmatch database once to get
        in sync with the director. In contrast to a full re-import this does not discard
        any delta updates which are already applied to the intermediate database.
      operationId: pruneUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Prune delta updates.
      tags:
      - cluster
      x-accepts: application/json
  /rest/v4/cluster/{channel}/database/state:
    get:
      deprecated: false
      operationId: getDatabaseStateUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseState'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Show the current state of the worldmatch database.
      tags:
      - cluster
      x-accepts: application/json
  /rest/v4/cluster/{channel}/database/sync:
    post:
      deprecated: false
      description: Applies missing delta updates to the worldmatch database if this
        node is on the same databaseVersion as the director. Otherwise a reload of
        the worldmatch database is necessary to synchronize this node with the director.
      operationId: syncDatabaseUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeltaUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict - The worldmatch database is outdated and an import
            (LOAD_ONLY) is necessary.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Synchronize the worldmatch database of this node.
      tags:
      - cluster
      x-accepts: application/json
  /rest/v4/cluster/{channel}/import/state:
    get:
      deprecated: false
      operationId: getImportStateUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportState'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Show the import state of this node.
      tags:
      - cluster
      x-accepts: application/json
  /rest/v4/detail/{channel}/{id}:
    get:
      deprecated: false
      operationId: getDetailPageUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The id for which the detailpage should be returned.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: id
          enum:
          - productNumber
          - id
          type: string
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: Use this parameter to specify the number of recommendations you
          would like. The default value from the configuration is used if the parameter
          is not specified.
        in: query
        name: maxResultsRecommendations
        schema:
          default: 0
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: Use this parameter to specify the number of similar articles
          you would like. The default value from the configuration is used if the
          parameter is not specified.
        in: query
        name: maxResultsSimilarProducts
        schema:
          default: 10
          exclusiveMinimum: false
          format: int32
          minimum: 1.0
          type: integer
      - description: Allows the activation/deactivation of the personalization of
          queries. true = the search result will be personalized if the personalization
          module is activated and all other requirements are met; false = the search
          result will not be personalized.
        in: query
        name: usePersonalization
        schema:
          default: true
          type: boolean
      - description: This parameter is used to pass an id for the user session. This
          is important for recognising the user, if you want to trigger personalised
          campaigns, as well as for FACT-Finder tracking.
        in: query
        name: sid
        schema:
          type: string
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: The latitude coordinate of the current location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the current location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Currently selected markets
        explode: true
        in: query
        name: marketIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The maximum number of variants to return for every record
        in: query
        name: maxCountVariants
        schema:
          default: 5
          format: int32
          type: integer
      - description: withCampaigns
        in: query
        name: withCampaigns
        schema:
          default: true
          type: boolean
      - description: withRecommendations
        in: query
        name: withRecommendations
        schema:
          default: true
          type: boolean
      - description: withSimilarProducts
        in: query
        name: withSimilarProducts
        schema:
          default: true
          type: boolean
      - description: withRecord
        in: query
        name: withRecord
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailPage'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get the detail page
      tags:
      - records
      x-accepts: application/json
  /rest/v4/groups:
    delete:
      deprecated: false
      operationId: deleteGroupsUsingDELETE
      parameters:
      - description: List with names of the groups that should be deleted.
        explode: true
        in: query
        name: name
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Delete multiple groups.
      tags:
      - users
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getGroupsUsingGET
      parameters:
      - description: Filter groups whose name contains a specific string.
        in: query
        name: name
        schema:
          type: string
      - description: Filter groups with specific role.
        in: query
        name: role
        schema:
          enum:
          - AbTestManager
          - AfterSearchNavigationManager
          - BackupManager
          - CacheManager
          - CampaignManager
          - ConfiguratorManager
          - DeploymentManager
          - ImportManager
          - IntermediateOnlyImportManager
          - InstallManager
          - LanguageManager
          - LogfileAnalyzerManager
          - MayChangePassword
          - MessagesManager
          - NotificationManager
          - PreprocessorManager
          - RankingManager
          - RecommendationEngineManager
          - SearchInterfaceUser
          - SearchManager
          - ShowHelpSection
          - SuggestManager
          - ThesaurusManager
          - UserManager
          - WordValuesManager
          - ApiImport
          - ApiAnalytics
          - ApiPublicQueries
          - ApiConfig
          - ApiJobs
          - ApiDatabase
          - ApiInstoreAds
          - ApiManage
          - ApiLicence
          - ApiUsers
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Get groups matching the given filters.
      tags:
      - users
      x-accepts: application/json
    post:
      deprecated: false
      operationId: createGroupUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Create a new group. Non-admin user are not allowed to create groups
        containing api roles.
      tags:
      - users
      x-codegen-request-body-name: group
      x-contentType: application/json
      x-accepts: application/json
    put:
      deprecated: false
      operationId: updateGroupUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        description: group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Update group. Non-admin user are not allowed to add new api roles to
        the group.
      tags:
      - users
      x-codegen-request-body-name: group
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/groups/{name}:
    delete:
      deprecated: false
      operationId: deleteGroupUsingDELETE
      parameters:
      - description: Name of the group which should be deleted.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Delete the group with the given name.
      tags:
      - users
      x-accepts: application/json
  /rest/v4/import/customerprices:
    post:
      deprecated: false
      operationId: startCustomerSpecificPricingImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: causes the import file to be updated first. If no URL
          is stored in the FACT-Finder configuration, this parameter has no effect.'
        in: query
        name: download
        schema:
          default: false
          type: boolean
      - description: 'if true: causes a cache flush after a channel has been imported'
        in: query
        name: cacheFlush
        schema:
          default: false
          type: boolean
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      - description: IMPORT_ONLY only fills the intermediate DB, LOAD_ONLY imports
          that database into memory, and FULL combines both stages
        in: query
        name: importStage
        schema:
          default: FULL
          enum:
          - FULL
          - LOAD_ONLY
          - IMPORT_ONLY
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start customer specific pricing import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/geo:
    post:
      deprecated: false
      operationId: startGeoImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: causes the import file to be updated first. If no URL
          is stored in the FACT-Finder configuration, this parameter has no effect.'
        in: query
        name: download
        schema:
          default: false
          type: boolean
      - description: 'if true: causes a cache flush after a channel has been imported'
        in: query
        name: cacheFlush
        schema:
          default: false
          type: boolean
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      - description: IMPORT_ONLY only fills the intermediate DB, LOAD_ONLY imports
          that database into memory, and FULL combines both stages
        in: query
        name: importStage
        schema:
          default: FULL
          enum:
          - FULL
          - LOAD_ONLY
          - IMPORT_ONLY
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start geo import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/ranking:
    post:
      deprecated: false
      operationId: startRankingImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: causes a cache flush after a channel has been imported'
        in: query
        name: cacheFlush
        schema:
          default: false
          type: boolean
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start ranking import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/recommendation:
    post:
      deprecated: false
      operationId: startRecommendationImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start recommendation import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/refreshRecommendations:
    post:
      deprecated: false
      operationId: refreshRecommendationDatabasesUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Refresh recommendation databases
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/running:
    get:
      deprecated: false
      operationId: isImportRunningUsingGET
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Check if an import is running in any of the supplied channels
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/search:
    post:
      deprecated: false
      operationId: startSearchImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: causes the import file to be updated first. If no URL
          is stored in the FACT-Finder configuration, this parameter has no effect.'
        in: query
        name: download
        schema:
          default: false
          type: boolean
      - description: 'if true: causes a cache flush after a channel has been imported'
        in: query
        name: cacheFlush
        schema:
          default: false
          type: boolean
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      - description: IMPORT_ONLY only fills the intermediate DB, LOAD_ONLY imports
          that database into memory, and FULL combines both stages
        in: query
        name: importStage
        schema:
          default: FULL
          enum:
          - FULL
          - LOAD_ONLY
          - IMPORT_ONLY
          type: string
      - description: 'if true: executes a customer specific pricing import after the
          search import. If customer specific pricing is not enabled for a given channel,
          this parameter has no effect.'
        in: query
        name: includeCustomerPrices
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start search import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/import/suggest:
    post:
      deprecated: false
      operationId: startSuggestImportUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'if true: only receive a filled response if an error occurs during
          the import otherwise the response is just empty'
        in: query
        name: quiet
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImportChannelResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Start suggest import
      tags:
      - import
      x-accepts: application/json
  /rest/v4/jobs/startJob:
    post:
      deprecated: false
      operationId: startJobUsingPOST
      parameters:
      - description: jobName
        in: query
        name: jobName
        required: true
        schema:
          type: string
      - description: jobGroup
        in: query
        name: jobGroup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobTriggerResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - jobs
      summary: Start the job with the given name and group name. The job will only
        be started, if it is not already running.
      tags:
      - jobs
      x-accepts: application/json
  /rest/v4/jobs/startJobsWithGroupName:
    post:
      deprecated: false
      operationId: startJobsWithGroupNameUsingPOST
      parameters:
      - description: jobGroup
        in: query
        name: jobGroup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobTriggerResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - jobs
      summary: Start the jobs with the given group name. A job will only be started,
        if it is not already running.
      tags:
      - jobs
      x-accepts: application/json
  /rest/v4/jobs/startJobsWithName:
    post:
      deprecated: false
      operationId: startJobsWithNameUsingPOST
      parameters:
      - description: jobName
        in: query
        name: jobName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobTriggerResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - jobs
      summary: Start the jobs with the given name. A job will only be started, if
        it is not already running.
      tags:
      - jobs
      x-accepts: application/json
  /rest/v4/management/changeLogLevel:
    post:
      deprecated: false
      operationId: changeLogLevelUsingPOST
      parameters:
      - description: logLevel
        in: query
        name: logLevel
        required: true
        schema:
          enum:
          - ERROR
          - WARN
          - INFO
          - DEBUG
          - TRACE
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - manage
      summary: Changes the log level
      tags:
      - management
      x-accepts: application/json
  /rest/v4/management/expiration:
    get:
      deprecated: false
      operationId: getExpirationMessagesUsingGET
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExpirationMessage'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - database
      summary: Get expiration messages
      tags:
      - management
      x-accepts: application/json
  /rest/v4/management/flushCache:
    post:
      deprecated: false
      operationId: flushCacheUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - database
      summary: Flush the cache
      tags:
      - management
      x-accepts: application/json
  /rest/v4/management/flushLogs:
    post:
      deprecated: false
      operationId: flushLogsUsingPOST
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - manage
      summary: Flush the log files
      tags:
      - management
      x-accepts: application/json
  /rest/v4/management/reloadConfiguration:
    post:
      deprecated: false
      description: Omitting channels reloads all configuration, including all channel
        configurations, and feature flags (fff.properties). Supplying channels only
        reloads channel specific configuration.
      operationId: reloadConfigurationUsingPOST
      parameters:
      - description: channel
        explode: true
        in: query
        name: channel
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - config
      summary: Reload the configuration
      tags:
      - management
      x-accepts: application/json
  /rest/v4/management/resetLogLevel:
    post:
      deprecated: false
      operationId: resetLogLevelUsingPOST
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - manage
      summary: Resets the log level to the original level
      tags:
      - management
      x-accepts: application/json
  /rest/v4/markets/{channel}:
    delete:
      deprecated: false
      operationId: deleteMarketUsingDELETE
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The ids of the markets which should be deleted.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteMarketRequest'
        description: deleteMarketRequest
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeleteResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Delete geo market
      tags:
      - records
      x-codegen-request-body-name: deleteMarketRequest
      x-contentType: '*/*'
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getMarketsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The market ids.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MarketRecord'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get markets with location
      tags:
      - records
      x-accepts: application/json
    post:
      deprecated: false
      operationId: updateMarketsUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/MarketRecord'
              type: array
        description: The markets which should be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MarketUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Update markets
      tags:
      - records
      x-codegen-request-body-name: markets
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/navigation:
    post:
      deprecated: false
      operationId: navigationUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NavigationRequest'
        description: navigationRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: OK
          headers:
            X-FF-Timeout:
              description: If true, the search is timed out. This can result in a
                response with 0 hits depending on when the timeout occurred.
              schema:
                type: boolean
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Navigation with POST
      tags:
      - search
      x-codegen-request-body-name: navigationRequest
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/navigation/category/{channel}:
    get:
      deprecated: false
      operationId: categoryNavigationUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The session id
        in: query
        name: sid
        schema:
          type: string
      - description: Category start level
        in: query
        name: startLevel
        schema:
          format: int32
          type: integer
      - description: Category end level
        in: query
        name: endLevel
        schema:
          format: int32
          type: integer
      - description: 'Filter for the whole field value; a filter can have multiple
          values, the values can be separated with the following characters (they
          are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~ the filter
          value can be excluded with the prefix ! format: facetid:value; example Red~~~!Green
          = red or not green. If the filter name equals ''*'', the filter will be
          applied on any field; example: *:Red~~~Green. This filter type does not
          support the exclusion prefix.'
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter for a sub string of the field value; a filter can have
          multiple values, the values can be separated with the following characters
          (they are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~
          the filter value can be excluded with the prefix ! format: facetid:value;
          example Red~~~!Green = red or not green. If the filter name equals ''*'',
          the filter will be applied on any field; example: *:Red~~~Green. This filter
          type does not support the exclusion prefix.'
        explode: true
        in: query
        name: substringFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Forces to apply certain ab variants to the search result; format:
          abTestId:AbVariantId; example 1b7f3b1a-600f-4d23-b1bf-ac9978628d17:A'
        explode: true
        in: query
        name: forceAbVariant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only show products that have values for these market IDs.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The latitude coordinate of the location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Use this parameter to override the "maximum distance" setting
          of the geo search.
        in: query
        name: maxDistance
        schema:
          exclusiveMinimum: false
          format: double
          minimum: 1.0
          type: number
      - description: Use this parameter to override the "exclude products not in range"
          setting of the geo search.
        in: query
        name: excludeProductsNotInRange
        schema:
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: If true, the search result will be returned from cache memory,
          if a possible matching result exists.
        in: query
        name: useCache
        schema:
          default: true
          type: boolean
      - description: If true geoSearch features will be active.
        in: query
        name: useGeo
        schema:
          default: true
          type: boolean
      - description: If true AbTest features will be active.
        in: query
        name: useAbTest
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryNavigation'
          description: OK
          headers:
            X-FF-Timeout:
              description: If true, the search is timed out. This can result in a
                response with 0 hits depending on when the timeout occurred.
              schema:
                type: boolean
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Category ASN for Navigation
      tags:
      - search
      x-accepts: application/json
  /rest/v4/navigation/{channel}:
    get:
      deprecated: false
      operationId: navigationUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The session id
        in: query
        name: sid
        schema:
          type: string
      - description: 'Filter for the whole field value; a filter can have multiple
          values, the values can be separated with the following characters (they
          are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~ the filter
          value can be excluded with the prefix ! format: facetid:value; example Red~~~!Green
          = red or not green. If the filter name equals ''*'', the filter will be
          applied on any field; example: *:Red~~~Green. This filter type does not
          support the exclusion prefix.'
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter for a sub string of the field value; a filter can have
          multiple values, the values can be separated with the following characters
          (they are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~
          the filter value can be excluded with the prefix ! format: facetid:value;
          example Red~~~!Green = red or not green. If the filter name equals ''*'',
          the filter will be applied on any field; example: *:Red~~~Green. This filter
          type does not support the exclusion prefix.'
        explode: true
        in: query
        name: substringFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Forces to apply certain ab variants to the search result; format:
          abTestId:AbVariantId; example 1b7f3b1a-600f-4d23-b1bf-ac9978628d17:A'
        explode: true
        in: query
        name: forceAbVariant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only show products that have values for these market IDs.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Sort the result; use FieldName Relevancy to sort the relevancy;
          format: FieldName:order order must be either asc or desc; example Manufacturer:asc'
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag parameters as cache irrelevant
        explode: true
        in: query
        name: cacheIrrelevant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The latitude coordinate of the location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Use this parameter to override the "maximum distance" setting
          of the geo search.
        in: query
        name: maxDistance
        schema:
          exclusiveMinimum: false
          format: double
          minimum: 1.0
          type: number
      - description: Use this parameter to override the "exclude products not in range"
          setting of the geo search.
        in: query
        name: excludeProductsNotInRange
        schema:
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: If a search result contains many results these will be divided
          into pages. This limits the amount of data that has to be sent in one go.
          You can indicate which page should be returned. Page numbering starts at
          1.
        in: query
        name: page
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 1.0
          type: integer
      - description: In the FACT-Finder Management Interface you can define how many
          results will be returned on a page by default. If you prefer another number,
          you can set it with this parameter.
        in: query
        name: hitsPerPage
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: The maximum number of variants to return for every record
        in: query
        name: maxCountVariants
        schema:
          format: int32
          type: integer
      - description: 'For specifying the current campaign id and answer path; format:
          campaignId-answerPath'
        in: query
        name: advisorStatus
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: Optional request linking param from a previous search result
          or search param object. Can improve request performance.
        in: query
        name: followSearch
        schema:
          type: string
      - description: If true, the search result will be returned from cache memory,
          if a possible matching result exists.
        in: query
        name: useCache
        schema:
          default: true
          type: boolean
      - description: If true geoSearch features will be active.
        in: query
        name: useGeo
        schema:
          default: true
          type: boolean
      - description: If true AbTest features will be active.
        in: query
        name: useAbTest
        schema:
          default: true
          type: boolean
      - description: If true, search will be executed for the query.
        in: query
        name: useSearch
        schema:
          default: true
          type: boolean
      - description: If true, filters should be generated for the result.
        in: query
        name: useAsn
        schema:
          default: true
          type: boolean
      - description: If true, the words that led to the records in the search results
          will be determined; this may require a large amount of processing time.
        in: query
        name: useFoundWords
        schema:
          default: false
          type: boolean
      - description: If true, campaigns corresponding to this search result will be
          returned.
        in: query
        name: useCampaigns
        schema:
          default: true
          type: boolean
      - description: If true, the returned records will contain only record IDs.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: If true, the relevant products in the result will be personalized.
        in: query
        name: usePersonalization
        schema:
          default: true
          type: boolean
      - description: If true, the semantic enhancer will be used.
        in: query
        name: useSemanticEnhancer
        schema:
          default: true
          type: boolean
      - description: If true, automatic search optimization will be used.
        in: query
        name: useAso
        schema:
          default: true
          type: boolean
      - description: If true, the configured deduplication of variants will be used.
        in: query
        name: useDeduplication
        schema:
          default: true
          type: boolean
      - description: Specifies on which field variants should be deduplicated.
        in: query
        name: deduplicationField
        schema:
          type: string
      - description: If true, ranking will be applied.
        in: query
        name: useRanking
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: OK
          headers:
            X-FF-Timeout:
              description: If true, the search is timed out. This can result in a
                response with 0 hits depending on when the timeout occurred.
              schema:
                type: boolean
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Navigation
      tags:
      - search
      x-accepts: application/json
  /rest/v4/predictivebasket/{channel}:
    get:
      deprecated: false
      operationId: getPredictionsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: This parameter contains a unique user identifier. It is essential
          for predictive basket results.
        in: query
        name: userId
        required: true
        schema:
          type: string
      - description: Limit for the amount of predictions to return.
        in: query
        name: maxResults
        schema:
          default: 0
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: Filters for field values of returned records.
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: IDs of products to exclude from predictions.
        explode: true
        in: query
        name: blacklist
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictiveBasketResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get predictions
      tags:
      - predbasket
      x-accepts: application/json
  /rest/v4/records/{channel}:
    delete:
      deprecated: false
      operationId: deleteUsingDELETE
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The ids from the records which should be deleted.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the type of id given.
        in: query
        name: idType
        schema:
          default: productNumber
          enum:
          - productNumber
          - id
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        description: deleteRequest
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeleteResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Delete records
      tags:
      - records
      x-codegen-request-body-name: deleteRequest
      x-contentType: '*/*'
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getRecordsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The product numbers of the records which should be returned.
        explode: true
        in: query
        name: productNumber
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatRecordsResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get records
      tags:
      - records
      x-accepts: application/json
    post:
      deprecated: false
      operationId: insertRecordsUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FlatRecord'
              type: array
        description: The records which should be inserted
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeltaUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Insert records
      tags:
      - records
      x-codegen-request-body-name: records
      x-contentType: application/json
      x-accepts: application/json
    put:
      deprecated: false
      operationId: updateUsingPUT
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FlatRecord'
              type: array
        description: The records which should be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeltaUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Update records
      tags:
      - records
      x-codegen-request-body-name: records
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/records/{channel}/compare:
    get:
      deprecated: false
      operationId: compareUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: Use this parameter to pass product ID(s) which should be compared.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompareResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Compare products
      tags:
      - records
      x-accepts: application/json
  /rest/v4/records/{channel}/customerprices:
    delete:
      deprecated: false
      operationId: deleteCustomerPricesUsingDELETE
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The ids from the records which should be deleted.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: productNumber
          enum:
          - productNumber
          - id
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        description: deleteRequest
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeleteResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Delete customer prices
      tags:
      - records
      x-codegen-request-body-name: deleteRequest
      x-contentType: '*/*'
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getCustomerPricesUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: productNumber
          enum:
          - productNumber
          - id
          type: string
      - description: The product numbers of the records for which customer prices
          should be returned.
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerPriceRecord'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get customer specific prices
      tags:
      - records
      x-accepts: application/json
    post:
      deprecated: false
      operationId: updateCustomerPricesUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CustomerPriceRecord'
              type: array
        description: The records which should be inserted
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerPriceUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Update customer prices
      tags:
      - records
      x-codegen-request-body-name: records
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/records/{channel}/full:
    get:
      deprecated: false
      operationId: getFullRecordsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The record ids of the records which should be returned
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: id
          enum:
          - productNumber
          - id
          type: string
      - description: The maximum number of variants to return for every record
        in: query
        name: maxCountVariants
        schema:
          default: 5
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullRecordsResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get full records
      tags:
      - records
      x-accepts: application/json
  /rest/v4/records/{channel}/geo:
    delete:
      deprecated: false
      operationId: deleteGeoUsingDELETE
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The ids from the records which should be deleted.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeleteRequest'
        description: deleteRequest
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeleteResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Delete geo data
      tags:
      - records
      x-codegen-request-body-name: deleteRequest
      x-contentType: '*/*'
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getGeoUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The product numbers of the records for which geo data should
          be returned.
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoRecord'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get geo data
      tags:
      - records
      x-accepts: application/json
    post:
      deprecated: false
      operationId: updateGeoUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/GeoRecord'
              type: array
        description: The records which should be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Update geo data
      tags:
      - records
      x-codegen-request-body-name: records
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/records/{channel}/meta:
    get:
      deprecated: false
      operationId: getRecordMetaGetUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: The record ids of the records which should be returned
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: id
          enum:
          - productNumber
          - id
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordMetaResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Retrieve record metadata
      tags:
      - records
      x-accepts: application/json
    post:
      deprecated: false
      operationId: getRecordMetaPostUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Specifies which type of id is given.
        in: query
        name: idType
        schema:
          default: id
          enum:
          - productNumber
          - id
          type: string
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaRequest'
        description: metaRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordMetaResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Retrieve record metadata
      tags:
      - records
      x-codegen-request-body-name: metaRequest
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/records/{channel}/recommendation:
    get:
      deprecated: false
      operationId: getRecommendationUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass product ID(s) for which you wish to
          obtain recommendations.
        explode: true
        in: query
        name: id
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Use this parameter to specify the number of recommendations you
          would like. The default value from the configuration is used if the parameter
          is not specified.
        in: query
        name: maxResults
        schema:
          default: 0
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: This parameter is used to pass an id for the user session. This
          is important for recognising the user, if you want to give him personalised
          recommendations, as well as for FACT-Finder tracking.
        in: query
        name: sid
        schema:
          type: string
      - description: Filters for field values of recommended records.
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: Allows the activation/deactivation of the personalization of
          queries. true = the search result will be personalized if the personalization
          module is activated and all other requirements are met; false = the search
          result will not be personalized.
        in: query
        name: usePersonalization
        schema:
          default: true
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationResultWithFieldRoles'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get recommendations
      tags:
      - records
      x-accepts: application/json
  /rest/v4/records/{channel}/similar:
    get:
      deprecated: false
      operationId: getSimilarProductsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: Use this parameter to pass the product ID for which you wish
          to obtain similar products.
        in: query
        name: id
        required: true
        schema:
          type: string
      - description: Use this parameter to determine the type of id passed to the
          method.
        in: query
        name: idType
        required: true
        schema:
          enum:
          - productNumber
          - id
          type: string
      - description: Filters for field values of recommended records.
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: If the value true is passed, then only the record IDs will be
          returned, streamlining the results. If you do not need the other information
          in the results, this will help you to improve performance.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          type: string
      - description: Use this parameter to specify the number of similar articles
          you would like. The default value from the configuration is used if the
          parameter is not specified.
        in: query
        name: maxResults
        schema:
          default: 10
          exclusiveMinimum: false
          format: int32
          minimum: 1.0
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarProductsWithFieldRoles'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get similar products
      tags:
      - records
      x-accepts: application/json
  /rest/v4/records/{channel}/upsert:
    put:
      deprecated: false
      description: 'Update or insert records; Without variants: inserts records when
        they do not already exist, or replaces them if they do. With Variants: inserts
        a master document when it does not exists; inserts a variant and replaces
        the master values if the variant does not exist; replaces a variant and replaces
        the master values if the variant does already exist.'
      operationId: upsertRecordsUsingPUT
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: verbose
        in: query
        name: verbose
        schema:
          default: false
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FlatRecord'
              type: array
        description: The records which should be upserted
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DeltaUpdateResult'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - import
      summary: Upsert records
      tags:
      - records
      x-codegen-request-body-name: records
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/search:
    post:
      deprecated: false
      operationId: searchUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: searchRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: OK
          headers:
            X-FF-Timeout:
              description: If true, the search is timed out. This can result in a
                response with 0 hits depending on when the timeout occurred.
              schema:
                type: boolean
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Search with POST
      tags:
      - search
      x-codegen-request-body-name: searchRequest
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/search/{channel}:
    get:
      deprecated: false
      operationId: searchUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: The session id
        in: query
        name: sid
        schema:
          type: string
      - description: Use this parameter to send the characters, the shop user entered
          until the search query was triggered.
        in: query
        name: userInput
        schema:
          type: string
      - description: 'Filter for the whole field value; a filter can have multiple
          values, the values can be separated with the following characters (they
          are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~ the filter
          value can be excluded with the prefix ! format: facetid:value; example Red~~~!Green
          = red or not green. If the filter name equals ''*'', the filter will be
          applied on any field; example: *:Red~~~Green. This filter type does not
          support the exclusion prefix.'
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter for a sub string of the field value; a filter can have
          multiple values, the values can be separated with the following characters
          (they are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~
          the filter value can be excluded with the prefix ! format: facetid:value;
          example Red~~~!Green = red or not green. If the filter name equals ''*'',
          the filter will be applied on any field; example: *:Red~~~Green. This filter
          type does not support the exclusion prefix.'
        explode: true
        in: query
        name: substringFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Forces to apply certain ab variants to the search result; format:
          abTestId:AbVariantId; example 1b7f3b1a-600f-4d23-b1bf-ac9978628d17:A'
        explode: true
        in: query
        name: forceAbVariant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only show products that have values for these market IDs.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Sort the result; use FieldName Relevancy to sort the relevancy;
          format: FieldName:order order must be either asc or desc; example Manufacturer:asc'
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag parameters as cache irrelevant
        explode: true
        in: query
        name: cacheIrrelevant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The latitude coordinate of the location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Use this parameter to override the "maximum distance" setting
          of the geo search.
        in: query
        name: maxDistance
        schema:
          exclusiveMinimum: false
          format: double
          minimum: 1.0
          type: number
      - description: Use this parameter to override the "exclude products not in range"
          setting of the geo search.
        in: query
        name: excludeProductsNotInRange
        schema:
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: If a search result contains many results these will be divided
          into pages. This limits the amount of data that has to be sent in one go.
          You can indicate which page should be returned. Page numbering starts at
          1.
        in: query
        name: page
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 1.0
          type: integer
      - description: In the FACT-Finder Management Interface you can define how many
          results will be returned on a page by default. If you prefer another number,
          you can set it with this parameter.
        in: query
        name: hitsPerPage
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: The maximum number of variants to return for every record
        in: query
        name: maxCountVariants
        schema:
          format: int32
          type: integer
      - description: 'For specifying the current campaign id and answer path; format:
          campaignId-answerPath'
        in: query
        name: advisorStatus
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: Optional request linking param from a previous search result
          or search param object. Can improve request performance.
        in: query
        name: followSearch
        schema:
          type: string
      - description: Normally FACT-Finder searches all fields defined as searchable.
          However it is possible to search only one specific field as well.
        in: query
        name: searchField
        schema:
          type: string
      - description: The search term
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: Specifies if the query should be interpreted as article number
        in: query
        name: articleNumberSearch
        schema:
          default: DETECT
          enum:
          - DETECT
          - ALWAYS
          - NEVER
          type: string
      - description: If true, the search result will be returned from cache memory,
          if a possible matching result exists.
        in: query
        name: useCache
        schema:
          default: true
          type: boolean
      - description: If true geoSearch features will be active.
        in: query
        name: useGeo
        schema:
          default: true
          type: boolean
      - description: If true AbTest features will be active.
        in: query
        name: useAbTest
        schema:
          default: true
          type: boolean
      - description: If true, search will be executed for the query.
        in: query
        name: useSearch
        schema:
          default: true
          type: boolean
      - description: If true, filters should be generated for the result.
        in: query
        name: useAsn
        schema:
          default: true
          type: boolean
      - description: If true, the words that led to the records in the search results
          will be determined; this may require a large amount of processing time.
        in: query
        name: useFoundWords
        schema:
          default: false
          type: boolean
      - description: If true, campaigns corresponding to this search result will be
          returned.
        in: query
        name: useCampaigns
        schema:
          default: true
          type: boolean
      - description: If true, the returned records will contain only record IDs.
        in: query
        name: idsOnly
        schema:
          default: false
          type: boolean
      - description: If true, the relevant products in the result will be personalized.
        in: query
        name: usePersonalization
        schema:
          default: true
          type: boolean
      - description: If true, the semantic enhancer will be used.
        in: query
        name: useSemanticEnhancer
        schema:
          default: true
          type: boolean
      - description: If true, automatic search optimization will be used.
        in: query
        name: useAso
        schema:
          default: true
          type: boolean
      - description: If true, the configured deduplication of variants will be used.
        in: query
        name: useDeduplication
        schema:
          default: true
          type: boolean
      - description: Specifies on which field variants should be deduplicated.
        in: query
        name: deduplicationField
        schema:
          type: string
      - description: If true, ranking will be applied.
        in: query
        name: useRanking
        schema:
          default: true
          type: boolean
      - description: This parameter indicates that the FACT-Finder query was triggered
          through a selection from the suggestion list. In this case send the parameter
          with the value true.
        in: query
        name: queryFromSuggest
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
          description: OK
          headers:
            X-FF-Timeout:
              description: If true, the search is timed out. This can result in a
                response with 0 hits depending on when the timeout occurred.
              schema:
                type: boolean
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Search
      tags:
      - search
      x-accepts: application/json
  /rest/v4/suggest:
    post:
      deprecated: false
      operationId: getSuggestionsUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestParams'
        description: params
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get suggestions with POST
      tags:
      - search
      x-codegen-request-body-name: params
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/suggest/{channel}:
    get:
      deprecated: false
      operationId: getSuggestionsUsingGET
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      - description: 'Filter for the whole field value; a filter can have multiple
          values, the values can be separated with the following characters (they
          are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~ the filter
          value can be excluded with the prefix ! format: facetid:value; example Red~~~!Green
          = red or not green. If the filter name equals ''*'', the filter will be
          applied on any field; example: *:Red~~~Green. This filter type does not
          support the exclusion prefix.'
        explode: true
        in: query
        name: filter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Filter for a sub string of the field value; a filter can have
          multiple values, the values can be separated with the following characters
          (they are configurable in the config.xml) ''and'' = \_\_\_ ''or'' = ~~~
          the filter value can be excluded with the prefix ! format: facetid:value;
          example Red~~~!Green = red or not green. If the filter name equals ''*'',
          the filter will be applied on any field; example: *:Red~~~Green. This filter
          type does not support the exclusion prefix.'
        explode: true
        in: query
        name: substringFilter
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Forces to apply certain ab variants to the search result; format:
          abTestId:AbVariantId; example 1b7f3b1a-600f-4d23-b1bf-ac9978628d17:A'
        explode: true
        in: query
        name: forceAbVariant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Only show products that have values for these market IDs.
        explode: true
        in: query
        name: marketId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Sort the result; use FieldName Relevancy to sort the relevancy;
          format: FieldName:order order must be either asc or desc; example Manufacturer:asc'
        explode: true
        in: query
        name: sort
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Flag parameters as cache irrelevant
        explode: true
        in: query
        name: cacheIrrelevant
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The latitude coordinate of the location.
        in: query
        name: latitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 90.0
          minimum: -90.0
          type: number
      - description: The longitude coordinate of the location.
        in: query
        name: longitude
        schema:
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 180.0
          minimum: -180.0
          type: number
      - description: Use this parameter to override the "maximum distance" setting
          of the geo search.
        in: query
        name: maxDistance
        schema:
          exclusiveMinimum: false
          format: double
          minimum: 1.0
          type: number
      - description: Use this parameter to override the "exclude products not in range"
          setting of the geo search.
        in: query
        name: excludeProductsNotInRange
        schema:
          type: boolean
      - description: Use this parameter to pass the purchaser ID. This ID is only
          needed, if the 'customer specific pricing' module is active. Otherwise it
          will be ignored.
        in: query
        name: purchaserId
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: If a search result contains many results these will be divided
          into pages. This limits the amount of data that has to be sent in one go.
          You can indicate which page should be returned. Page numbering starts at
          1.
        in: query
        name: page
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 1.0
          type: integer
      - description: In the FACT-Finder Management Interface you can define how many
          results will be returned on a page by default. If you prefer another number,
          you can set it with this parameter.
        in: query
        name: hitsPerPage
        schema:
          exclusiveMinimum: false
          format: int32
          minimum: 0.0
          type: integer
      - description: The maximum number of variants to return for every record
        in: query
        name: maxCountVariants
        schema:
          format: int32
          type: integer
      - description: 'For specifying the current campaign id and answer path; format:
          campaignId-answerPath'
        in: query
        name: advisorStatus
        schema:
          maximum: 2147483647
          minimum: 1
          type: string
      - description: Optional request linking param from a previous search result
          or search param object. Can improve request performance.
        in: query
        name: followSearch
        schema:
          type: string
      - description: Normally FACT-Finder searches all fields defined as searchable.
          However it is possible to search only one specific field as well.
        in: query
        name: searchField
        schema:
          type: string
      - description: The search term
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: Specifies if the query should be interpreted as article number
        in: query
        name: articleNumberSearch
        schema:
          default: DETECT
          enum:
          - DETECT
          - ALWAYS
          - NEVER
          type: string
      - description: the session id from the user
        in: query
        name: sid
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResult'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Get suggestions
      tags:
      - search
      x-accepts: application/json
  /rest/v4/track/{channel}/cart:
    post:
      deprecated: false
      operationId: trackCartUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CartOrCheckoutEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a cart event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/checkout:
    post:
      deprecated: false
      operationId: trackCheckoutUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CartOrCheckoutEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a checkout event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/click:
    post:
      deprecated: false
      operationId: trackClickUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ClickEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a click event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/feedback:
    post:
      deprecated: false
      operationId: trackFeedbackUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FeedbackEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a feedback event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/landingPageClick:
    post:
      deprecated: false
      operationId: trackLandingPageClickUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/LandingPageClickEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a click event for products provided by a campaign on a landing
        page.
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/log:
    post:
      deprecated: false
      operationId: trackLogUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/SearchLogEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a log event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/login:
    post:
      deprecated: false
      operationId: trackLoginUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/LoginEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a login event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/predbasketClick:
    post:
      deprecated: false
      operationId: trackPredBasketClickUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PredBasketClickEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a predictive basket click event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/track/{channel}/recommendationClick:
    post:
      deprecated: false
      operationId: trackRecommendationClickUsingPOST
      parameters:
      - description: channel
        in: path
        name: channel
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RecommendationClickEvent'
              type: array
        description: events
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - public_queries
      summary: Track a recommendation click event
      tags:
      - tracking
      x-codegen-request-body-name: events
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/user/channel:
    get:
      deprecated: false
      operationId: getVisibleChannelsUsingGET
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2: []
      summary: Get visible channels
      tags:
      - users
      x-accepts: application/json
  /rest/v4/users:
    delete:
      deprecated: false
      operationId: deleteUsersUsingDELETE
      parameters:
      - description: The names of users that will be deleted.
        explode: true
        in: query
        name: name
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Delete multiple users.
      tags:
      - users
      x-accepts: application/json
    get:
      deprecated: false
      operationId: getUsersUsingGET
      parameters:
      - description: Filter users whose name contains a specific string.
        in: query
        name: name
        schema:
          type: string
      - description: Filter users with a specific role.
        in: query
        name: role
        schema:
          enum:
          - AbTestManager
          - AfterSearchNavigationManager
          - BackupManager
          - CacheManager
          - CampaignManager
          - ConfiguratorManager
          - DeploymentManager
          - ImportManager
          - IntermediateOnlyImportManager
          - InstallManager
          - LanguageManager
          - LogfileAnalyzerManager
          - MayChangePassword
          - MessagesManager
          - NotificationManager
          - PreprocessorManager
          - RankingManager
          - RecommendationEngineManager
          - SearchInterfaceUser
          - SearchManager
          - ShowHelpSection
          - SuggestManager
          - ThesaurusManager
          - UserManager
          - WordValuesManager
          - ApiImport
          - ApiAnalytics
          - ApiPublicQueries
          - ApiConfig
          - ApiJobs
          - ApiDatabase
          - ApiInstoreAds
          - ApiManage
          - ApiLicence
          - ApiUsers
          type: string
      - description: Filter users assigned a specific channel.
        in: query
        name: channel
        schema:
          type: string
      - description: Filter users who are part of a specific group.
        in: query
        name: group
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserInfo'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Get the users, which fulfil the given filters.
      tags:
      - users
      x-accepts: application/json
    post:
      deprecated: false
      operationId: createUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Create a new local user. Non-admin user are not allowed to create user
        with api roles or admin user. Only channels known by the creating user can
        be added to the new user.
      tags:
      - users
      x-codegen-request-body-name: user
      x-contentType: application/json
      x-accepts: application/json
    put:
      deprecated: false
      operationId: updateUserUsingPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        description: user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Update user ui settings and permissions. Non-admin user are not allowed
        to add api roles or channels unknown to the creating user. Use dedicated api,
        if you want to change the password.
      tags:
      - users
      x-codegen-request-body-name: user
      x-contentType: application/json
      x-accepts: application/json
  /rest/v4/users/{userName}:
    delete:
      deprecated: false
      operationId: deleteUserUsingDELETE
      parameters:
      - description: The name of user that will be deleted.
        in: path
        name: userName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Delete user.
      tags:
      - users
      x-accepts: application/json
  /rest/v4/users/{userName}/password:
    put:
      deprecated: false
      operationId: updatePasswordUsingPUT
      parameters:
      - description: The name of the user, whose password should be changed.
        in: path
        name: userName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: password
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Server Error
      security:
      - basicAuth: []
      - oAuth2:
        - users
      summary: Update user password. The password is expected to be plain text. Only
        passwords for local users can be changed.
      tags:
      - users
      x-codegen-request-body-name: password
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    AdvisorCampaignStatusHolder:
      example:
        id: id
        answerPath: _0_0_0_1
      properties:
        answerPath:
          description: 'The currently active path within the advisor tree, which should
            end at an answer: _QuestionID_AnswerID_QuestionID_AnswerID'
          example: _0_0_0_1
          type: string
        id:
          description: ID of the advisor campaign.
          type: string
      required:
      - answerPath
      - id
      title: AdvisorCampaignStatusHolder
      type: object
    Answer:
      example:
        questions:
        - null
        - null
        id: id
        text: text
        selected: true
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        id:
          description: ID of this answer.
          type: string
        questions:
          description: The questions to be shown when the answer is selected.
          items:
            $ref: '#/components/schemas/Question'
          type: array
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        selected:
          description: True if the answer has been selected.
          type: boolean
        text:
          description: Text, shown when the answer is active.
          type: string
      required:
      - id
      - searchParams
      - selected
      - text
      title: Answer
      type: object
    ApiError:
      description: Contains information which will be returned when an error occurs.
      properties:
        error:
          description: A short error description
          example: Bad Request
          type: string
        errorDescription:
          description: A description of the error cause
          example: Parameter 'channel' must be present
          type: string
        stacktrace:
          description: The stacktrace from the error (will only be transmitted when
            the query parameter verbose=true was added to the request)
          example: "de.factfinder.validation.ValidationException, \tat de.factfinder.validation.Validator.validate(Validator.java:24)"
          items:
            type: string
          type: array
      required:
      - error
      title: ApiError
      type: object
    BreadCrumbTrailItem:
      example:
        associatedFieldName: associatedFieldName
        text: text
        type: search
        value: '{}'
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        associatedFieldName:
          description: Contains the name of the field on which the filter operates.
            Used for filter type items.
          type: string
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        text:
          description: The text to be displayed to the user.
          type: string
        type:
          description: Breadcrumb trail item type.
          enum:
          - search
          - filter
          - advisor
          - unspecified
          type: string
        value:
          description: Contains information corresponding to the item type (for example,
            contains the search term for the search type).
          properties: {}
          type: object
      required:
      - type
      title: BreadCrumbTrailItem
      type: object
    Campaign:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        excludeProductsNotInRange: true
        flavour: ADVISOR
        activeQuestions:
        - visible: true
          answers:
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          id: id
          text: text
        - visible: true
          answers:
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          id: id
          text: text
        name: name
        excludeProductsNotInMarkets: true
        feedbackTexts:
        - html: true
          label: product detail - below product
          position: 7
          text: text
          teaser: true
        - html: true
          label: product detail - below product
          position: 7
          text: text
          teaser: true
        id: id
        category: category
        advisorTree:
        - visible: true
          answers:
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          id: id
          text: text
        - visible: true
          answers:
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - questions:
            - null
            - null
            id: id
            text: text
            selected: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          id: id
          text: text
        target:
          destination: https://www.shop.de/about-us/contact.html
          name: name
      properties:
        activeQuestions:
          description: The currently active questions to be shown to the user. These
            questions do not need to be the root questions, in case the user has already
            answered a question.
          items:
            $ref: '#/components/schemas/Question'
          type: array
        advisorTree:
          description: The advisor root questions associated with this campaign.
          items:
            $ref: '#/components/schemas/Question'
          type: array
        category:
          description: The category of the campaign. May be empty.
          type: string
        excludeProductsNotInMarkets:
          description: The setting which decides whether pushed products should be
            excluded if they are not mapped to any selected market.
          type: boolean
        excludeProductsNotInRange:
          description: The setting which decides whether pushed products should be
            excluded if they are not close enough to the search location.
          type: boolean
        feedbackTexts:
          description: The feedback text lines that will be displayed to the user.
          items:
            $ref: '#/components/schemas/FeedbackText'
          type: array
        flavour:
          description: The kind of the campaign.
          enum:
          - ADVISOR
          - REDIRECT
          - FEEDBACK
          - PRODUCT
          type: string
        hits:
          description: The records associated with the campaign, if it should push
            products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
        id:
          description: The ID of the campaign.
          type: string
        name:
          description: The name of the campaign.
          type: string
        target:
          $ref: '#/components/schemas/Target'
      required:
      - advisorTree
      - category
      - flavour
      title: Campaign
      type: object
    CartOrCheckoutEvent:
      example:
        masterId: masterId
        purchaserId: purchaserId
        price: 6.027456183070403
        count: 0
        campaign: campaign
        id: id
        title: title
        userId: userId
        sid: sid
      properties:
        campaign:
          description: If the product was added to search result by a campaign, this
            field should contain the campaign ID.
          type: string
        count:
          description: The number of items.
          format: int32
          type: integer
        id:
          description: The ID of the product.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        price:
          description: The single-item price of the product.
          format: double
          type: number
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The ID of the user who issued the request.
          type: string
      required:
      - count
      - id
      - sid
      title: CartOrCheckoutEvent
      type: object
    CategoryNavigation:
      example:
        timedOut: true
        facets:
        - associatedFieldName: associatedFieldName
          filterStyle: DEFAULT
          selectionType: singleHideUnselected
          unit: cm
          elements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          name: name
          selectedElements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          type: FLOAT
          detailedLinks: 0
          showPreviewImages: true
        - associatedFieldName: associatedFieldName
          filterStyle: DEFAULT
          selectionType: singleHideUnselected
          unit: cm
          elements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          name: name
          selectedElements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          type: FLOAT
          detailedLinks: 0
          showPreviewImages: true
      properties:
        facets:
          items:
            $ref: '#/components/schemas/Facet'
          type: array
        timedOut:
          description: If true, this search took longer than the timeout currently
            defined. Therefore, the results may not contain all relevant products.
          type: boolean
      required:
      - timedOut
      title: CategoryNavigation
      type: object
    ClickEvent:
      example:
        masterId: masterId
        score: 5.962133916683182
        purchaserId: purchaserId
        pos: 1
        query: query
        campaign: campaign
        pageSize: 6
        id: id
        page: 0
        title: title
        userId: userId
        sid: sid
      properties:
        campaign:
          description: If the product was added to search results by a campaign, this
            field should contain the campaign ID.
          type: string
        id:
          description: The ID of the product.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        page:
          description: The page number of the search result that contains the product.
          format: int32
          type: integer
        pageSize:
          description: The current page size (possibly adjusted by the user) when
            the product was clicked.
          format: int32
          type: integer
        pos:
          description: The overall position of the product inside the search result.
          exclusiveMinimum: false
          format: int32
          minimum: 1
          type: integer
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        query:
          description: The search term that the user searched for.
          type: string
        score:
          description: The score of the product.
          format: double
          type: number
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The ID of the user who issued the request.
          type: string
      required:
      - id
      - pos
      - query
      - sid
      title: ClickEvent
      type: object
    CompareAttribute:
      example:
        sourceField: sourceField
        name: name
        different: true
      properties:
        different:
          description: Set to true if the compared products have different values
            for the attribute.
          type: boolean
        name:
          description: The name of the attribute.
          type: string
        sourceField:
          description: The name of the database field that contains the attribute.
          type: string
      required:
      - different
      - name
      - sourceField
      title: CompareAttribute
      type: object
    CompareResult:
      example:
        records:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        attributes:
        - sourceField: sourceField
          name: name
          different: true
        - sourceField: sourceField
          name: name
          different: true
        fieldRoles:
          key: fieldRoles
      properties:
        attributes:
          description: The result of the comparison process, with information about
            differences.
          items:
            $ref: '#/components/schemas/CompareAttribute'
          type: array
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        records:
          description: The records that were compared.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
      required:
      - attributes
      - fieldRoles
      - records
      title: CompareResult
      type: object
    CustomParameter:
      example:
        cacheIrrelevant: true
        values:
        - values
        - values
        name: name
      properties:
        cacheIrrelevant:
          description: When set to true, the custom parameter will not influence caching.
          type: boolean
        name:
          description: The parameter name.
          type: string
        values:
          description: The parameter values.
          items:
            type: string
          type: array
      required:
      - cacheIrrelevant
      - name
      - values
      title: CustomParameter
      type: object
    CustomerPriceRecord:
      additionalProperties:
        properties: {}
        type: object
      example:
        ArticleNumber: 123-4567
        futurePrice:
          "1514": 44.11
          "4651": 42.17
        price:
          "1417": 44.14
          "1514": 44.22
          "4651": 42.12
      title: CustomerPriceRecord
      type: object
    CustomerPriceUpdateResult:
      example:
        success: true
        record:
          key: '{}'
        warnings:
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        error:
          stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        error:
          $ref: '#/components/schemas/ErrorDescription'
        record:
          additionalProperties:
            properties: {}
            type: object
          description: The original input of the operation (will only be transmitted
            when the query parameter verbose=true was added to the request).
          type: object
        success:
          description: If true, the operation succeeded. Otherwise an error occurred
            which will be described in the error field.
          example: true
          type: boolean
        warnings:
          description: A list of all warnings.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - success
      title: CustomerPriceUpdateResult
      type: object
    DatabaseState:
      example:
        deltaErrorCount: 6
        deltaVersion: 1
        databaseVersion: 0
      properties:
        databaseVersion:
          description: The version of the current worldmatch database. If the databaseVersion
            of a worker is less than the databaseVersion of the director, the worker
            needs to reload the whole worldmatch database in order to synchronize
            itself with the director.
          format: int64
          type: integer
        deltaErrorCount:
          description: The number of errors (rejected delta updates) which occurred
            while trying to synchronize worker and director. Reloading the worldmatch
            database resets this counter to zero.
          format: int64
          type: integer
        deltaVersion:
          description: The number of delta updates applied to the current worldmatch
            database. If the deltaVersion of a worker is less than the deltaVersion
            of the directory, but the databaseVersions are equal, applying the missing
            delta updates to the worker is sufficient to  synchronize worker and director.
          format: int64
          type: integer
      title: DatabaseState
      type: object
    DeleteMarketRequest:
      example:
        marketIds:
        - marketIds
        - marketIds
      properties:
        marketIds:
          description: The ids of the markets which should be deleted.
          items:
            type: string
          type: array
      title: DeleteMarketRequest
      type: object
    DeleteRequest:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          description: The ids of the records which should be deleted.
          items:
            type: string
          type: array
      title: DeleteRequest
      type: object
    DeleteResult:
      example:
        recordId: recordId
        success: true
        warnings:
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        error:
          stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        error:
          $ref: '#/components/schemas/ErrorDescription'
        recordId:
          description: The id of the record which should be deleted.
          type: string
        success:
          description: If true, the operation succeeded. Otherwise an error occurred
            which will be described in the error field.
          example: true
          type: boolean
        warnings:
          description: A list of all warnings.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - success
      title: DeleteResult
      type: object
    DeltaUpdateResult:
      example:
        success: true
        record:
          key: '{}'
        warnings:
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        error:
          stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        error:
          $ref: '#/components/schemas/ErrorDescription'
        record:
          additionalProperties:
            properties: {}
            type: object
          description: The original input of the operation (will only be transmitted
            when the query parameter verbose=true was added to the request).
          type: object
        success:
          description: If true, the operation succeeded. Otherwise an error occurred
            which will be described in the error field.
          example: true
          type: boolean
        warnings:
          description: A list of all warnings.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - success
      title: DeltaUpdateResult
      type: object
    DescribedSortItem:
      example:
        name: name
        description: description
        selected: true
        order: asc
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        description:
          description: The sorting option description, which should be displayed frontend.
          type: string
        name:
          description: The name of the field to be sorted by, or 'Relevancy', for
            score based sorting.
          type: string
        order:
          description: The sort order direction.
          enum:
          - asc
          - desc
          type: string
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        selected:
          description: If true, the sorting is applied to the current search result.
          type: boolean
      required:
      - description
      - name
      - order
      - searchParams
      - selected
      title: DescribedSortItem
      type: object
    DetailPage:
      example:
        similarProducts:
          hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          attributes:
          - name: name
            value: value
          - name: name
            value: value
        campaigns:
        - hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          excludeProductsNotInRange: true
          flavour: ADVISOR
          activeQuestions:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          name: name
          excludeProductsNotInMarkets: true
          feedbackTexts:
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          id: id
          category: category
          advisorTree:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          target:
            destination: https://www.shop.de/about-us/contact.html
            name: name
        - hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          excludeProductsNotInRange: true
          flavour: ADVISOR
          activeQuestions:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          name: name
          excludeProductsNotInMarkets: true
          feedbackTexts:
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          id: id
          category: category
          advisorTree:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          target:
            destination: https://www.shop.de/about-us/contact.html
            name: name
        record:
          masterValues:
            key: '{}'
          id: id
          variantValues:
          - null
          - null
        fieldRoles:
          key: fieldRoles
        recommendations:
          hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          timedOut: true
      properties:
        campaigns:
          description: Active campaigns for the product with the requested ID.
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        recommendations:
          $ref: '#/components/schemas/RecommendationResult'
        record:
          $ref: '#/components/schemas/RecordWithId'
        similarProducts:
          $ref: '#/components/schemas/SimilarProducts'
      required:
      - fieldRoles
      title: DetailPage
      type: object
    ErrorDescription:
      description: Contains information which will be returned when an error occurs.
      example:
        stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
          value already exists: ArticleNumber=1234'
        name: FieldConstraintException
        description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        description:
          description: A description of the error cause
          example: 'Unique value already exists: ArticleNumber=1234'
          type: string
        name:
          description: Name of the error
          example: FieldConstraintException
          type: string
        stacktrace:
          description: The stacktrace from the error (will only be transmitted when
            the query parameter verbose=true was added to the request)
          example: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          items:
            type: string
          type: array
      required:
      - name
      title: ErrorDescription
      type: object
    ExpirationData:
      example:
        database: database
        modified: 2000-01-23T04:56:07.000+00:00
        modifiedLoaded: 2000-01-23T04:56:07.000+00:00
        error: error
      properties:
        database:
          description: Name of the Database.
          type: string
        error:
          description: Error message of the error that occurred while getting the
            expiration info.
          type: string
        modified:
          description: Date of the last modification time of the database.
          format: date-time
          type: string
        modifiedLoaded:
          description: Date of the last modification time of the loaded database.
          format: date-time
          type: string
      required:
      - database
      title: ExpirationData
      type: object
    ExpirationMessage:
      example:
        channel: channel
        expirationData:
        - database: database
          modified: 2000-01-23T04:56:07.000+00:00
          modifiedLoaded: 2000-01-23T04:56:07.000+00:00
          error: error
        - database: database
          modified: 2000-01-23T04:56:07.000+00:00
          modifiedLoaded: 2000-01-23T04:56:07.000+00:00
          error: error
      properties:
        channel:
          description: Name of the channel.
          type: string
        expirationData:
          description: The expiration status of the database.
          items:
            $ref: '#/components/schemas/ExpirationData'
          type: array
      required:
      - channel
      - expirationData
      title: ExpirationMessage
      type: object
    Facet:
      example:
        associatedFieldName: associatedFieldName
        filterStyle: DEFAULT
        selectionType: singleHideUnselected
        unit: cm
        elements:
        - selectedMinValue: 7.061401241503109
          selectedMaxValue: 2.3021358869347655
          distance: 5.637376656633329
          totalHits: 9
          previewImageURL: previewImageURL
          clusterLevel: 5
          showDistance: true
          text: text
          absoluteMaxValue: 6.027456183070403
          absoluteMinValue: 1.4658129805029452
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - selectedMinValue: 7.061401241503109
          selectedMaxValue: 2.3021358869347655
          distance: 5.637376656633329
          totalHits: 9
          previewImageURL: previewImageURL
          clusterLevel: 5
          showDistance: true
          text: text
          absoluteMaxValue: 6.027456183070403
          absoluteMinValue: 1.4658129805029452
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        name: name
        selectedElements:
        - selectedMinValue: 7.061401241503109
          selectedMaxValue: 2.3021358869347655
          distance: 5.637376656633329
          totalHits: 9
          previewImageURL: previewImageURL
          clusterLevel: 5
          showDistance: true
          text: text
          absoluteMaxValue: 6.027456183070403
          absoluteMinValue: 1.4658129805029452
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - selectedMinValue: 7.061401241503109
          selectedMaxValue: 2.3021358869347655
          distance: 5.637376656633329
          totalHits: 9
          previewImageURL: previewImageURL
          clusterLevel: 5
          showDistance: true
          text: text
          absoluteMaxValue: 6.027456183070403
          absoluteMinValue: 1.4658129805029452
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        type: FLOAT
        detailedLinks: 0
        showPreviewImages: true
      properties:
        associatedFieldName:
          description: The name of the field that contains the values represented
            by this facet.
          type: string
        detailedLinks:
          description: Number of links to be displayed (for the selection menu).
          format: int32
          type: integer
        elements:
          description: The elements shown in the filter.
          items:
            $ref: '#/components/schemas/FacetElement'
          type: array
        filterStyle:
          description: The style in which the filter should be displayed.
          enum:
          - DEFAULT
          - SLIDER
          - MULTISELECT
          - TREE
          type: string
        name:
          description: Filter name that should be displayed to the user.
          type: string
        selectedElements:
          description: The elements of the filter that are currently selected.
          items:
            $ref: '#/components/schemas/FacetElement'
          type: array
        selectionType:
          description: Defines the way this filter behaves when elements are selected.
          enum:
          - singleHideUnselected
          - singleShowUnselected
          - multiSelectOr
          - multiSelectAnd
          type: string
        showPreviewImages:
          description: If true, preview images should be displayed to the user.
          type: boolean
        type:
          description: The type of the filter elements.
          enum:
          - FLOAT
          - INTEGER
          - MULTI
          - TEXT
          - CATEGORY_PATH
          - BOOLEAN
          - DATE
          - GTIN
          - ALPHANUMERIC
          - PROPERTY
          - GEO
          type: string
        unit:
          description: The units to be shown, if filter elements represent (for instance)
            length, or weight.
          example: cm
          type: string
      required:
      - associatedFieldName
      - detailedLinks
      - elements
      - filterStyle
      - selectedElements
      - selectionType
      - showPreviewImages
      title: Facet
      type: object
    FacetElement:
      example:
        selectedMinValue: 7.061401241503109
        selectedMaxValue: 2.3021358869347655
        distance: 5.637376656633329
        totalHits: 9
        previewImageURL: previewImageURL
        clusterLevel: 5
        showDistance: true
        text: text
        absoluteMaxValue: 6.027456183070403
        absoluteMinValue: 1.4658129805029452
        selected: "TRUE"
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        absoluteMaxValue:
          description: The absolute maximum value for the overall slider range.
          format: double
          type: number
        absoluteMinValue:
          description: The absolute minimum value for the overall slider range.
          format: double
          type: number
        clusterLevel:
          description: Level in the cluster hierarchy. Corresponding subcategories
            have a higher (deeper) level.
          format: int32
          type: integer
        distance:
          description: The distance between the location of the search and the market
            location associated with this element.
          format: double
          type: number
        previewImageURL:
          description: URL to the preview image to be displayed with the element.
          type: string
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        selected:
          description: TRUE, if the element is currently selected, IMPLICIT, if the
            selection is implicit, IRRELEVANT means, that the element has been selected
            by the user, but does not match any record of the search result, otherwise
            FALSE.
          enum:
          - "TRUE"
          - "FALSE"
          - IMPLICIT
          - IRRELEVANT
          type: string
        selectedMaxValue:
          description: The maximum value of the currently selected slider range.
          format: double
          type: number
        selectedMinValue:
          description: The minimum value of the currently selected slider range.
          format: double
          type: number
        showDistance:
          description: If 'true', the distance should be added to the element name
            label by frontend.
          type: boolean
        text:
          description: The text to be displayed to the user.
          type: string
        totalHits:
          description: The number of products that the search result should contain
            when this facet element is selected.
          format: int32
          type: integer
      required:
      - clusterLevel
      - selected
      title: FacetElement
      type: object
    FeedbackEvent:
      example:
        query: query
        positive: true
        message: message
        sid: sid
      properties:
        message:
          description: Additional information provided by the user.
          type: string
        positive:
          description: Set to true when the user gives a positive assessment of the
            result, otherwise false.
          type: boolean
        query:
          description: The search term that produced the corresponding search result.
          type: string
        sid:
          description: The session ID.
          type: string
      required:
      - positive
      - query
      - sid
      title: FeedbackEvent
      type: object
    FeedbackText:
      example:
        html: true
        label: product detail - below product
        position: 7
        text: text
        teaser: true
      properties:
        html:
          description: Set to true, if the text should be displayed as HTML.
          type: boolean
        label:
          description: Describes where the text should be displayed.
          example: product detail - below product
          type: string
        position:
          description: The position the text should be displayed at if it is a teaser
          format: int32
          type: integer
        teaser:
          description: Set to true, if the text is considered a teaser
          type: boolean
        text:
          description: The text to be shown to the user.
          type: string
      required:
      - html
      - label
      - teaser
      title: FeedbackText
      type: object
    Filter:
      example:
        values:
        - exclude: true
          type: or
          value: '{}'
        - exclude: true
          type: or
          value: '{}'
        name: name
        substring: true
      properties:
        name:
          description: The name of the filter.
          type: string
        substring:
          description: If true, filter values will be applied as 'contains' instead
            of 'equals'.
          type: boolean
        values:
          description: Filter values.
          items:
            $ref: '#/components/schemas/FilterValue'
          type: array
      required:
      - name
      - substring
      - values
      title: Filter
      type: object
    FilterValue:
      example:
        exclude: true
        type: or
        value: '{}'
      properties:
        exclude:
          description: When set to true, the filter will match when the record value
            does not equal the filter value.
          type: boolean
        type:
          description: Describes how this filter value should interact with the corresponding
            filter field.
          enum:
          - or
          - and
          type: string
        value:
          description: The value to which the record values will be compared.
          properties: {}
          type: object
      required:
      - exclude
      - type
      - value
      title: FilterValue
      type: object
    FlatRecord:
      additionalProperties:
        properties: {}
        type: object
      example:
        ArticleNumber: 123-4567
        BooleanList:
        - true
        - false
        - true
        - true
        Category:
        - - Outdoor equipment
          - Backpacks
          - Mountaineering backpacks
        - - Outdoor equipment
          - Backpacks
          - Daypacks
        Colors:
        - red
        - grey
        GtinList:
        - 0-943396-04-1
        - 0-85131-041-1
        Image: http://demoshop.fact-finder.de/demoshop-images/bergfreunde/sol_502-2806-0111_pic1_1.jpg
        InsertDate: 2017-03-02T01:00:00+01:00
        IsMaster: true
        Manufacturer: Osprey
        MasterArticleNumber: 3d407d51e8ca255a429fab65961428cc
        MultiFilter:
          Features:
          - Ice-pick holder
          - Front access
          - Mesh back
          - Hydration compatible
          Recommended use:
          - Trail running
          - Trekking
          - Hillwalking
          Volume:
          - 30.5
          Weight:
          - 860
        Price: 100.95
        RatingCount: 0
        Title: Osprey - Women's Tempest 30 - Touring backpack
        VAT: "20"
      title: FlatRecord
      type: object
    FlatRecordsResult:
      description: Contains a list of worldmatch records.
      example:
        records:
        - ArticleNumber: 123-4567
          BooleanList:
          - true
          - false
          - true
          - true
          Category:
          - - Outdoor equipment
            - Backpacks
            - Mountaineering backpacks
          - - Outdoor equipment
            - Backpacks
            - Daypacks
          Colors:
          - red
          - grey
          GtinList:
          - 0-943396-04-1
          - 0-85131-041-1
          Image: http://demoshop.fact-finder.de/demoshop-images/bergfreunde/sol_502-2806-0111_pic1_1.jpg
          InsertDate: 2017-03-02T01:00:00+01:00
          IsMaster: true
          Manufacturer: Osprey
          MasterArticleNumber: 3d407d51e8ca255a429fab65961428cc
          MultiFilter:
            Features:
            - Ice-pick holder
            - Front access
            - Mesh back
            - Hydration compatible
            Recommended use:
            - Trail running
            - Trekking
            - Hillwalking
            Volume:
            - 30.5
            Weight:
            - 860
          Price: 100.95
          RatingCount: 0
          Title: Osprey - Women's Tempest 30 - Touring backpack
          VAT: "20"
        - ArticleNumber: 123-4567
          BooleanList:
          - true
          - false
          - true
          - true
          Category:
          - - Outdoor equipment
            - Backpacks
            - Mountaineering backpacks
          - - Outdoor equipment
            - Backpacks
            - Daypacks
          Colors:
          - red
          - grey
          GtinList:
          - 0-943396-04-1
          - 0-85131-041-1
          Image: http://demoshop.fact-finder.de/demoshop-images/bergfreunde/sol_502-2806-0111_pic1_1.jpg
          InsertDate: 2017-03-02T01:00:00+01:00
          IsMaster: true
          Manufacturer: Osprey
          MasterArticleNumber: 3d407d51e8ca255a429fab65961428cc
          MultiFilter:
            Features:
            - Ice-pick holder
            - Front access
            - Mesh back
            - Hydration compatible
            Recommended use:
            - Trail running
            - Trekking
            - Hillwalking
            Volume:
            - 30.5
            Weight:
            - 860
          Price: 100.95
          RatingCount: 0
          Title: Osprey - Women's Tempest 30 - Touring backpack
          VAT: "20"
        fieldRoles:
          key: fieldRoles
      properties:
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        records:
          description: A list of found records. Records for IDs which are not present
            in database will be missing.
          items:
            $ref: '#/components/schemas/FlatRecord'
          type: array
      required:
      - fieldRoles
      - records
      title: FlatRecordsResult
      type: object
    FullRecord:
      description: Represents a record with master and variant values.
      example:
        masterValues:
          key: '{}'
        variantValues:
        - null
        - null
      properties:
        masterValues:
          additionalProperties:
            properties: {}
            type: object
          description: Contains all fields in the record, with a string representation
            of the respective values.
          type: object
        variantValues:
          description: Contains variants. The values are mapped from field names to
            the field value.
          items:
            $ref: '#/components/schemas/VariantValues'
          type: array
      required:
      - masterValues
      - variantValues
      title: FullRecord
      type: object
    FullRecordsResult:
      description: Contains a list of full records with master and variant values.
      example:
        records:
        - masterValues:
            key: '{}'
          variantValues:
          - null
          - null
        - masterValues:
            key: '{}'
          variantValues:
          - null
          - null
        fieldRoles:
          key: fieldRoles
      properties:
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        records:
          description: A list of found records. Records for IDs which are not present
            in database will be missing.
          items:
            $ref: '#/components/schemas/FullRecord'
          type: array
      required:
      - fieldRoles
      - records
      title: FullRecordsResult
      type: object
    Geo:
      example:
        markets:
        - distance: 3.616076749251911
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          id: id
          hasProducts: true
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - distance: 3.616076749251911
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          id: id
          hasProducts: true
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        selectedMarkets:
        - distance: 3.616076749251911
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          id: id
          hasProducts: true
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - distance: 3.616076749251911
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          id: id
          hasProducts: true
          selected: "TRUE"
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        showDistance: true
      properties:
        markets:
          description: The unselected markets
          items:
            $ref: '#/components/schemas/Market'
          type: array
        selectedMarkets:
          description: The selected markets
          items:
            $ref: '#/components/schemas/Market'
          type: array
        showDistance:
          description: Should show the distance attached to the markets.
          type: boolean
      required:
      - markets
      - selectedMarkets
      - showDistance
      title: Geo
      type: object
    GeoRecord:
      additionalProperties:
        properties: {}
        type: object
      example:
        ArticleNumber: 016-1545
        geoBoost: 14
        geoPrice: 300.95
        marketId: "506223"
      title: GeoRecord
      type: object
    GeoUpdateResult:
      example:
        success: true
        record:
          key: '{}'
        warnings:
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        error:
          stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        error:
          $ref: '#/components/schemas/ErrorDescription'
        record:
          additionalProperties:
            properties: {}
            type: object
          description: The original input of the operation (will only be transmitted
            when the query parameter verbose=true was added to the request).
          type: object
        success:
          description: If true, the operation succeeded. Otherwise an error occurred
            which will be described in the error field.
          example: true
          type: boolean
        warnings:
          description: A list of all warnings.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - success
      title: GeoUpdateResult
      type: object
    Group:
      example:
        roles:
        - AbTestManager
        - AbTestManager
        name: name
      properties:
        name:
          description: The name of the group.
          type: string
        roles:
          description: The roles that will be assigned to the users who are part of
            this group.
          items:
            enum:
            - AbTestManager
            - AfterSearchNavigationManager
            - BackupManager
            - CacheManager
            - CampaignManager
            - ConfiguratorManager
            - DeploymentManager
            - ImportManager
            - IntermediateOnlyImportManager
            - InstallManager
            - LanguageManager
            - LogfileAnalyzerManager
            - MayChangePassword
            - MessagesManager
            - NotificationManager
            - PreprocessorManager
            - RankingManager
            - RecommendationEngineManager
            - SearchInterfaceUser
            - SearchManager
            - ShowHelpSection
            - SuggestManager
            - ThesaurusManager
            - UserManager
            - WordValuesManager
            - ApiImport
            - ApiAnalytics
            - ApiPublicQueries
            - ApiConfig
            - ApiJobs
            - ApiInstoreAds
            - ApiDatabase
            - ApiManage
            - ApiLicence
            - ApiUsers
            type: string
          type: array
      required:
      - name
      - roles
      title: Group
      type: object
    ImportChannelResult:
      example:
        errorMessages:
        - errorMessages
        - errorMessages
        statusMessages:
        - statusMessages
        - statusMessages
        importType: DATA
        durationInSeconds: 0
        importedRecords: 1
        importedFields: 6
        channel: channel
        importedWorldmatchDocuments: 5
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        channel:
          description: The channel for which the import was performed.
          type: string
        durationInSeconds:
          description: The duration of the import process (seconds).
          format: int64
          type: integer
        errorMessages:
          description: Import error messages.
          items:
            type: string
          type: array
        importType:
          description: The type of data imported.
          enum:
          - DATA
          - ATTRIBUTES_AND_DATA
          - SUGGEST
          - RECOMMENDATION
          - RANKING
          - CUSTOMER_SPECIFIC_PRICING
          - GEO
          type: string
        importedFields:
          description: The number of fields imported.
          format: int32
          type: integer
        importedRecords:
          description: The number of records imported.
          format: int32
          type: integer
        importedWorldmatchDocuments:
          description: The number of records imported into worldmatch.
          format: int32
          type: integer
        startDate:
          description: The time and date that the import was started.
          format: date-time
          type: string
        statusMessages:
          description: Import status messages.
          items:
            type: string
          type: array
      required:
      - channel
      - durationInSeconds
      - errorMessages
      - importType
      - importedFields
      - startDate
      - statusMessages
      title: ImportChannelResult
      type: object
    ImportCount:
      example:
        count: 0
        type: DATA
      properties:
        count:
          format: int64
          type: integer
        type:
          enum:
          - DATA
          - ATTRIBUTES_AND_DATA
          - SUGGEST
          - RECOMMENDATION
          - RANKING
          - CUSTOMER_SPECIFIC_PRICING
          - GEO
          type: string
      title: ImportCount
      type: object
    ImportState:
      example:
        importCounts:
        - count: 0
          type: DATA
        - count: 0
          type: DATA
      properties:
        importCounts:
          description: Number of imports completed per import type.
          items:
            $ref: '#/components/schemas/ImportCount'
          type: array
      title: ImportState
      type: object
    JobTriggerResult:
      example:
        jobName: jobName
        errorMessage: errorMessage
        jobGroup: jobGroup
        status: SUCCESS
      properties:
        errorMessage:
          description: The error message describing why the job could not be completed.
          type: string
        jobGroup:
          description: The group of the triggered job.
          type: string
        jobName:
          description: The name of the triggered job.
          type: string
        status:
          description: Results of the attempt to trigger the job.
          enum:
          - SUCCESS
          - FAILURE
          type: string
      required:
      - status
      title: JobTriggerResult
      type: object
    LandingPageClickEvent:
      example:
        masterId: masterId
        purchaserId: purchaserId
        campaign: campaign
        id: id
        pageId: pageId
        title: title
        userId: userId
        sid: sid
      properties:
        campaign:
          description: The ID of the campaign, which added the product to the landing
            page.
          type: string
        id:
          description: The ID of the product.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        pageId:
          description: The ID of the landing page.
          type: string
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The ID of the user who issued the request.
          type: string
      required:
      - campaign
      - id
      - pageId
      - sid
      title: LandingPageClickEvent
      type: object
    Location:
      example:
        latitude: 18.494211295267263
        longitude: -127.23073270189397
      properties:
        latitude:
          description: The latitude coordinate of the location.
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 9E+1
          minimum: -9E+1
          type: number
        longitude:
          description: The longitude coordinate of the location.
          exclusiveMaximum: false
          exclusiveMinimum: false
          format: double
          maximum: 1.8E+2
          minimum: -1.8E+2
          type: number
      title: Location
      type: object
    LoginEvent:
      example:
        purchaserId: purchaserId
        userId: userId
        sid: sid
      properties:
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        sid:
          description: Session ID.
          type: string
        userId:
          description: The ID of the user currently logged in.
          type: string
      required:
      - sid
      - userId
      title: LoginEvent
      type: object
    Market:
      example:
        distance: 3.616076749251911
        location:
          latitude: 18.494211295267263
          longitude: -127.23073270189397
        id: id
        hasProducts: true
        selected: "TRUE"
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        distance:
          description: The distance between the location of the search and the market
            location associated with this element.
          format: double
          type: number
        hasProducts:
          description: True, if the market has at least one product mapped to it in
            the current search result, otherwise false.
          type: boolean
        id:
          description: Id of the market
          type: string
        location:
          $ref: '#/components/schemas/Location'
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        selected:
          description: TRUE, if the element is currently selected, otherwise FALSE.
          enum:
          - "TRUE"
          - "FALSE"
          - IMPLICIT
          - IRRELEVANT
          type: string
      title: Market
      type: object
    MarketRecord:
      additionalProperties:
        properties: {}
        type: object
      example:
        location:
          latitude: 52.520008
          longitude: 13.404954
        marketId: berlin
      title: MarketRecord
      type: object
    MarketUpdateResult:
      example:
        success: true
        record:
          key: '{}'
        warnings:
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        - stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
        error:
          stacktrace: 'de.factfinder.worldmatch.index.FieldConstraintException: Unique
            value already exists: ArticleNumber=1234'
          name: FieldConstraintException
          description: 'Unique value already exists: ArticleNumber=1234'
      properties:
        error:
          $ref: '#/components/schemas/ErrorDescription'
        record:
          additionalProperties:
            properties: {}
            type: object
          description: The original input of the operation (will only be transmitted
            when the query parameter verbose=true was added to the request).
          type: object
        success:
          description: If true, the operation succeeded. Otherwise an error occurred
            which will be described in the error field.
          example: true
          type: boolean
        warnings:
          description: A list of all warnings.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - success
      title: MarketUpdateResult
      type: object
    MetaRequest:
      example:
        ids:
        - ids
        - ids
      properties:
        ids:
          description: The record ids of the records which should be returned.
          items:
            type: string
          type: array
      required:
      - ids
      title: MetaRequest
      type: object
    NavigationParams:
      example:
        activeAbTests:
          key: activeAbTests
        hitsPerPage: 0
        maxCountVariants: 6
        channel: channel
        followSearch: followSearch
        maxDistance: 1.1465812980502945
        filters:
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        marketIds:
        - marketIds
        - marketIds
        sortItems:
        - name: name
          order: asc
        - name: name
          order: asc
        excludeProductsNotInRange: true
        purchaserId: purchaserId
        customParameters:
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        location:
          latitude: 18.494211295267263
          longitude: -127.23073270189397
        page: 1
        advisorStatus:
          id: id
          answerPath: _0_0_0_1
      properties:
        activeAbTests:
          additionalProperties:
            type: string
          description: The active ab tests variants.
          type: object
        advisorStatus:
          $ref: '#/components/schemas/AdvisorCampaignStatusHolder'
        channel:
          description: The channel in which the search should be performed.
          type: string
        customParameters:
          description: May be used to provide custom parameters, such as for custom
            classes.
          items:
            $ref: '#/components/schemas/CustomParameter'
          type: array
        excludeProductsNotInRange:
          description: Overrides the excludeProductsNotInRange setting for the geo
            search.
          type: boolean
        filters:
          description: The filters to limit the search result.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        followSearch:
          description: Optional request linking param from a previous search result
            or search param object. Can improve request performance.
          type: string
        hitsPerPage:
          description: Number of products on a single page.
          exclusiveMinimum: false
          format: int32
          minimum: 0
          type: integer
        location:
          $ref: '#/components/schemas/Location'
        marketIds:
          description: Only show products that have values for these market IDs.
          items:
            type: string
          type: array
        maxCountVariants:
          description: Defines the maximum number of variants to be returned in the
            result.
          format: int32
          type: integer
        maxDistance:
          description: Overrides the maximum distance setting for the geo search.
          exclusiveMinimum: false
          format: double
          minimum: 1
          type: number
        page:
          description: The page to be requested within the search result.
          exclusiveMinimum: false
          format: int32
          minimum: 1
          type: integer
        purchaserId:
          description: The ID of the purchaser. This ID is only needed if the 'customer
            specific pricing' module is activated. Otherwise it will be ignored.
          maxLength: 2147483647
          minLength: 1
          type: string
        sortItems:
          description: Specifies the sort order for the search result.
          items:
            $ref: '#/components/schemas/SortItem'
          type: array
      required:
      - channel
      title: NavigationParams
      type: object
    NavigationRequest:
      example:
        searchControlParams:
          useAbTest: true
          useGeo: true
          useRanking: true
          useDeduplication: true
          idsOnly: true
          useFoundWords: true
          deduplicationField: deduplicationField
          useSearch: true
          usePersonalization: true
          useCampaigns: true
          useCache: true
          useSemanticEnhancer: true
          useAso: true
          useAsn: true
        params:
          activeAbTests:
            key: activeAbTests
          hitsPerPage: 0
          maxCountVariants: 6
          channel: channel
          followSearch: followSearch
          maxDistance: 1.1465812980502945
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
        sid: sid
      properties:
        params:
          $ref: '#/components/schemas/NavigationParams'
        searchControlParams:
          $ref: '#/components/schemas/SearchControlParams'
        sid:
          description: The session ID of the user sending this search request.
          type: string
      required:
      - params
      title: NavigationRequest
      type: object
    PageLink:
      example:
        number: 1
        currentPage: true
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        currentPage:
          description: True, when this page is the current page.
          type: boolean
        number:
          description: Number of the page in the search result.
          format: int32
          type: integer
        searchParams:
          $ref: '#/components/schemas/SearchParams'
      required:
      - currentPage
      - number
      title: PageLink
      type: object
    Paging:
      example:
        pageCount: 6
        previousLink:
          number: 1
          currentPage: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        defaultHitsPerPage: 1
        hitsPerPage: 1
        currentPage: 7
        nextLink:
          number: 1
          currentPage: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
      properties:
        currentPage:
          description: The number of the currently selected page.
          format: int32
          type: integer
        defaultHitsPerPage:
          description: The default number of products shown per page, as defined in
            the configuration.
          format: int32
          type: integer
        hitsPerPage:
          description: The number of products shown per page (the last page may contain
            fewer products).
          format: int32
          type: integer
        nextLink:
          $ref: '#/components/schemas/PageLink'
        pageCount:
          description: The total number of pages for this search result.
          format: int32
          type: integer
        previousLink:
          $ref: '#/components/schemas/PageLink'
      required:
      - currentPage
      - hitsPerPage
      - pageCount
      title: Paging
      type: object
    Permissions:
      description: Contains all permission related settings of a FACT-Finder user.
      example:
        channels:
        - channels
        - channels
        roles:
        - AbTestManager
        - AbTestManager
        groups:
        - groups
        - groups
        allowAllCurrentAndFutureChannels: true
      properties:
        allowAllCurrentAndFutureChannels:
          description: If set to true the user has access to all channels. In that
            case any explicitly specified channels are ignored.
          type: boolean
        channels:
          description: The channels assigned to the user.
          items:
            type: string
          type: array
        groups:
          description: The groups assigned to the user.
          items:
            type: string
          type: array
        roles:
          description: The roles assigned to the user.
          items:
            enum:
            - AbTestManager
            - AfterSearchNavigationManager
            - BackupManager
            - CacheManager
            - CampaignManager
            - ConfiguratorManager
            - DeploymentManager
            - ImportManager
            - IntermediateOnlyImportManager
            - InstallManager
            - LanguageManager
            - LogfileAnalyzerManager
            - MayChangePassword
            - MessagesManager
            - NotificationManager
            - PreprocessorManager
            - RankingManager
            - RecommendationEngineManager
            - SearchInterfaceUser
            - SearchManager
            - ShowHelpSection
            - SuggestManager
            - ThesaurusManager
            - UserManager
            - WordValuesManager
            - ApiImport
            - ApiAnalytics
            - ApiPublicQueries
            - ApiConfig
            - ApiJobs
            - ApiInstoreAds
            - ApiDatabase
            - ApiManage
            - ApiLicence
            - ApiUsers
            type: string
          type: array
      required:
      - allowAllCurrentAndFutureChannels
      - channels
      - groups
      - roles
      title: Permissions
      type: object
    PredBasketClickEvent:
      example:
        masterId: masterId
        purchaserId: purchaserId
        id: id
        title: title
        userId: userId
        sid: sid
      properties:
        id:
          description: The ID of the product.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The user ID of the user clicking the suggested product.
          type: string
      required:
      - id
      - sid
      - userId
      title: PredBasketClickEvent
      type: object
    PredictiveBasketResult:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
      properties:
        hits:
          description: Records of the predicted products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
      required:
      - hits
      title: PredictiveBasketResult
      type: object
    Question:
      example:
        visible: true
        answers:
        - questions:
          - null
          - null
          id: id
          text: text
          selected: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - questions:
          - null
          - null
          id: id
          text: text
          selected: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        id: id
        text: text
      properties:
        answers:
          description: The answers associated to this question.
          items:
            $ref: '#/components/schemas/Answer'
          type: array
        id:
          description: The ID of the question.
          type: string
        text:
          description: The text to be shown to the user.
          type: string
        visible:
          description: Set to true when the question is visible.
          type: boolean
      required:
      - answers
      - id
      - text
      - visible
      title: Question
      type: object
    RecommendationClickEvent:
      example:
        masterId: masterId
        purchaserId: purchaserId
        id: id
        mainId: mainId
        title: title
        userId: userId
        sid: sid
      properties:
        id:
          description: The ID of the product.
          type: string
        mainId:
          description: The product ID for which the clicked product was recommended.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The ID of the user who issued the request.
          type: string
      required:
      - id
      - mainId
      - sid
      title: RecommendationClickEvent
      type: object
    RecommendationResult:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        timedOut: true
      properties:
        hits:
          description: Records of the recommended products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
        timedOut:
          description: Set to true when a timeout occurs.
          type: boolean
      required:
      - hits
      - timedOut
      title: RecommendationResult
      type: object
    RecommendationResultWithFieldRoles:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        timedOut: true
        fieldRoles:
          key: fieldRoles
      properties:
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        hits:
          description: Records of the recommended products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
        timedOut:
          description: Set to true when a timeout occurs.
          type: boolean
      required:
      - fieldRoles
      - hits
      - timedOut
      title: RecommendationResultWithFieldRoles
      type: object
    RecordMeta:
      example:
        id: id
        state: VISIBLE
      properties:
        id:
          description: The record ID. Depending on the chosen ID type, this field
            contains the master or variant ID.
          type: string
        state:
          description: The visibility of this record.
          enum:
          - VISIBLE
          - NOT_FOUND
          type: string
      title: RecordMeta
      type: object
    RecordMetaResult:
      example:
        entries:
        - id: id
          state: VISIBLE
        - id: id
          state: VISIBLE
      properties:
        entries:
          description: A list of record meta information.
          items:
            $ref: '#/components/schemas/RecordMeta'
          type: array
      title: RecordMetaResult
      type: object
    RecordWithId:
      example:
        masterValues:
          key: '{}'
        id: id
        variantValues:
        - null
        - null
      properties:
        id:
          description: The ID of the record.
          type: string
        masterValues:
          additionalProperties:
            properties: {}
            type: object
          description: Contains all fields in the record, with a string representation
            of the respective values.
          type: object
        variantValues:
          description: Contains variants. The values are mapped from field names to
            the field value.
          items:
            $ref: '#/components/schemas/VariantValues'
          type: array
      required:
      - id
      - masterValues
      - variantValues
      title: RecordWithId
      type: object
    Result:
      example:
        singleWordResults:
        - totalHits: 4
          previewRecords:
          - score: 4.145608
            masterValues:
              key: '{}'
            id: id
            position: 2
            foundWords:
            - foundWords
            - foundWords
            variantValues:
            - null
            - null
          - score: 4.145608
            masterValues:
              key: '{}'
            id: id
            position: 2
            foundWords:
            - foundWords
            - foundWords
            variantValues:
            - null
            - null
          word: word
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - totalHits: 4
          previewRecords:
          - score: 4.145608
            masterValues:
              key: '{}'
            id: id
            position: 2
            foundWords:
            - foundWords
            - foundWords
            variantValues:
            - null
            - null
          - score: 4.145608
            masterValues:
              key: '{}'
            id: id
            position: 2
            foundWords:
            - foundWords
            - foundWords
            variantValues:
            - null
            - null
          word: word
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        timedOut: true
        answers:
        - questions:
          - null
          - null
          id: id
          text: text
          selected: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - questions:
          - null
          - null
          id: id
          text: text
          selected: true
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        followSearch: followSearch
        paging:
          pageCount: 6
          previousLink:
            number: 1
            currentPage: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          defaultHitsPerPage: 1
          hitsPerPage: 1
          currentPage: 7
          nextLink:
            number: 1
            currentPage: true
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
        scoreFirstHit: 7.457744773683766
        fieldRoles:
          key: fieldRoles
        filters:
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        tookWorldmatch: 9
        articleNumberSearch: true
        breadCrumbTrail:
        - associatedFieldName: associatedFieldName
          text: text
          type: search
          value: '{}'
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - associatedFieldName: associatedFieldName
          text: text
          type: search
          value: '{}'
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        facets:
        - associatedFieldName: associatedFieldName
          filterStyle: DEFAULT
          selectionType: singleHideUnselected
          unit: cm
          elements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          name: name
          selectedElements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          type: FLOAT
          detailedLinks: 0
          showPreviewImages: true
        - associatedFieldName: associatedFieldName
          filterStyle: DEFAULT
          selectionType: singleHideUnselected
          unit: cm
          elements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          name: name
          selectedElements:
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - selectedMinValue: 7.061401241503109
            selectedMaxValue: 2.3021358869347655
            distance: 5.637376656633329
            totalHits: 9
            previewImageURL: previewImageURL
            clusterLevel: 5
            showDistance: true
            text: text
            absoluteMaxValue: 6.027456183070403
            absoluteMinValue: 1.4658129805029452
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          type: FLOAT
          detailedLinks: 0
          showPreviewImages: true
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
        tookTotal: 5
        geo:
          markets:
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          selectedMarkets:
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          showDistance: true
        hits:
        - score: 4.145608
          masterValues:
            key: '{}'
          id: id
          position: 2
          foundWords:
          - foundWords
          - foundWords
          variantValues:
          - null
          - null
        - score: 4.145608
          masterValues:
            key: '{}'
          id: id
          position: 2
          foundWords:
          - foundWords
          - foundWords
          variantValues:
          - null
          - null
        sortItems:
        - name: name
          description: description
          selected: true
          order: asc
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - name: name
          description: description
          selected: true
          order: asc
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        searchControlParams:
          useAbTest: true
          useGeo: true
          useRanking: true
          useDeduplication: true
          idsOnly: true
          useFoundWords: true
          deduplicationField: deduplicationField
          useSearch: true
          usePersonalization: true
          useCampaigns: true
          useCache: true
          useSemanticEnhancer: true
          useAso: true
          useAsn: true
        campaigns:
        - hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          excludeProductsNotInRange: true
          flavour: ADVISOR
          activeQuestions:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          name: name
          excludeProductsNotInMarkets: true
          feedbackTexts:
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          id: id
          category: category
          advisorTree:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          target:
            destination: https://www.shop.de/about-us/contact.html
            name: name
        - hits:
          - values:
              key: '{}'
            id: id
          - values:
              key: '{}'
            id: id
          excludeProductsNotInRange: true
          flavour: ADVISOR
          activeQuestions:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          name: name
          excludeProductsNotInMarkets: true
          feedbackTexts:
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          - html: true
            label: product detail - below product
            position: 7
            text: text
            teaser: true
          id: id
          category: category
          advisorTree:
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          - visible: true
            answers:
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            - questions:
              - null
              - null
              id: id
              text: text
              selected: true
              searchParams:
                activeAbTests:
                  key: activeAbTests
                searchField: searchField
                hitsPerPage: 0
                maxCountVariants: 5
                query: query
                channel: channel
                followSearch: followSearch
                maxDistance: 1.5637376656633328
                filters:
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                - values:
                  - exclude: true
                    type: or
                    value: '{}'
                  - exclude: true
                    type: or
                    value: '{}'
                  name: name
                  substring: true
                marketIds:
                - marketIds
                - marketIds
                articleNumberSearch: DETECT
                sortItems:
                - name: name
                  order: asc
                - name: name
                  order: asc
                excludeProductsNotInRange: true
                purchaserId: purchaserId
                customParameters:
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                - cacheIrrelevant: true
                  values:
                  - values
                  - values
                  name: name
                location:
                  latitude: 18.494211295267263
                  longitude: -127.23073270189397
                page: 1
                advisorStatus:
                  id: id
                  answerPath: _0_0_0_1
            id: id
            text: text
          target:
            destination: https://www.shop.de/about-us/contact.html
            name: name
        totalHits: 9
        scoreLastHit: 1.1730742509559433
      properties:
        answers:
          description: The selected answers of this result.
          items:
            $ref: '#/components/schemas/Answer'
          type: array
        articleNumberSearch:
          description: Set to true when an article number search was performed.
          type: boolean
        breadCrumbTrail:
          description: Describes the actions that lead to the current result. This
            may be used to return to an intermediate search result.
          items:
            $ref: '#/components/schemas/BreadCrumbTrailItem'
          type: array
        campaigns:
          description: Contains the active campaigns for this result.
          items:
            $ref: '#/components/schemas/Campaign'
          type: array
        facets:
          description: The ASN filters (for after search navigation).
          items:
            $ref: '#/components/schemas/Facet'
          type: array
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        filters:
          description: The filter applied for this result.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        followSearch:
          description: Request linking param for follow-up search requests. Can improve
            request performance.
          type: string
        geo:
          $ref: '#/components/schemas/Geo'
        hits:
          description: The relevant products.
          items:
            $ref: '#/components/schemas/SearchRecord'
          type: array
        paging:
          $ref: '#/components/schemas/Paging'
        scoreFirstHit:
          description: The score of the best match in the search result.
          format: double
          type: number
        scoreLastHit:
          description: The score of the worst match in the search result.
          format: double
          type: number
        searchControlParams:
          $ref: '#/components/schemas/SearchControlParams'
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        singleWordResults:
          description: Contains the result from the single word search.
          items:
            $ref: '#/components/schemas/SingleWordSearchResult'
          type: array
        sortItems:
          description: Contains the available sortings.
          items:
            $ref: '#/components/schemas/DescribedSortItem'
          type: array
        timedOut:
          description: If true, this search took longer than the timeout currently
            defined. Therefore, the results may not contain all relevant products.
          type: boolean
        tookTotal:
          description: The time required to produce the results in the framework (in
            ms).
          format: int64
          type: integer
        tookWorldmatch:
          description: The time required to produce the results in the core (in ms).
          format: int64
          type: integer
        totalHits:
          description: Total number of items in the search result.
          format: int32
          type: integer
      required:
      - answers
      - articleNumberSearch
      - breadCrumbTrail
      - campaigns
      - facets
      - fieldRoles
      - filters
      - followSearch
      - geo
      - hits
      - scoreFirstHit
      - scoreLastHit
      - searchControlParams
      - singleWordResults
      - sortItems
      - timedOut
      - tookTotal
      - tookWorldmatch
      - totalHits
      title: Result
      type: object
    ResultSuggestion:
      example:
        image: image
        score: 6.027456183070403
        hitCount: 0
        name: name
        attributes:
          key: '{}'
        type: brand
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        attributes:
          additionalProperties:
            properties: {}
            type: object
          description: Contains additional information for the suggestion. Keys give
            the names of the attributes, with corresponding values.
          type: object
        hitCount:
          description: The number of products that should be found when this suggestion
            is selected for a search.
          format: int32
          type: integer
        image:
          description: The URL of the image to be displayed to the user.
          type: string
        name:
          description: The name for the Suggest Entry that should be displayed to
            the user.
          type: string
        score:
          description: Defines how well the suggestion matches the query.
          format: double
          type: number
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        type:
          description: The suggestion type.
          example: brand
          type: string
      required:
      - attributes
      - hitCount
      - name
      - type
      title: ResultSuggestion
      type: object
    SearchControlParams:
      example:
        useAbTest: true
        useGeo: true
        useRanking: true
        useDeduplication: true
        idsOnly: true
        useFoundWords: true
        deduplicationField: deduplicationField
        useSearch: true
        usePersonalization: true
        useCampaigns: true
        useCache: true
        useSemanticEnhancer: true
        useAso: true
        useAsn: true
      properties:
        deduplicationField:
          description: Specifies on which field variants should be deduplicated.
          type: string
        idsOnly:
          description: If true, the returned records will contain only record IDs.
          type: boolean
        useAbTest:
          description: If true abTest features will be active.
          type: boolean
        useAsn:
          description: If true, filters should be generated for the result.
          type: boolean
        useAso:
          description: If true, automatic search optimization will be used.
          type: boolean
        useCache:
          description: If true, the search result will be returned from cache memory,
            if a possible matching result exists.
          type: boolean
        useCampaigns:
          description: If true, campaigns corresponding to this search result will
            be returned.
          type: boolean
        useDeduplication:
          description: If true, the configured deduplication of variants will be used.
          type: boolean
        useFoundWords:
          description: If true, the words that led to the records in the search results
            will be determined; this may require a large amount of processing time.
          type: boolean
        useGeo:
          type: boolean
        usePersonalization:
          description: If true, the relevant products in the result will be personalized.
          type: boolean
        useRanking:
          description: If true, ranking will be applied.
          type: boolean
        useSearch:
          description: If true, search will be executed for the query.
          type: boolean
        useSemanticEnhancer:
          description: If true, the semantic enhancer will be used.
          type: boolean
      title: SearchControlParams
      type: object
    SearchLogEvent:
      example:
        hitCount: 0
        minScore: 1
        customSorting: true
        searchField: searchField
        query: query
        pageSize: 5
        filters:
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        maxScore: 6
        title: title
        userId: userId
        sid: sid
        masterId: masterId
        searchTime: 2
        purchaserId: purchaserId
        additionalInfo: additionalInfo
        id: id
        page: 5
      properties:
        additionalInfo:
          description: Additional information that should be logged.
          type: string
        customSorting:
          description: Set to true, if the search result was sorted using a custom
            sorting order, otherwise false.
          type: boolean
        filters:
          description: The filters active in the search result.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        hitCount:
          description: The total number of products in the search result.
          format: int32
          type: integer
        id:
          description: The ID of the product.
          type: string
        masterId:
          description: Contains the master ID, if the article is a variant and 'ID'
            refers to the variant.
          type: string
        maxScore:
          description: The score of the first product in the result.
          format: int32
          type: integer
        minScore:
          description: The score of the last product in the result.
          format: int32
          type: integer
        page:
          description: The page number delivered by the search result.
          format: int32
          type: integer
        pageSize:
          description: The maximum number of products on a page.
          format: int32
          type: integer
        purchaserId:
          description: The ID for customer specific pricing.
          type: string
        query:
          description: The search term that produced the search result.
          type: string
        searchField:
          description: Contains the name of the search field, if the search was performed
            on a specific field.
          type: string
        searchTime:
          description: The time required to produce the results (in ms).
          format: int32
          type: integer
        sid:
          description: The session ID.
          type: string
        title:
          description: The title of the product.
          type: string
        userId:
          description: The ID of the user who issued the request.
          type: string
      required:
      - filters
      - hitCount
      - id
      - maxScore
      - minScore
      - page
      - pageSize
      - query
      - searchTime
      - sid
      title: SearchLogEvent
      type: object
    SearchParams:
      example:
        activeAbTests:
          key: activeAbTests
        searchField: searchField
        hitsPerPage: 0
        maxCountVariants: 5
        query: query
        channel: channel
        followSearch: followSearch
        maxDistance: 1.5637376656633328
        filters:
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        marketIds:
        - marketIds
        - marketIds
        articleNumberSearch: DETECT
        sortItems:
        - name: name
          order: asc
        - name: name
          order: asc
        excludeProductsNotInRange: true
        purchaserId: purchaserId
        customParameters:
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        location:
          latitude: 18.494211295267263
          longitude: -127.23073270189397
        page: 1
        advisorStatus:
          id: id
          answerPath: _0_0_0_1
      properties:
        activeAbTests:
          additionalProperties:
            type: string
          description: The active ab tests variants.
          type: object
        advisorStatus:
          $ref: '#/components/schemas/AdvisorCampaignStatusHolder'
        articleNumberSearch:
          description: Specifies if the search term should be interpreted as article
            number.
          enum:
          - DETECT
          - ALWAYS
          - NEVER
          type: string
        channel:
          description: The channel in which the search should be performed.
          type: string
        customParameters:
          description: May be used to provide custom parameters, such as for custom
            classes.
          items:
            $ref: '#/components/schemas/CustomParameter'
          type: array
        excludeProductsNotInRange:
          description: Overrides the excludeProductsNotInRange setting for the geo
            search.
          type: boolean
        filters:
          description: The filters to limit the search result.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        followSearch:
          description: Optional request linking param from a previous search result
            or search param object. Can improve request performance.
          type: string
        hitsPerPage:
          description: Number of products on a single page.
          exclusiveMinimum: false
          format: int32
          minimum: 0
          type: integer
        location:
          $ref: '#/components/schemas/Location'
        marketIds:
          description: Only show products that have values for these market IDs.
          items:
            type: string
          type: array
        maxCountVariants:
          description: Defines the maximum number of variants to be returned in the
            result.
          format: int32
          type: integer
        maxDistance:
          description: Overrides the maximum distance setting for the geo search.
          exclusiveMinimum: false
          format: double
          minimum: 1
          type: number
        page:
          description: The page to be requested within the search result.
          exclusiveMinimum: false
          format: int32
          minimum: 1
          type: integer
        purchaserId:
          description: The ID of the purchaser. This ID is only needed if the 'customer
            specific pricing' module is activated. Otherwise it will be ignored.
          maxLength: 2147483647
          minLength: 1
          type: string
        query:
          description: The search term.
          type: string
        searchField:
          description: If set, the search term will be looked for only in the given
            field. Otherwise all searchable fields will be considered (for article
            number searches, all fields marked as containing article numbers).
          type: string
        sortItems:
          description: Specifies the sort order for the search result.
          items:
            $ref: '#/components/schemas/SortItem'
          type: array
      required:
      - channel
      - query
      title: SearchParams
      type: object
    SearchRecord:
      example:
        score: 4.145608
        masterValues:
          key: '{}'
        id: id
        position: 2
        foundWords:
        - foundWords
        - foundWords
        variantValues:
        - null
        - null
      properties:
        foundWords:
          description: The words that caused this record to be part of the result.
          items:
            type: string
          type: array
        id:
          description: The ID of the record.
          type: string
        masterValues:
          additionalProperties:
            properties: {}
            type: object
          description: Contains all fields in the record, with a string representation
            of the respective values.
          type: object
        position:
          description: The position of the record in the search results (starting
            with 0).
          format: int32
          type: integer
        score:
          description: Defines how well the record matches the search term.
          format: float
          type: number
        variantValues:
          description: Contains variants. The values are mapped from field names to
            the field value.
          items:
            $ref: '#/components/schemas/VariantValues'
          type: array
      required:
      - foundWords
      - id
      - masterValues
      - position
      - score
      - variantValues
      title: SearchRecord
      type: object
    SearchRequest:
      example:
        searchControlParams:
          useAbTest: true
          useGeo: true
          useRanking: true
          useDeduplication: true
          idsOnly: true
          useFoundWords: true
          deduplicationField: deduplicationField
          useSearch: true
          usePersonalization: true
          useCampaigns: true
          useCache: true
          useSemanticEnhancer: true
          useAso: true
          useAsn: true
        userInput: userInput
        params:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
        sid: sid
      properties:
        params:
          $ref: '#/components/schemas/SearchParams'
        searchControlParams:
          $ref: '#/components/schemas/SearchControlParams'
        sid:
          description: The session ID of the user sending this search request.
          type: string
        userInput:
          description: The search term entered by the user when a suggestion led to
            this search request.
          type: string
      required:
      - params
      title: SearchRequest
      type: object
    SimilarAttributeInfo:
      example:
        name: name
        value: value
      properties:
        name:
          description: The name of the field containing the attribute to be compared
            for similarity.
          type: string
        value:
          description: Attribute value.
          type: string
      required:
      - name
      - value
      title: SimilarAttributeInfo
      type: object
    SimilarProducts:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        attributes:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        attributes:
          description: The criteria used to find the similar products..
          items:
            $ref: '#/components/schemas/SimilarAttributeInfo'
          type: array
        hits:
          description: The similar products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
      required:
      - attributes
      - hits
      title: SimilarProducts
      type: object
    SimilarProductsWithFieldRoles:
      example:
        hits:
        - values:
            key: '{}'
          id: id
        - values:
            key: '{}'
          id: id
        attributes:
        - name: name
          value: value
        - name: name
          value: value
        fieldRoles:
          key: fieldRoles
      properties:
        attributes:
          description: The criteria used to find the similar products..
          items:
            $ref: '#/components/schemas/SimilarAttributeInfo'
          type: array
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        hits:
          description: The similar products.
          items:
            $ref: '#/components/schemas/TypedFlatRecord'
          type: array
      required:
      - attributes
      - fieldRoles
      - hits
      title: SimilarProductsWithFieldRoles
      type: object
    SingleWordSearchResult:
      example:
        totalHits: 4
        previewRecords:
        - score: 4.145608
          masterValues:
            key: '{}'
          id: id
          position: 2
          foundWords:
          - foundWords
          - foundWords
          variantValues:
          - null
          - null
        - score: 4.145608
          masterValues:
            key: '{}'
          id: id
          position: 2
          foundWords:
          - foundWords
          - foundWords
          variantValues:
          - null
          - null
        word: word
        searchParams:
          activeAbTests:
            key: activeAbTests
          searchField: searchField
          hitsPerPage: 0
          maxCountVariants: 5
          query: query
          channel: channel
          followSearch: followSearch
          maxDistance: 1.5637376656633328
          filters:
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          - values:
            - exclude: true
              type: or
              value: '{}'
            - exclude: true
              type: or
              value: '{}'
            name: name
            substring: true
          marketIds:
          - marketIds
          - marketIds
          articleNumberSearch: DETECT
          sortItems:
          - name: name
            order: asc
          - name: name
            order: asc
          excludeProductsNotInRange: true
          purchaserId: purchaserId
          customParameters:
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          - cacheIrrelevant: true
            values:
            - values
            - values
            name: name
          location:
            latitude: 18.494211295267263
            longitude: -127.23073270189397
          page: 1
          advisorStatus:
            id: id
            answerPath: _0_0_0_1
      properties:
        previewRecords:
          description: The first few products of the search result, to be used as
            a preview.
          items:
            $ref: '#/components/schemas/SearchRecord'
          type: array
        searchParams:
          $ref: '#/components/schemas/SearchParams'
        totalHits:
          description: The total number of items to be expected in this search result.
          format: int32
          type: integer
        word:
          description: The term that was searched for.
          type: string
      required:
      - previewRecords
      - totalHits
      - word
      title: SingleWordSearchResult
      type: object
    SortItem:
      example:
        name: name
        order: asc
      properties:
        name:
          description: The name of the field to be sorted by, or 'Relevancy', for
            score based sorting.
          type: string
        order:
          description: The sort order direction (ascending, descending).
          enum:
          - asc
          - desc
          type: string
      required:
      - name
      - order
      title: SortItem
      type: object
    SuggestParams:
      example:
        activeAbTests:
          key: activeAbTests
        searchField: searchField
        hitsPerPage: 0
        maxCountVariants: 6
        query: query
        channel: channel
        followSearch: followSearch
        maxDistance: 1.1465812980502945
        filters:
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        - values:
          - exclude: true
            type: or
            value: '{}'
          - exclude: true
            type: or
            value: '{}'
          name: name
          substring: true
        marketIds:
        - marketIds
        - marketIds
        articleNumberSearch: DETECT
        sid: sid
        sortItems:
        - name: name
          order: asc
        - name: name
          order: asc
        excludeProductsNotInRange: true
        purchaserId: purchaserId
        customParameters:
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        - cacheIrrelevant: true
          values:
          - values
          - values
          name: name
        location:
          latitude: 18.494211295267263
          longitude: -127.23073270189397
        page: 1
        advisorStatus:
          id: id
          answerPath: _0_0_0_1
      properties:
        activeAbTests:
          additionalProperties:
            type: string
          description: The active ab tests variants.
          type: object
        advisorStatus:
          $ref: '#/components/schemas/AdvisorCampaignStatusHolder'
        articleNumberSearch:
          description: Specifies if the search term should be interpreted as article
            number.
          enum:
          - DETECT
          - ALWAYS
          - NEVER
          type: string
        channel:
          description: The channel in which the search should be performed.
          type: string
        customParameters:
          description: May be used to provide custom parameters, such as for custom
            classes.
          items:
            $ref: '#/components/schemas/CustomParameter'
          type: array
        excludeProductsNotInRange:
          description: Overrides the excludeProductsNotInRange setting for the geo
            search.
          type: boolean
        filters:
          description: The filters to limit the search result.
          items:
            $ref: '#/components/schemas/Filter'
          type: array
        followSearch:
          description: Optional request linking param from a previous search result
            or search param object. Can improve request performance.
          type: string
        hitsPerPage:
          description: Number of products on a single page.
          exclusiveMinimum: false
          format: int32
          minimum: 0
          type: integer
        location:
          $ref: '#/components/schemas/Location'
        marketIds:
          description: Only show products that have values for these market IDs.
          items:
            type: string
          type: array
        maxCountVariants:
          description: Defines the maximum number of variants to be returned in the
            result.
          format: int32
          type: integer
        maxDistance:
          description: Overrides the maximum distance setting for the geo search.
          exclusiveMinimum: false
          format: double
          minimum: 1
          type: number
        page:
          description: The page to be requested within the search result.
          exclusiveMinimum: false
          format: int32
          minimum: 1
          type: integer
        purchaserId:
          description: The ID of the purchaser. This ID is only needed if the 'customer
            specific pricing' module is activated. Otherwise it will be ignored.
          maxLength: 2147483647
          minLength: 1
          type: string
        query:
          description: The search term.
          type: string
        searchField:
          description: If set, the search term will be looked for only in the given
            field. Otherwise all searchable fields will be considered (for article
            number searches, all fields marked as containing article numbers).
          type: string
        sid:
          description: The session id. Required for A/B testing.
          type: string
        sortItems:
          description: Specifies the sort order for the search result.
          items:
            $ref: '#/components/schemas/SortItem'
          type: array
      required:
      - channel
      - query
      title: SuggestParams
      type: object
    SuggestionResult:
      description: Contains a list of suggestions, the field role to field name mapping
        and the information if an article number search is possible.
      example:
        geo:
          markets:
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          selectedMarkets:
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          - distance: 3.616076749251911
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            id: id
            hasProducts: true
            selected: "TRUE"
            searchParams:
              activeAbTests:
                key: activeAbTests
              searchField: searchField
              hitsPerPage: 0
              maxCountVariants: 5
              query: query
              channel: channel
              followSearch: followSearch
              maxDistance: 1.5637376656633328
              filters:
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              - values:
                - exclude: true
                  type: or
                  value: '{}'
                - exclude: true
                  type: or
                  value: '{}'
                name: name
                substring: true
              marketIds:
              - marketIds
              - marketIds
              articleNumberSearch: DETECT
              sortItems:
              - name: name
                order: asc
              - name: name
                order: asc
              excludeProductsNotInRange: true
              purchaserId: purchaserId
              customParameters:
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              - cacheIrrelevant: true
                values:
                - values
                - values
                name: name
              location:
                latitude: 18.494211295267263
                longitude: -127.23073270189397
              page: 1
              advisorStatus:
                id: id
                answerPath: _0_0_0_1
          showDistance: true
        suggestions:
        - image: image
          score: 6.027456183070403
          hitCount: 0
          name: name
          attributes:
            key: '{}'
          type: brand
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        - image: image
          score: 6.027456183070403
          hitCount: 0
          name: name
          attributes:
            key: '{}'
          type: brand
          searchParams:
            activeAbTests:
              key: activeAbTests
            searchField: searchField
            hitsPerPage: 0
            maxCountVariants: 5
            query: query
            channel: channel
            followSearch: followSearch
            maxDistance: 1.5637376656633328
            filters:
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            - values:
              - exclude: true
                type: or
                value: '{}'
              - exclude: true
                type: or
                value: '{}'
              name: name
              substring: true
            marketIds:
            - marketIds
            - marketIds
            articleNumberSearch: DETECT
            sortItems:
            - name: name
              order: asc
            - name: name
              order: asc
            excludeProductsNotInRange: true
            purchaserId: purchaserId
            customParameters:
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            - cacheIrrelevant: true
              values:
              - values
              - values
              name: name
            location:
              latitude: 18.494211295267263
              longitude: -127.23073270189397
            page: 1
            advisorStatus:
              id: id
              answerPath: _0_0_0_1
        articleNumberSearchAllowed: true
        fieldRoles:
          key: fieldRoles
      properties:
        articleNumberSearchAllowed:
          description: True, if the field with 'productNumber' field role provides
            a regex pattern.
          type: boolean
        fieldRoles:
          additionalProperties:
            type: string
          description: A field to role mapping. For example, a field role may be 'brand',
            meaning that the field contains the manufacturer's name. (key = field
            role, value = field name)
          type: object
        geo:
          $ref: '#/components/schemas/Geo'
        suggestions:
          description: The requested suggestions.
          items:
            $ref: '#/components/schemas/ResultSuggestion'
          type: array
      required:
      - articleNumberSearchAllowed
      - fieldRoles
      - suggestions
      title: SuggestionResult
      type: object
    Target:
      example:
        destination: https://www.shop.de/about-us/contact.html
        name: name
      properties:
        destination:
          description: The URL to which the user should be redirected.
          example: https://www.shop.de/about-us/contact.html
          type: string
        name:
          description: A name to identify the target URL.
          type: string
      required:
      - destination
      title: Target
      type: object
    TypedFlatRecord:
      example:
        values:
          key: '{}'
        id: id
      properties:
        id:
          type: string
        values:
          additionalProperties:
            properties: {}
            type: object
          description: Contains all the fields present in the record and their corresponding
            values. If variants exists the values of a specific variant (usually the
            first) are merged into this map.
          type: object
      required:
      - values
      title: TypedFlatRecord
      type: object
    UiSettings:
      description: Contains all ui related settings of a FACT-Finder user.
      example:
        hideInactiveModules: true
        hideErrorNotifications: true
        enableAdvancedMode: true
        locale: locale
      properties:
        enableAdvancedMode:
          description: In advanced mode the user sees all pages, in normal mode some
            settings pages are hidden.
          type: boolean
        hideErrorNotifications:
          description: Whether error notifications should be hidden by default.
          type: boolean
        hideInactiveModules:
          description: Whether inactive modules should be hidden by default.
          type: boolean
        locale:
          description: The language tag representing the locale of the user. May be
            'null' when the browser locale setting should be used.
          type: string
      required:
      - enableAdvancedMode
      - hideErrorNotifications
      - hideInactiveModules
      title: UiSettings
      type: object
    User:
      description: Represents a user, which should be created, and its settings.
      example:
        password: password
        permissions:
          channels:
          - channels
          - channels
          roles:
          - AbTestManager
          - AbTestManager
          groups:
          - groups
          - groups
          allowAllCurrentAndFutureChannels: true
        name: name
        uiSettings:
          hideInactiveModules: true
          hideErrorNotifications: true
          enableAdvancedMode: true
          locale: locale
      properties:
        name:
          description: The name of the user.
          maxLength: 100
          minLength: 1
          type: string
        password:
          description: The password of the user in plaintext.
          maxLength: 30
          minLength: 5
          type: string
        permissions:
          $ref: '#/components/schemas/Permissions'
        uiSettings:
          $ref: '#/components/schemas/UiSettings'
      required:
      - name
      - password
      - permissions
      - uiSettings
      title: User
      type: object
    UserInfo:
      description: Represents a user and its settings.
      example:
        lastActive: 2000-01-23T04:56:07.000+00:00
        permissions:
          channels:
          - channels
          - channels
          roles:
          - AbTestManager
          - AbTestManager
          groups:
          - groups
          - groups
          allowAllCurrentAndFutureChannels: true
        origin: LOCAL
        name: name
        uiSettings:
          hideInactiveModules: true
          hideErrorNotifications: true
          enableAdvancedMode: true
          locale: locale
      properties:
        lastActive:
          description: Date of the last activity of the user or the creation date,
            when the user did not log in, yet.
          format: date-time
          type: string
        name:
          description: The name of the user.
          type: string
        origin:
          description: If the user is managed locally or remotely.
          enum:
          - LOCAL
          - REMOTE
          type: string
        permissions:
          $ref: '#/components/schemas/Permissions'
        uiSettings:
          $ref: '#/components/schemas/UiSettings'
      required:
      - lastActive
      - name
      - origin
      - permissions
      - uiSettings
      title: UserInfo
      type: object
    UserUpdate:
      description: Represents a user, which should be updated, and its settings.
      example:
        permissions:
          channels:
          - channels
          - channels
          roles:
          - AbTestManager
          - AbTestManager
          groups:
          - groups
          - groups
          allowAllCurrentAndFutureChannels: true
        name: name
        uiSettings:
          hideInactiveModules: true
          hideErrorNotifications: true
          enableAdvancedMode: true
          locale: locale
      properties:
        name:
          description: The name of the user.
          type: string
        permissions:
          $ref: '#/components/schemas/Permissions'
        uiSettings:
          $ref: '#/components/schemas/UiSettings'
      required:
      - name
      - permissions
      - uiSettings
      title: UserUpdate
      type: object
    VariantValues:
      additionalProperties:
        properties: {}
        type: object
      title: VariantValues
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    oAuth2:
      flows:
        password:
          scopes:
            analytics: ""
            config: ""
            database: ""
            import: ""
            instore_ads: ""
            jobs: ""
            licence: ""
            manage: ""
            public_queries: ""
            users: ""
          tokenUrl: oauth/token
      type: oauth2
x-original-swagger-version: "2.0"

