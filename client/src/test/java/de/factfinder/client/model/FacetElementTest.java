/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.SearchParams;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for FacetElement
 */
public class FacetElementTest {
    private final FacetElement model = new FacetElement();

    /**
     * Model tests for FacetElement
     */
    @Test
    public void testFacetElement() {
        // TODO: test FacetElement
    }

    /**
     * Test the property 'absoluteMaxValue'
     */
    @Test
    public void absoluteMaxValueTest() {
        // TODO: test absoluteMaxValue
    }

    /**
     * Test the property 'absoluteMinValue'
     */
    @Test
    public void absoluteMinValueTest() {
        // TODO: test absoluteMinValue
    }

    /**
     * Test the property 'clusterLevel'
     */
    @Test
    public void clusterLevelTest() {
        // TODO: test clusterLevel
    }

    /**
     * Test the property 'distance'
     */
    @Test
    public void distanceTest() {
        // TODO: test distance
    }

    /**
     * Test the property 'previewImageURL'
     */
    @Test
    public void previewImageURLTest() {
        // TODO: test previewImageURL
    }

    /**
     * Test the property 'searchParams'
     */
    @Test
    public void searchParamsTest() {
        // TODO: test searchParams
    }

    /**
     * Test the property 'selected'
     */
    @Test
    public void selectedTest() {
        // TODO: test selected
    }

    /**
     * Test the property 'selectedMaxValue'
     */
    @Test
    public void selectedMaxValueTest() {
        // TODO: test selectedMaxValue
    }

    /**
     * Test the property 'selectedMinValue'
     */
    @Test
    public void selectedMinValueTest() {
        // TODO: test selectedMinValue
    }

    /**
     * Test the property 'showDistance'
     */
    @Test
    public void showDistanceTest() {
        // TODO: test showDistance
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'totalHits'
     */
    @Test
    public void totalHitsTest() {
        // TODO: test totalHits
    }

}
