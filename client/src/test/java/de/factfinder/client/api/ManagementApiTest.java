/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.api;

import de.factfinder.client.ApiException;
import de.factfinder.client.model.ApiError;
import de.factfinder.client.model.ExpirationMessage;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagementApi
 */
@Ignore
public class ManagementApiTest {

    private final ManagementApi api = new ManagementApi();

    
    /**
     * Changes the log level
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeLogLevelUsingPOSTTest() throws ApiException {
        String logLevel = null;
        api.changeLogLevelUsingPOST(logLevel);

        // TODO: test validations
    }
    
    /**
     * Flush the cache
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void flushCacheUsingPOSTTest() throws ApiException {
        List<String> channel = null;
        api.flushCacheUsingPOST(channel);

        // TODO: test validations
    }
    
    /**
     * Flush the log files
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void flushLogsUsingPOSTTest() throws ApiException {
        api.flushLogsUsingPOST();

        // TODO: test validations
    }
    
    /**
     * Get expiration messages
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExpirationMessagesUsingGETTest() throws ApiException {
        List<String> channel = null;
        List<ExpirationMessage> response = api.getExpirationMessagesUsingGET(channel);

        // TODO: test validations
    }
    
    /**
     * Reload the configuration
     *
     * Omitting channels reloads all configuration, including all channel configurations, and feature flags (fff.properties). Supplying channels only reloads channel specific configuration.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void reloadConfigurationUsingPOSTTest() throws ApiException {
        List<String> channel = null;
        api.reloadConfigurationUsingPOST(channel);

        // TODO: test validations
    }
    
    /**
     * Resets the log level to the original level
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetLogLevelUsingPOSTTest() throws ApiException {
        api.resetLogLevelUsingPOST();

        // TODO: test validations
    }
    
}
