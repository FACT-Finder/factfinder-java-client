/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.Answer;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Question
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Question {
  public static final String SERIALIZED_NAME_ANSWERS = "answers";
  @SerializedName(SERIALIZED_NAME_ANSWERS)
  private List<Answer> answers = new ArrayList<Answer>();

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible;


  public Question answers(List<Answer> answers) {
    
    this.answers = answers;
    return this;
  }

  public Question addAnswersItem(Answer answersItem) {
    this.answers.add(answersItem);
    return this;
  }

   /**
   * The answers associated to this question.
   * @return answers
  **/
  @ApiModelProperty(required = true, value = "The answers associated to this question.")

  public List<Answer> getAnswers() {
    return answers;
  }


  public void setAnswers(List<Answer> answers) {
    this.answers = answers;
  }


  public Question id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the question.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The ID of the question.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Question text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * The text to be shown to the user.
   * @return text
  **/
  @ApiModelProperty(required = true, value = "The text to be shown to the user.")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  public Question visible(Boolean visible) {
    
    this.visible = visible;
    return this;
  }

   /**
   * Set to true when the question is visible.
   * @return visible
  **/
  @ApiModelProperty(required = true, value = "Set to true when the question is visible.")

  public Boolean getVisible() {
    return visible;
  }


  public void setVisible(Boolean visible) {
    this.visible = visible;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Question question = (Question) o;
    return Objects.equals(this.answers, question.answers) &&
        Objects.equals(this.id, question.id) &&
        Objects.equals(this.text, question.text) &&
        Objects.equals(this.visible, question.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answers, id, text, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Question {\n");
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

