/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * ImportChannelResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImportChannelResult {
  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_DURATION_IN_SECONDS = "durationInSeconds";
  @SerializedName(SERIALIZED_NAME_DURATION_IN_SECONDS)
  private Long durationInSeconds;

  public static final String SERIALIZED_NAME_ERROR_MESSAGES = "errorMessages";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGES)
  private List<String> errorMessages = new ArrayList<String>();

  /**
   * The type of data imported.
   */
  @JsonAdapter(ImportTypeEnum.Adapter.class)
  public enum ImportTypeEnum {
    DATA("DATA"),
    
    ATTRIBUTES_AND_DATA("ATTRIBUTES_AND_DATA"),
    
    SUGGEST("SUGGEST"),
    
    RECOMMENDATION("RECOMMENDATION"),
    
    RANKING("RANKING"),
    
    CUSTOMER_SPECIFIC_PRICING("CUSTOMER_SPECIFIC_PRICING"),
    
    GEO("GEO");

    private String value;

    ImportTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ImportTypeEnum fromValue(String value) {
      for (ImportTypeEnum b : ImportTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ImportTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ImportTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ImportTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ImportTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_IMPORT_TYPE = "importType";
  @SerializedName(SERIALIZED_NAME_IMPORT_TYPE)
  private ImportTypeEnum importType;

  public static final String SERIALIZED_NAME_IMPORTED_FIELDS = "importedFields";
  @SerializedName(SERIALIZED_NAME_IMPORTED_FIELDS)
  private Integer importedFields;

  public static final String SERIALIZED_NAME_IMPORTED_RECORDS = "importedRecords";
  @SerializedName(SERIALIZED_NAME_IMPORTED_RECORDS)
  private Integer importedRecords;

  public static final String SERIALIZED_NAME_IMPORTED_WORLDMATCH_DOCUMENTS = "importedWorldmatchDocuments";
  @SerializedName(SERIALIZED_NAME_IMPORTED_WORLDMATCH_DOCUMENTS)
  private Integer importedWorldmatchDocuments;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private Date startDate;

  public static final String SERIALIZED_NAME_STATUS_MESSAGES = "statusMessages";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGES)
  private List<String> statusMessages = new ArrayList<String>();


  public ImportChannelResult channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * The channel for which the import was performed.
   * @return channel
  **/
  @ApiModelProperty(required = true, value = "The channel for which the import was performed.")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public ImportChannelResult durationInSeconds(Long durationInSeconds) {
    
    this.durationInSeconds = durationInSeconds;
    return this;
  }

   /**
   * The duration of the import process (seconds).
   * @return durationInSeconds
  **/
  @ApiModelProperty(required = true, value = "The duration of the import process (seconds).")

  public Long getDurationInSeconds() {
    return durationInSeconds;
  }


  public void setDurationInSeconds(Long durationInSeconds) {
    this.durationInSeconds = durationInSeconds;
  }


  public ImportChannelResult errorMessages(List<String> errorMessages) {
    
    this.errorMessages = errorMessages;
    return this;
  }

  public ImportChannelResult addErrorMessagesItem(String errorMessagesItem) {
    this.errorMessages.add(errorMessagesItem);
    return this;
  }

   /**
   * Import error messages.
   * @return errorMessages
  **/
  @ApiModelProperty(required = true, value = "Import error messages.")

  public List<String> getErrorMessages() {
    return errorMessages;
  }


  public void setErrorMessages(List<String> errorMessages) {
    this.errorMessages = errorMessages;
  }


  public ImportChannelResult importType(ImportTypeEnum importType) {
    
    this.importType = importType;
    return this;
  }

   /**
   * The type of data imported.
   * @return importType
  **/
  @ApiModelProperty(required = true, value = "The type of data imported.")

  public ImportTypeEnum getImportType() {
    return importType;
  }


  public void setImportType(ImportTypeEnum importType) {
    this.importType = importType;
  }


  public ImportChannelResult importedFields(Integer importedFields) {
    
    this.importedFields = importedFields;
    return this;
  }

   /**
   * The number of fields imported.
   * @return importedFields
  **/
  @ApiModelProperty(required = true, value = "The number of fields imported.")

  public Integer getImportedFields() {
    return importedFields;
  }


  public void setImportedFields(Integer importedFields) {
    this.importedFields = importedFields;
  }


  public ImportChannelResult importedRecords(Integer importedRecords) {
    
    this.importedRecords = importedRecords;
    return this;
  }

   /**
   * The number of records imported.
   * @return importedRecords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of records imported.")

  public Integer getImportedRecords() {
    return importedRecords;
  }


  public void setImportedRecords(Integer importedRecords) {
    this.importedRecords = importedRecords;
  }


  public ImportChannelResult importedWorldmatchDocuments(Integer importedWorldmatchDocuments) {
    
    this.importedWorldmatchDocuments = importedWorldmatchDocuments;
    return this;
  }

   /**
   * The number of records imported into worldmatch.
   * @return importedWorldmatchDocuments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of records imported into worldmatch.")

  public Integer getImportedWorldmatchDocuments() {
    return importedWorldmatchDocuments;
  }


  public void setImportedWorldmatchDocuments(Integer importedWorldmatchDocuments) {
    this.importedWorldmatchDocuments = importedWorldmatchDocuments;
  }


  public ImportChannelResult startDate(Date startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The time and date that the import was started.
   * @return startDate
  **/
  @ApiModelProperty(required = true, value = "The time and date that the import was started.")

  public Date getStartDate() {
    return startDate;
  }


  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }


  public ImportChannelResult statusMessages(List<String> statusMessages) {
    
    this.statusMessages = statusMessages;
    return this;
  }

  public ImportChannelResult addStatusMessagesItem(String statusMessagesItem) {
    this.statusMessages.add(statusMessagesItem);
    return this;
  }

   /**
   * Import status messages.
   * @return statusMessages
  **/
  @ApiModelProperty(required = true, value = "Import status messages.")

  public List<String> getStatusMessages() {
    return statusMessages;
  }


  public void setStatusMessages(List<String> statusMessages) {
    this.statusMessages = statusMessages;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportChannelResult importChannelResult = (ImportChannelResult) o;
    return Objects.equals(this.channel, importChannelResult.channel) &&
        Objects.equals(this.durationInSeconds, importChannelResult.durationInSeconds) &&
        Objects.equals(this.errorMessages, importChannelResult.errorMessages) &&
        Objects.equals(this.importType, importChannelResult.importType) &&
        Objects.equals(this.importedFields, importChannelResult.importedFields) &&
        Objects.equals(this.importedRecords, importChannelResult.importedRecords) &&
        Objects.equals(this.importedWorldmatchDocuments, importChannelResult.importedWorldmatchDocuments) &&
        Objects.equals(this.startDate, importChannelResult.startDate) &&
        Objects.equals(this.statusMessages, importChannelResult.statusMessages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channel, durationInSeconds, errorMessages, importType, importedFields, importedRecords, importedWorldmatchDocuments, startDate, statusMessages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportChannelResult {\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    durationInSeconds: ").append(toIndentedString(durationInSeconds)).append("\n");
    sb.append("    errorMessages: ").append(toIndentedString(errorMessages)).append("\n");
    sb.append("    importType: ").append(toIndentedString(importType)).append("\n");
    sb.append("    importedFields: ").append(toIndentedString(importedFields)).append("\n");
    sb.append("    importedRecords: ").append(toIndentedString(importedRecords)).append("\n");
    sb.append("    importedWorldmatchDocuments: ").append(toIndentedString(importedWorldmatchDocuments)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    statusMessages: ").append(toIndentedString(statusMessages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

