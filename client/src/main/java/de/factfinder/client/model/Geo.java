/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.Market;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Geo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Geo {
  public static final String SERIALIZED_NAME_MARKETS = "markets";
  @SerializedName(SERIALIZED_NAME_MARKETS)
  private List<Market> markets = new ArrayList<Market>();

  public static final String SERIALIZED_NAME_SELECTED_MARKETS = "selectedMarkets";
  @SerializedName(SERIALIZED_NAME_SELECTED_MARKETS)
  private List<Market> selectedMarkets = new ArrayList<Market>();

  public static final String SERIALIZED_NAME_SHOW_DISTANCE = "showDistance";
  @SerializedName(SERIALIZED_NAME_SHOW_DISTANCE)
  private Boolean showDistance;


  public Geo markets(List<Market> markets) {
    
    this.markets = markets;
    return this;
  }

  public Geo addMarketsItem(Market marketsItem) {
    this.markets.add(marketsItem);
    return this;
  }

   /**
   * The unselected markets
   * @return markets
  **/
  @ApiModelProperty(required = true, value = "The unselected markets")

  public List<Market> getMarkets() {
    return markets;
  }


  public void setMarkets(List<Market> markets) {
    this.markets = markets;
  }


  public Geo selectedMarkets(List<Market> selectedMarkets) {
    
    this.selectedMarkets = selectedMarkets;
    return this;
  }

  public Geo addSelectedMarketsItem(Market selectedMarketsItem) {
    this.selectedMarkets.add(selectedMarketsItem);
    return this;
  }

   /**
   * The selected markets
   * @return selectedMarkets
  **/
  @ApiModelProperty(required = true, value = "The selected markets")

  public List<Market> getSelectedMarkets() {
    return selectedMarkets;
  }


  public void setSelectedMarkets(List<Market> selectedMarkets) {
    this.selectedMarkets = selectedMarkets;
  }


  public Geo showDistance(Boolean showDistance) {
    
    this.showDistance = showDistance;
    return this;
  }

   /**
   * Should show the distance attached to the markets.
   * @return showDistance
  **/
  @ApiModelProperty(required = true, value = "Should show the distance attached to the markets.")

  public Boolean getShowDistance() {
    return showDistance;
  }


  public void setShowDistance(Boolean showDistance) {
    this.showDistance = showDistance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Geo geo = (Geo) o;
    return Objects.equals(this.markets, geo.markets) &&
        Objects.equals(this.selectedMarkets, geo.selectedMarkets) &&
        Objects.equals(this.showDistance, geo.showDistance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(markets, selectedMarkets, showDistance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Geo {\n");
    sb.append("    markets: ").append(toIndentedString(markets)).append("\n");
    sb.append("    selectedMarkets: ").append(toIndentedString(selectedMarkets)).append("\n");
    sb.append("    showDistance: ").append(toIndentedString(showDistance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

