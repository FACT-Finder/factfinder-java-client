/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.ImportCount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ImportState
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImportState {
  public static final String SERIALIZED_NAME_IMPORT_COUNTS = "importCounts";
  @SerializedName(SERIALIZED_NAME_IMPORT_COUNTS)
  private List<ImportCount> importCounts = null;


  public ImportState importCounts(List<ImportCount> importCounts) {
    
    this.importCounts = importCounts;
    return this;
  }

  public ImportState addImportCountsItem(ImportCount importCountsItem) {
    if (this.importCounts == null) {
      this.importCounts = new ArrayList<ImportCount>();
    }
    this.importCounts.add(importCountsItem);
    return this;
  }

   /**
   * Number of imports completed per import type.
   * @return importCounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of imports completed per import type.")

  public List<ImportCount> getImportCounts() {
    return importCounts;
  }


  public void setImportCounts(List<ImportCount> importCounts) {
    this.importCounts = importCounts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportState importState = (ImportState) o;
    return Objects.equals(this.importCounts, importState.importCounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(importCounts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportState {\n");
    sb.append("    importCounts: ").append(toIndentedString(importCounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

