/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Contains all permission related settings of a FACT-Finder user.
 */
@ApiModel(description = "Contains all permission related settings of a FACT-Finder user.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Permissions {
  public static final String SERIALIZED_NAME_ALLOW_ALL_CURRENT_AND_FUTURE_CHANNELS = "allowAllCurrentAndFutureChannels";
  @SerializedName(SERIALIZED_NAME_ALLOW_ALL_CURRENT_AND_FUTURE_CHANNELS)
  private Boolean allowAllCurrentAndFutureChannels;

  public static final String SERIALIZED_NAME_CHANNELS = "channels";
  @SerializedName(SERIALIZED_NAME_CHANNELS)
  private List<String> channels = new ArrayList<String>();

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  private List<String> groups = new ArrayList<String>();

  /**
   * Gets or Sets roles
   */
  @JsonAdapter(RolesEnum.Adapter.class)
  public enum RolesEnum {
    ABTESTMANAGER("AbTestManager"),
    
    AFTERSEARCHNAVIGATIONMANAGER("AfterSearchNavigationManager"),
    
    BACKUPMANAGER("BackupManager"),
    
    CACHEMANAGER("CacheManager"),
    
    CAMPAIGNMANAGER("CampaignManager"),
    
    CONFIGURATORMANAGER("ConfiguratorManager"),
    
    DEPLOYMENTMANAGER("DeploymentManager"),
    
    IMPORTMANAGER("ImportManager"),
    
    INTERMEDIATEONLYIMPORTMANAGER("IntermediateOnlyImportManager"),
    
    INSTALLMANAGER("InstallManager"),
    
    LANGUAGEMANAGER("LanguageManager"),
    
    LOGFILEANALYZERMANAGER("LogfileAnalyzerManager"),
    
    MAYCHANGEPASSWORD("MayChangePassword"),
    
    MESSAGESMANAGER("MessagesManager"),
    
    NOTIFICATIONMANAGER("NotificationManager"),
    
    PREPROCESSORMANAGER("PreprocessorManager"),
    
    RANKINGMANAGER("RankingManager"),
    
    RECOMMENDATIONENGINEMANAGER("RecommendationEngineManager"),
    
    SEARCHINTERFACEUSER("SearchInterfaceUser"),
    
    SEARCHMANAGER("SearchManager"),
    
    SHOWHELPSECTION("ShowHelpSection"),
    
    SUGGESTMANAGER("SuggestManager"),
    
    THESAURUSMANAGER("ThesaurusManager"),
    
    USERMANAGER("UserManager"),
    
    WORDVALUESMANAGER("WordValuesManager"),
    
    APIIMPORT("ApiImport"),
    
    APIANALYTICS("ApiAnalytics"),
    
    APIPUBLICQUERIES("ApiPublicQueries"),
    
    APICONFIG("ApiConfig"),
    
    APIJOBS("ApiJobs"),
    
    APIINSTOREADS("ApiInstoreAds"),
    
    APIDATABASE("ApiDatabase"),
    
    APIMANAGE("ApiManage"),
    
    APILICENCE("ApiLicence"),
    
    APIUSERS("ApiUsers");

    private String value;

    RolesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RolesEnum fromValue(String value) {
      for (RolesEnum b : RolesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RolesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RolesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RolesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RolesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ROLES = "roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private List<RolesEnum> roles = new ArrayList<RolesEnum>();


  public Permissions allowAllCurrentAndFutureChannels(Boolean allowAllCurrentAndFutureChannels) {
    
    this.allowAllCurrentAndFutureChannels = allowAllCurrentAndFutureChannels;
    return this;
  }

   /**
   * If set to true the user has access to all channels. In that case any explicitly specified channels are ignored.
   * @return allowAllCurrentAndFutureChannels
  **/
  @ApiModelProperty(required = true, value = "If set to true the user has access to all channels. In that case any explicitly specified channels are ignored.")

  public Boolean getAllowAllCurrentAndFutureChannels() {
    return allowAllCurrentAndFutureChannels;
  }


  public void setAllowAllCurrentAndFutureChannels(Boolean allowAllCurrentAndFutureChannels) {
    this.allowAllCurrentAndFutureChannels = allowAllCurrentAndFutureChannels;
  }


  public Permissions channels(List<String> channels) {
    
    this.channels = channels;
    return this;
  }

  public Permissions addChannelsItem(String channelsItem) {
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * The channels assigned to the user.
   * @return channels
  **/
  @ApiModelProperty(required = true, value = "The channels assigned to the user.")

  public List<String> getChannels() {
    return channels;
  }


  public void setChannels(List<String> channels) {
    this.channels = channels;
  }


  public Permissions groups(List<String> groups) {
    
    this.groups = groups;
    return this;
  }

  public Permissions addGroupsItem(String groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * The groups assigned to the user.
   * @return groups
  **/
  @ApiModelProperty(required = true, value = "The groups assigned to the user.")

  public List<String> getGroups() {
    return groups;
  }


  public void setGroups(List<String> groups) {
    this.groups = groups;
  }


  public Permissions roles(List<RolesEnum> roles) {
    
    this.roles = roles;
    return this;
  }

  public Permissions addRolesItem(RolesEnum rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * The roles assigned to the user.
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "The roles assigned to the user.")

  public List<RolesEnum> getRoles() {
    return roles;
  }


  public void setRoles(List<RolesEnum> roles) {
    this.roles = roles;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Permissions permissions = (Permissions) o;
    return Objects.equals(this.allowAllCurrentAndFutureChannels, permissions.allowAllCurrentAndFutureChannels) &&
        Objects.equals(this.channels, permissions.channels) &&
        Objects.equals(this.groups, permissions.groups) &&
        Objects.equals(this.roles, permissions.roles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowAllCurrentAndFutureChannels, channels, groups, roles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Permissions {\n");
    sb.append("    allowAllCurrentAndFutureChannels: ").append(toIndentedString(allowAllCurrentAndFutureChannels)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

