/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.Filter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchLogEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchLogEvent {
  public static final String SERIALIZED_NAME_ADDITIONAL_INFO = "additionalInfo";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFO)
  private String additionalInfo;

  public static final String SERIALIZED_NAME_CUSTOM_SORTING = "customSorting";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SORTING)
  private Boolean customSorting;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<Filter> filters = new ArrayList<Filter>();

  public static final String SERIALIZED_NAME_HIT_COUNT = "hitCount";
  @SerializedName(SERIALIZED_NAME_HIT_COUNT)
  private Integer hitCount;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_MASTER_ID = "masterId";
  @SerializedName(SERIALIZED_NAME_MASTER_ID)
  private String masterId;

  public static final String SERIALIZED_NAME_MAX_SCORE = "maxScore";
  @SerializedName(SERIALIZED_NAME_MAX_SCORE)
  private Integer maxScore;

  public static final String SERIALIZED_NAME_MIN_SCORE = "minScore";
  @SerializedName(SERIALIZED_NAME_MIN_SCORE)
  private Integer minScore;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PURCHASER_ID = "purchaserId";
  @SerializedName(SERIALIZED_NAME_PURCHASER_ID)
  private String purchaserId;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_SEARCH_FIELD = "searchField";
  @SerializedName(SERIALIZED_NAME_SEARCH_FIELD)
  private String searchField;

  public static final String SERIALIZED_NAME_SEARCH_TIME = "searchTime";
  @SerializedName(SERIALIZED_NAME_SEARCH_TIME)
  private Integer searchTime;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;


  public SearchLogEvent additionalInfo(String additionalInfo) {
    
    this.additionalInfo = additionalInfo;
    return this;
  }

   /**
   * Additional information that should be logged.
   * @return additionalInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information that should be logged.")

  public String getAdditionalInfo() {
    return additionalInfo;
  }


  public void setAdditionalInfo(String additionalInfo) {
    this.additionalInfo = additionalInfo;
  }


  public SearchLogEvent customSorting(Boolean customSorting) {
    
    this.customSorting = customSorting;
    return this;
  }

   /**
   * Set to true, if the search result was sorted using a custom sorting order, otherwise false.
   * @return customSorting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Set to true, if the search result was sorted using a custom sorting order, otherwise false.")

  public Boolean getCustomSorting() {
    return customSorting;
  }


  public void setCustomSorting(Boolean customSorting) {
    this.customSorting = customSorting;
  }


  public SearchLogEvent filters(List<Filter> filters) {
    
    this.filters = filters;
    return this;
  }

  public SearchLogEvent addFiltersItem(Filter filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * The filters active in the search result.
   * @return filters
  **/
  @ApiModelProperty(required = true, value = "The filters active in the search result.")

  public List<Filter> getFilters() {
    return filters;
  }


  public void setFilters(List<Filter> filters) {
    this.filters = filters;
  }


  public SearchLogEvent hitCount(Integer hitCount) {
    
    this.hitCount = hitCount;
    return this;
  }

   /**
   * The total number of products in the search result.
   * @return hitCount
  **/
  @ApiModelProperty(required = true, value = "The total number of products in the search result.")

  public Integer getHitCount() {
    return hitCount;
  }


  public void setHitCount(Integer hitCount) {
    this.hitCount = hitCount;
  }


  public SearchLogEvent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the product.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The ID of the product.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SearchLogEvent masterId(String masterId) {
    
    this.masterId = masterId;
    return this;
  }

   /**
   * Contains the master ID, if the article is a variant and &#39;ID&#39; refers to the variant.
   * @return masterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the master ID, if the article is a variant and 'ID' refers to the variant.")

  public String getMasterId() {
    return masterId;
  }


  public void setMasterId(String masterId) {
    this.masterId = masterId;
  }


  public SearchLogEvent maxScore(Integer maxScore) {
    
    this.maxScore = maxScore;
    return this;
  }

   /**
   * The score of the first product in the result.
   * @return maxScore
  **/
  @ApiModelProperty(required = true, value = "The score of the first product in the result.")

  public Integer getMaxScore() {
    return maxScore;
  }


  public void setMaxScore(Integer maxScore) {
    this.maxScore = maxScore;
  }


  public SearchLogEvent minScore(Integer minScore) {
    
    this.minScore = minScore;
    return this;
  }

   /**
   * The score of the last product in the result.
   * @return minScore
  **/
  @ApiModelProperty(required = true, value = "The score of the last product in the result.")

  public Integer getMinScore() {
    return minScore;
  }


  public void setMinScore(Integer minScore) {
    this.minScore = minScore;
  }


  public SearchLogEvent page(Integer page) {
    
    this.page = page;
    return this;
  }

   /**
   * The page number delivered by the search result.
   * @return page
  **/
  @ApiModelProperty(required = true, value = "The page number delivered by the search result.")

  public Integer getPage() {
    return page;
  }


  public void setPage(Integer page) {
    this.page = page;
  }


  public SearchLogEvent pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * The maximum number of products on a page.
   * @return pageSize
  **/
  @ApiModelProperty(required = true, value = "The maximum number of products on a page.")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public SearchLogEvent purchaserId(String purchaserId) {
    
    this.purchaserId = purchaserId;
    return this;
  }

   /**
   * The ID for customer specific pricing.
   * @return purchaserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID for customer specific pricing.")

  public String getPurchaserId() {
    return purchaserId;
  }


  public void setPurchaserId(String purchaserId) {
    this.purchaserId = purchaserId;
  }


  public SearchLogEvent query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * The search term that produced the search result.
   * @return query
  **/
  @ApiModelProperty(required = true, value = "The search term that produced the search result.")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public SearchLogEvent searchField(String searchField) {
    
    this.searchField = searchField;
    return this;
  }

   /**
   * Contains the name of the search field, if the search was performed on a specific field.
   * @return searchField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the name of the search field, if the search was performed on a specific field.")

  public String getSearchField() {
    return searchField;
  }


  public void setSearchField(String searchField) {
    this.searchField = searchField;
  }


  public SearchLogEvent searchTime(Integer searchTime) {
    
    this.searchTime = searchTime;
    return this;
  }

   /**
   * The time required to produce the results (in ms).
   * @return searchTime
  **/
  @ApiModelProperty(required = true, value = "The time required to produce the results (in ms).")

  public Integer getSearchTime() {
    return searchTime;
  }


  public void setSearchTime(Integer searchTime) {
    this.searchTime = searchTime;
  }


  public SearchLogEvent sid(String sid) {
    
    this.sid = sid;
    return this;
  }

   /**
   * The session ID.
   * @return sid
  **/
  @ApiModelProperty(required = true, value = "The session ID.")

  public String getSid() {
    return sid;
  }


  public void setSid(String sid) {
    this.sid = sid;
  }


  public SearchLogEvent title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title of the product.
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The title of the product.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public SearchLogEvent userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The ID of the user who issued the request.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user who issued the request.")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchLogEvent searchLogEvent = (SearchLogEvent) o;
    return Objects.equals(this.additionalInfo, searchLogEvent.additionalInfo) &&
        Objects.equals(this.customSorting, searchLogEvent.customSorting) &&
        Objects.equals(this.filters, searchLogEvent.filters) &&
        Objects.equals(this.hitCount, searchLogEvent.hitCount) &&
        Objects.equals(this.id, searchLogEvent.id) &&
        Objects.equals(this.masterId, searchLogEvent.masterId) &&
        Objects.equals(this.maxScore, searchLogEvent.maxScore) &&
        Objects.equals(this.minScore, searchLogEvent.minScore) &&
        Objects.equals(this.page, searchLogEvent.page) &&
        Objects.equals(this.pageSize, searchLogEvent.pageSize) &&
        Objects.equals(this.purchaserId, searchLogEvent.purchaserId) &&
        Objects.equals(this.query, searchLogEvent.query) &&
        Objects.equals(this.searchField, searchLogEvent.searchField) &&
        Objects.equals(this.searchTime, searchLogEvent.searchTime) &&
        Objects.equals(this.sid, searchLogEvent.sid) &&
        Objects.equals(this.title, searchLogEvent.title) &&
        Objects.equals(this.userId, searchLogEvent.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalInfo, customSorting, filters, hitCount, id, masterId, maxScore, minScore, page, pageSize, purchaserId, query, searchField, searchTime, sid, title, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchLogEvent {\n");
    sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
    sb.append("    customSorting: ").append(toIndentedString(customSorting)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    hitCount: ").append(toIndentedString(hitCount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    masterId: ").append(toIndentedString(masterId)).append("\n");
    sb.append("    maxScore: ").append(toIndentedString(maxScore)).append("\n");
    sb.append("    minScore: ").append(toIndentedString(minScore)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    purchaserId: ").append(toIndentedString(purchaserId)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    searchField: ").append(toIndentedString(searchField)).append("\n");
    sb.append("    searchTime: ").append(toIndentedString(searchTime)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

