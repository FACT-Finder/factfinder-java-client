/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.PageLink;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Paging
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Paging {
  public static final String SERIALIZED_NAME_CURRENT_PAGE = "currentPage";
  @SerializedName(SERIALIZED_NAME_CURRENT_PAGE)
  private Integer currentPage;

  public static final String SERIALIZED_NAME_DEFAULT_HITS_PER_PAGE = "defaultHitsPerPage";
  @SerializedName(SERIALIZED_NAME_DEFAULT_HITS_PER_PAGE)
  private Integer defaultHitsPerPage;

  public static final String SERIALIZED_NAME_HITS_PER_PAGE = "hitsPerPage";
  @SerializedName(SERIALIZED_NAME_HITS_PER_PAGE)
  private Integer hitsPerPage;

  public static final String SERIALIZED_NAME_NEXT_LINK = "nextLink";
  @SerializedName(SERIALIZED_NAME_NEXT_LINK)
  private PageLink nextLink;

  public static final String SERIALIZED_NAME_PAGE_COUNT = "pageCount";
  @SerializedName(SERIALIZED_NAME_PAGE_COUNT)
  private Integer pageCount;

  public static final String SERIALIZED_NAME_PREVIOUS_LINK = "previousLink";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_LINK)
  private PageLink previousLink;


  public Paging currentPage(Integer currentPage) {
    
    this.currentPage = currentPage;
    return this;
  }

   /**
   * The number of the currently selected page.
   * @return currentPage
  **/
  @ApiModelProperty(required = true, value = "The number of the currently selected page.")

  public Integer getCurrentPage() {
    return currentPage;
  }


  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }


  public Paging defaultHitsPerPage(Integer defaultHitsPerPage) {
    
    this.defaultHitsPerPage = defaultHitsPerPage;
    return this;
  }

   /**
   * The default number of products shown per page, as defined in the configuration.
   * @return defaultHitsPerPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The default number of products shown per page, as defined in the configuration.")

  public Integer getDefaultHitsPerPage() {
    return defaultHitsPerPage;
  }


  public void setDefaultHitsPerPage(Integer defaultHitsPerPage) {
    this.defaultHitsPerPage = defaultHitsPerPage;
  }


  public Paging hitsPerPage(Integer hitsPerPage) {
    
    this.hitsPerPage = hitsPerPage;
    return this;
  }

   /**
   * The number of products shown per page (the last page may contain fewer products).
   * @return hitsPerPage
  **/
  @ApiModelProperty(required = true, value = "The number of products shown per page (the last page may contain fewer products).")

  public Integer getHitsPerPage() {
    return hitsPerPage;
  }


  public void setHitsPerPage(Integer hitsPerPage) {
    this.hitsPerPage = hitsPerPage;
  }


  public Paging nextLink(PageLink nextLink) {
    
    this.nextLink = nextLink;
    return this;
  }

   /**
   * Get nextLink
   * @return nextLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageLink getNextLink() {
    return nextLink;
  }


  public void setNextLink(PageLink nextLink) {
    this.nextLink = nextLink;
  }


  public Paging pageCount(Integer pageCount) {
    
    this.pageCount = pageCount;
    return this;
  }

   /**
   * The total number of pages for this search result.
   * @return pageCount
  **/
  @ApiModelProperty(required = true, value = "The total number of pages for this search result.")

  public Integer getPageCount() {
    return pageCount;
  }


  public void setPageCount(Integer pageCount) {
    this.pageCount = pageCount;
  }


  public Paging previousLink(PageLink previousLink) {
    
    this.previousLink = previousLink;
    return this;
  }

   /**
   * Get previousLink
   * @return previousLink
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PageLink getPreviousLink() {
    return previousLink;
  }


  public void setPreviousLink(PageLink previousLink) {
    this.previousLink = previousLink;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Paging paging = (Paging) o;
    return Objects.equals(this.currentPage, paging.currentPage) &&
        Objects.equals(this.defaultHitsPerPage, paging.defaultHitsPerPage) &&
        Objects.equals(this.hitsPerPage, paging.hitsPerPage) &&
        Objects.equals(this.nextLink, paging.nextLink) &&
        Objects.equals(this.pageCount, paging.pageCount) &&
        Objects.equals(this.previousLink, paging.previousLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentPage, defaultHitsPerPage, hitsPerPage, nextLink, pageCount, previousLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Paging {\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    defaultHitsPerPage: ").append(toIndentedString(defaultHitsPerPage)).append("\n");
    sb.append("    hitsPerPage: ").append(toIndentedString(hitsPerPage)).append("\n");
    sb.append("    nextLink: ").append(toIndentedString(nextLink)).append("\n");
    sb.append("    pageCount: ").append(toIndentedString(pageCount)).append("\n");
    sb.append("    previousLink: ").append(toIndentedString(previousLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

