/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FeedbackText
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FeedbackText {
  public static final String SERIALIZED_NAME_HTML = "html";
  @SerializedName(SERIALIZED_NAME_HTML)
  private Boolean html;

  public static final String SERIALIZED_NAME_LABEL = "label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_TEASER = "teaser";
  @SerializedName(SERIALIZED_NAME_TEASER)
  private Boolean teaser;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;


  public FeedbackText html(Boolean html) {
    
    this.html = html;
    return this;
  }

   /**
   * Set to true, if the text should be displayed as HTML.
   * @return html
  **/
  @ApiModelProperty(required = true, value = "Set to true, if the text should be displayed as HTML.")

  public Boolean getHtml() {
    return html;
  }


  public void setHtml(Boolean html) {
    this.html = html;
  }


  public FeedbackText label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Describes where the text should be displayed.
   * @return label
  **/
  @ApiModelProperty(example = "product detail - below product", required = true, value = "Describes where the text should be displayed.")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public FeedbackText position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * The position the text should be displayed at if it is a teaser
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The position the text should be displayed at if it is a teaser")

  public Integer getPosition() {
    return position;
  }


  public void setPosition(Integer position) {
    this.position = position;
  }


  public FeedbackText teaser(Boolean teaser) {
    
    this.teaser = teaser;
    return this;
  }

   /**
   * Set to true, if the text is considered a teaser
   * @return teaser
  **/
  @ApiModelProperty(required = true, value = "Set to true, if the text is considered a teaser")

  public Boolean getTeaser() {
    return teaser;
  }


  public void setTeaser(Boolean teaser) {
    this.teaser = teaser;
  }


  public FeedbackText text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * The text to be shown to the user.
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The text to be shown to the user.")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedbackText feedbackText = (FeedbackText) o;
    return Objects.equals(this.html, feedbackText.html) &&
        Objects.equals(this.label, feedbackText.label) &&
        Objects.equals(this.position, feedbackText.position) &&
        Objects.equals(this.teaser, feedbackText.teaser) &&
        Objects.equals(this.text, feedbackText.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(html, label, position, teaser, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedbackText {\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    teaser: ").append(toIndentedString(teaser)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

