/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;

/**
 * ExpirationData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ExpirationData {
  public static final String SERIALIZED_NAME_DATABASE = "database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private String database;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private String error;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private Date modified;

  public static final String SERIALIZED_NAME_MODIFIED_LOADED = "modifiedLoaded";
  @SerializedName(SERIALIZED_NAME_MODIFIED_LOADED)
  private Date modifiedLoaded;


  public ExpirationData database(String database) {
    
    this.database = database;
    return this;
  }

   /**
   * Name of the Database.
   * @return database
  **/
  @ApiModelProperty(required = true, value = "Name of the Database.")

  public String getDatabase() {
    return database;
  }


  public void setDatabase(String database) {
    this.database = database;
  }


  public ExpirationData error(String error) {
    
    this.error = error;
    return this;
  }

   /**
   * Error message of the error that occurred while getting the expiration info.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Error message of the error that occurred while getting the expiration info.")

  public String getError() {
    return error;
  }


  public void setError(String error) {
    this.error = error;
  }


  public ExpirationData modified(Date modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * Date of the last modification time of the database.
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the last modification time of the database.")

  public Date getModified() {
    return modified;
  }


  public void setModified(Date modified) {
    this.modified = modified;
  }


  public ExpirationData modifiedLoaded(Date modifiedLoaded) {
    
    this.modifiedLoaded = modifiedLoaded;
    return this;
  }

   /**
   * Date of the last modification time of the loaded database.
   * @return modifiedLoaded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the last modification time of the loaded database.")

  public Date getModifiedLoaded() {
    return modifiedLoaded;
  }


  public void setModifiedLoaded(Date modifiedLoaded) {
    this.modifiedLoaded = modifiedLoaded;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExpirationData expirationData = (ExpirationData) o;
    return Objects.equals(this.database, expirationData.database) &&
        Objects.equals(this.error, expirationData.error) &&
        Objects.equals(this.modified, expirationData.modified) &&
        Objects.equals(this.modifiedLoaded, expirationData.modifiedLoaded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(database, error, modified, modifiedLoaded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExpirationData {\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    modifiedLoaded: ").append(toIndentedString(modifiedLoaded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

