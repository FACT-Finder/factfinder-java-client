/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Contains information which will be returned when an error occurs.
 */
@ApiModel(description = "Contains information which will be returned when an error occurs.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ErrorDescription {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STACKTRACE = "stacktrace";
  @SerializedName(SERIALIZED_NAME_STACKTRACE)
  private List<String> stacktrace = null;


  public ErrorDescription description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description of the error cause
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Unique value already exists: ArticleNumber=1234", value = "A description of the error cause")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ErrorDescription name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the error
   * @return name
  **/
  @ApiModelProperty(example = "FieldConstraintException", required = true, value = "Name of the error")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ErrorDescription stacktrace(List<String> stacktrace) {
    
    this.stacktrace = stacktrace;
    return this;
  }

  public ErrorDescription addStacktraceItem(String stacktraceItem) {
    if (this.stacktrace == null) {
      this.stacktrace = new ArrayList<String>();
    }
    this.stacktrace.add(stacktraceItem);
    return this;
  }

   /**
   * The stacktrace from the error (will only be transmitted when the query parameter verbose&#x3D;true was added to the request)
   * @return stacktrace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "de.factfinder.worldmatch.index.FieldConstraintException: Unique value already exists: ArticleNumber=1234", value = "The stacktrace from the error (will only be transmitted when the query parameter verbose=true was added to the request)")

  public List<String> getStacktrace() {
    return stacktrace;
  }


  public void setStacktrace(List<String> stacktrace) {
    this.stacktrace = stacktrace;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorDescription errorDescription = (ErrorDescription) o;
    return Objects.equals(this.description, errorDescription.description) &&
        Objects.equals(this.name, errorDescription.name) &&
        Objects.equals(this.stacktrace, errorDescription.stacktrace);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, stacktrace);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorDescription {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stacktrace: ").append(toIndentedString(stacktrace)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

