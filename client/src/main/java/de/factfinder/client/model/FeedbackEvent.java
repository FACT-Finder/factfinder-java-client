/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FeedbackEvent
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FeedbackEvent {
  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_POSITIVE = "positive";
  @SerializedName(SERIALIZED_NAME_POSITIVE)
  private Boolean positive;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  private String sid;


  public FeedbackEvent message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Additional information provided by the user.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information provided by the user.")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public FeedbackEvent positive(Boolean positive) {
    
    this.positive = positive;
    return this;
  }

   /**
   * Set to true when the user gives a positive assessment of the result, otherwise false.
   * @return positive
  **/
  @ApiModelProperty(required = true, value = "Set to true when the user gives a positive assessment of the result, otherwise false.")

  public Boolean getPositive() {
    return positive;
  }


  public void setPositive(Boolean positive) {
    this.positive = positive;
  }


  public FeedbackEvent query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * The search term that produced the corresponding search result.
   * @return query
  **/
  @ApiModelProperty(required = true, value = "The search term that produced the corresponding search result.")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public FeedbackEvent sid(String sid) {
    
    this.sid = sid;
    return this;
  }

   /**
   * The session ID.
   * @return sid
  **/
  @ApiModelProperty(required = true, value = "The session ID.")

  public String getSid() {
    return sid;
  }


  public void setSid(String sid) {
    this.sid = sid;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeedbackEvent feedbackEvent = (FeedbackEvent) o;
    return Objects.equals(this.message, feedbackEvent.message) &&
        Objects.equals(this.positive, feedbackEvent.positive) &&
        Objects.equals(this.query, feedbackEvent.query) &&
        Objects.equals(this.sid, feedbackEvent.sid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, positive, query, sid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeedbackEvent {\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    positive: ").append(toIndentedString(positive)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

