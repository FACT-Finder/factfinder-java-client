/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.SearchParams;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ResultSuggestion
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ResultSuggestion {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = new HashMap<String, Object>();

  public static final String SERIALIZED_NAME_HIT_COUNT = "hitCount";
  @SerializedName(SERIALIZED_NAME_HIT_COUNT)
  private Integer hitCount;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public static final String SERIALIZED_NAME_SEARCH_PARAMS = "searchParams";
  @SerializedName(SERIALIZED_NAME_SEARCH_PARAMS)
  private SearchParams searchParams;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;


  public ResultSuggestion attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ResultSuggestion putAttributesItem(String key, Object attributesItem) {
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Contains additional information for the suggestion. Keys give the names of the attributes, with corresponding values.
   * @return attributes
  **/
  @ApiModelProperty(required = true, value = "Contains additional information for the suggestion. Keys give the names of the attributes, with corresponding values.")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public ResultSuggestion hitCount(Integer hitCount) {
    
    this.hitCount = hitCount;
    return this;
  }

   /**
   * The number of products that should be found when this suggestion is selected for a search.
   * @return hitCount
  **/
  @ApiModelProperty(required = true, value = "The number of products that should be found when this suggestion is selected for a search.")

  public Integer getHitCount() {
    return hitCount;
  }


  public void setHitCount(Integer hitCount) {
    this.hitCount = hitCount;
  }


  public ResultSuggestion image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * The URL of the image to be displayed to the user.
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The URL of the image to be displayed to the user.")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public ResultSuggestion name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name for the Suggest Entry that should be displayed to the user.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name for the Suggest Entry that should be displayed to the user.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ResultSuggestion score(Double score) {
    
    this.score = score;
    return this;
  }

   /**
   * Defines how well the suggestion matches the query.
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines how well the suggestion matches the query.")

  public Double getScore() {
    return score;
  }


  public void setScore(Double score) {
    this.score = score;
  }


  public ResultSuggestion searchParams(SearchParams searchParams) {
    
    this.searchParams = searchParams;
    return this;
  }

   /**
   * Get searchParams
   * @return searchParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SearchParams getSearchParams() {
    return searchParams;
  }


  public void setSearchParams(SearchParams searchParams) {
    this.searchParams = searchParams;
  }


  public ResultSuggestion type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The suggestion type.
   * @return type
  **/
  @ApiModelProperty(example = "brand", required = true, value = "The suggestion type.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultSuggestion resultSuggestion = (ResultSuggestion) o;
    return Objects.equals(this.attributes, resultSuggestion.attributes) &&
        Objects.equals(this.hitCount, resultSuggestion.hitCount) &&
        Objects.equals(this.image, resultSuggestion.image) &&
        Objects.equals(this.name, resultSuggestion.name) &&
        Objects.equals(this.score, resultSuggestion.score) &&
        Objects.equals(this.searchParams, resultSuggestion.searchParams) &&
        Objects.equals(this.type, resultSuggestion.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, hitCount, image, name, score, searchParams, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultSuggestion {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    hitCount: ").append(toIndentedString(hitCount)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    searchParams: ").append(toIndentedString(searchParams)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

