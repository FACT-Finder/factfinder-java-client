/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.Answer;
import de.factfinder.client.model.BreadCrumbTrailItem;
import de.factfinder.client.model.Campaign;
import de.factfinder.client.model.DescribedSortItem;
import de.factfinder.client.model.Facet;
import de.factfinder.client.model.Filter;
import de.factfinder.client.model.Geo;
import de.factfinder.client.model.Paging;
import de.factfinder.client.model.SearchControlParams;
import de.factfinder.client.model.SearchParams;
import de.factfinder.client.model.SearchRecord;
import de.factfinder.client.model.SingleWordSearchResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Result
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Result {
  public static final String SERIALIZED_NAME_ANSWERS = "answers";
  @SerializedName(SERIALIZED_NAME_ANSWERS)
  private List<Answer> answers = new ArrayList<Answer>();

  public static final String SERIALIZED_NAME_ARTICLE_NUMBER_SEARCH = "articleNumberSearch";
  @SerializedName(SERIALIZED_NAME_ARTICLE_NUMBER_SEARCH)
  private Boolean articleNumberSearch;

  public static final String SERIALIZED_NAME_BREAD_CRUMB_TRAIL = "breadCrumbTrail";
  @SerializedName(SERIALIZED_NAME_BREAD_CRUMB_TRAIL)
  private List<BreadCrumbTrailItem> breadCrumbTrail = new ArrayList<BreadCrumbTrailItem>();

  public static final String SERIALIZED_NAME_CAMPAIGNS = "campaigns";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS)
  private List<Campaign> campaigns = new ArrayList<Campaign>();

  public static final String SERIALIZED_NAME_FACETS = "facets";
  @SerializedName(SERIALIZED_NAME_FACETS)
  private List<Facet> facets = new ArrayList<Facet>();

  public static final String SERIALIZED_NAME_FIELD_ROLES = "fieldRoles";
  @SerializedName(SERIALIZED_NAME_FIELD_ROLES)
  private Map<String, String> fieldRoles = new HashMap<String, String>();

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<Filter> filters = new ArrayList<Filter>();

  public static final String SERIALIZED_NAME_FOLLOW_SEARCH = "followSearch";
  @SerializedName(SERIALIZED_NAME_FOLLOW_SEARCH)
  private String followSearch;

  public static final String SERIALIZED_NAME_GEO = "geo";
  @SerializedName(SERIALIZED_NAME_GEO)
  private Geo geo;

  public static final String SERIALIZED_NAME_HITS = "hits";
  @SerializedName(SERIALIZED_NAME_HITS)
  private List<SearchRecord> hits = new ArrayList<SearchRecord>();

  public static final String SERIALIZED_NAME_PAGING = "paging";
  @SerializedName(SERIALIZED_NAME_PAGING)
  private Paging paging;

  public static final String SERIALIZED_NAME_SCORE_FIRST_HIT = "scoreFirstHit";
  @SerializedName(SERIALIZED_NAME_SCORE_FIRST_HIT)
  private Double scoreFirstHit;

  public static final String SERIALIZED_NAME_SCORE_LAST_HIT = "scoreLastHit";
  @SerializedName(SERIALIZED_NAME_SCORE_LAST_HIT)
  private Double scoreLastHit;

  public static final String SERIALIZED_NAME_SEARCH_CONTROL_PARAMS = "searchControlParams";
  @SerializedName(SERIALIZED_NAME_SEARCH_CONTROL_PARAMS)
  private SearchControlParams searchControlParams;

  public static final String SERIALIZED_NAME_SEARCH_PARAMS = "searchParams";
  @SerializedName(SERIALIZED_NAME_SEARCH_PARAMS)
  private SearchParams searchParams;

  public static final String SERIALIZED_NAME_SINGLE_WORD_RESULTS = "singleWordResults";
  @SerializedName(SERIALIZED_NAME_SINGLE_WORD_RESULTS)
  private List<SingleWordSearchResult> singleWordResults = new ArrayList<SingleWordSearchResult>();

  public static final String SERIALIZED_NAME_SORT_ITEMS = "sortItems";
  @SerializedName(SERIALIZED_NAME_SORT_ITEMS)
  private List<DescribedSortItem> sortItems = new ArrayList<DescribedSortItem>();

  public static final String SERIALIZED_NAME_TIMED_OUT = "timedOut";
  @SerializedName(SERIALIZED_NAME_TIMED_OUT)
  private Boolean timedOut;

  public static final String SERIALIZED_NAME_TOOK_TOTAL = "tookTotal";
  @SerializedName(SERIALIZED_NAME_TOOK_TOTAL)
  private Long tookTotal;

  public static final String SERIALIZED_NAME_TOOK_WORLDMATCH = "tookWorldmatch";
  @SerializedName(SERIALIZED_NAME_TOOK_WORLDMATCH)
  private Long tookWorldmatch;

  public static final String SERIALIZED_NAME_TOTAL_HITS = "totalHits";
  @SerializedName(SERIALIZED_NAME_TOTAL_HITS)
  private Integer totalHits;


  public Result answers(List<Answer> answers) {
    
    this.answers = answers;
    return this;
  }

  public Result addAnswersItem(Answer answersItem) {
    this.answers.add(answersItem);
    return this;
  }

   /**
   * The selected answers of this result.
   * @return answers
  **/
  @ApiModelProperty(required = true, value = "The selected answers of this result.")

  public List<Answer> getAnswers() {
    return answers;
  }


  public void setAnswers(List<Answer> answers) {
    this.answers = answers;
  }


  public Result articleNumberSearch(Boolean articleNumberSearch) {
    
    this.articleNumberSearch = articleNumberSearch;
    return this;
  }

   /**
   * Set to true when an article number search was performed.
   * @return articleNumberSearch
  **/
  @ApiModelProperty(required = true, value = "Set to true when an article number search was performed.")

  public Boolean getArticleNumberSearch() {
    return articleNumberSearch;
  }


  public void setArticleNumberSearch(Boolean articleNumberSearch) {
    this.articleNumberSearch = articleNumberSearch;
  }


  public Result breadCrumbTrail(List<BreadCrumbTrailItem> breadCrumbTrail) {
    
    this.breadCrumbTrail = breadCrumbTrail;
    return this;
  }

  public Result addBreadCrumbTrailItem(BreadCrumbTrailItem breadCrumbTrailItem) {
    this.breadCrumbTrail.add(breadCrumbTrailItem);
    return this;
  }

   /**
   * Describes the actions that lead to the current result. This may be used to return to an intermediate search result.
   * @return breadCrumbTrail
  **/
  @ApiModelProperty(required = true, value = "Describes the actions that lead to the current result. This may be used to return to an intermediate search result.")

  public List<BreadCrumbTrailItem> getBreadCrumbTrail() {
    return breadCrumbTrail;
  }


  public void setBreadCrumbTrail(List<BreadCrumbTrailItem> breadCrumbTrail) {
    this.breadCrumbTrail = breadCrumbTrail;
  }


  public Result campaigns(List<Campaign> campaigns) {
    
    this.campaigns = campaigns;
    return this;
  }

  public Result addCampaignsItem(Campaign campaignsItem) {
    this.campaigns.add(campaignsItem);
    return this;
  }

   /**
   * Contains the active campaigns for this result.
   * @return campaigns
  **/
  @ApiModelProperty(required = true, value = "Contains the active campaigns for this result.")

  public List<Campaign> getCampaigns() {
    return campaigns;
  }


  public void setCampaigns(List<Campaign> campaigns) {
    this.campaigns = campaigns;
  }


  public Result facets(List<Facet> facets) {
    
    this.facets = facets;
    return this;
  }

  public Result addFacetsItem(Facet facetsItem) {
    this.facets.add(facetsItem);
    return this;
  }

   /**
   * The ASN filters (for after search navigation).
   * @return facets
  **/
  @ApiModelProperty(required = true, value = "The ASN filters (for after search navigation).")

  public List<Facet> getFacets() {
    return facets;
  }


  public void setFacets(List<Facet> facets) {
    this.facets = facets;
  }


  public Result fieldRoles(Map<String, String> fieldRoles) {
    
    this.fieldRoles = fieldRoles;
    return this;
  }

  public Result putFieldRolesItem(String key, String fieldRolesItem) {
    this.fieldRoles.put(key, fieldRolesItem);
    return this;
  }

   /**
   * A field to role mapping. For example, a field role may be &#39;brand&#39;, meaning that the field contains the manufacturer&#39;s name. (key &#x3D; field role, value &#x3D; field name)
   * @return fieldRoles
  **/
  @ApiModelProperty(required = true, value = "A field to role mapping. For example, a field role may be 'brand', meaning that the field contains the manufacturer's name. (key = field role, value = field name)")

  public Map<String, String> getFieldRoles() {
    return fieldRoles;
  }


  public void setFieldRoles(Map<String, String> fieldRoles) {
    this.fieldRoles = fieldRoles;
  }


  public Result filters(List<Filter> filters) {
    
    this.filters = filters;
    return this;
  }

  public Result addFiltersItem(Filter filtersItem) {
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * The filter applied for this result.
   * @return filters
  **/
  @ApiModelProperty(required = true, value = "The filter applied for this result.")

  public List<Filter> getFilters() {
    return filters;
  }


  public void setFilters(List<Filter> filters) {
    this.filters = filters;
  }


  public Result followSearch(String followSearch) {
    
    this.followSearch = followSearch;
    return this;
  }

   /**
   * Request linking param for follow-up search requests. Can improve request performance.
   * @return followSearch
  **/
  @ApiModelProperty(required = true, value = "Request linking param for follow-up search requests. Can improve request performance.")

  public String getFollowSearch() {
    return followSearch;
  }


  public void setFollowSearch(String followSearch) {
    this.followSearch = followSearch;
  }


  public Result geo(Geo geo) {
    
    this.geo = geo;
    return this;
  }

   /**
   * Get geo
   * @return geo
  **/
  @ApiModelProperty(required = true, value = "")

  public Geo getGeo() {
    return geo;
  }


  public void setGeo(Geo geo) {
    this.geo = geo;
  }


  public Result hits(List<SearchRecord> hits) {
    
    this.hits = hits;
    return this;
  }

  public Result addHitsItem(SearchRecord hitsItem) {
    this.hits.add(hitsItem);
    return this;
  }

   /**
   * The relevant products.
   * @return hits
  **/
  @ApiModelProperty(required = true, value = "The relevant products.")

  public List<SearchRecord> getHits() {
    return hits;
  }


  public void setHits(List<SearchRecord> hits) {
    this.hits = hits;
  }


  public Result paging(Paging paging) {
    
    this.paging = paging;
    return this;
  }

   /**
   * Get paging
   * @return paging
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Paging getPaging() {
    return paging;
  }


  public void setPaging(Paging paging) {
    this.paging = paging;
  }


  public Result scoreFirstHit(Double scoreFirstHit) {
    
    this.scoreFirstHit = scoreFirstHit;
    return this;
  }

   /**
   * The score of the best match in the search result.
   * @return scoreFirstHit
  **/
  @ApiModelProperty(required = true, value = "The score of the best match in the search result.")

  public Double getScoreFirstHit() {
    return scoreFirstHit;
  }


  public void setScoreFirstHit(Double scoreFirstHit) {
    this.scoreFirstHit = scoreFirstHit;
  }


  public Result scoreLastHit(Double scoreLastHit) {
    
    this.scoreLastHit = scoreLastHit;
    return this;
  }

   /**
   * The score of the worst match in the search result.
   * @return scoreLastHit
  **/
  @ApiModelProperty(required = true, value = "The score of the worst match in the search result.")

  public Double getScoreLastHit() {
    return scoreLastHit;
  }


  public void setScoreLastHit(Double scoreLastHit) {
    this.scoreLastHit = scoreLastHit;
  }


  public Result searchControlParams(SearchControlParams searchControlParams) {
    
    this.searchControlParams = searchControlParams;
    return this;
  }

   /**
   * Get searchControlParams
   * @return searchControlParams
  **/
  @ApiModelProperty(required = true, value = "")

  public SearchControlParams getSearchControlParams() {
    return searchControlParams;
  }


  public void setSearchControlParams(SearchControlParams searchControlParams) {
    this.searchControlParams = searchControlParams;
  }


  public Result searchParams(SearchParams searchParams) {
    
    this.searchParams = searchParams;
    return this;
  }

   /**
   * Get searchParams
   * @return searchParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SearchParams getSearchParams() {
    return searchParams;
  }


  public void setSearchParams(SearchParams searchParams) {
    this.searchParams = searchParams;
  }


  public Result singleWordResults(List<SingleWordSearchResult> singleWordResults) {
    
    this.singleWordResults = singleWordResults;
    return this;
  }

  public Result addSingleWordResultsItem(SingleWordSearchResult singleWordResultsItem) {
    this.singleWordResults.add(singleWordResultsItem);
    return this;
  }

   /**
   * Contains the result from the single word search.
   * @return singleWordResults
  **/
  @ApiModelProperty(required = true, value = "Contains the result from the single word search.")

  public List<SingleWordSearchResult> getSingleWordResults() {
    return singleWordResults;
  }


  public void setSingleWordResults(List<SingleWordSearchResult> singleWordResults) {
    this.singleWordResults = singleWordResults;
  }


  public Result sortItems(List<DescribedSortItem> sortItems) {
    
    this.sortItems = sortItems;
    return this;
  }

  public Result addSortItemsItem(DescribedSortItem sortItemsItem) {
    this.sortItems.add(sortItemsItem);
    return this;
  }

   /**
   * Contains the available sortings.
   * @return sortItems
  **/
  @ApiModelProperty(required = true, value = "Contains the available sortings.")

  public List<DescribedSortItem> getSortItems() {
    return sortItems;
  }


  public void setSortItems(List<DescribedSortItem> sortItems) {
    this.sortItems = sortItems;
  }


  public Result timedOut(Boolean timedOut) {
    
    this.timedOut = timedOut;
    return this;
  }

   /**
   * If true, this search took longer than the timeout currently defined. Therefore, the results may not contain all relevant products.
   * @return timedOut
  **/
  @ApiModelProperty(required = true, value = "If true, this search took longer than the timeout currently defined. Therefore, the results may not contain all relevant products.")

  public Boolean getTimedOut() {
    return timedOut;
  }


  public void setTimedOut(Boolean timedOut) {
    this.timedOut = timedOut;
  }


  public Result tookTotal(Long tookTotal) {
    
    this.tookTotal = tookTotal;
    return this;
  }

   /**
   * The time required to produce the results in the framework (in ms).
   * @return tookTotal
  **/
  @ApiModelProperty(required = true, value = "The time required to produce the results in the framework (in ms).")

  public Long getTookTotal() {
    return tookTotal;
  }


  public void setTookTotal(Long tookTotal) {
    this.tookTotal = tookTotal;
  }


  public Result tookWorldmatch(Long tookWorldmatch) {
    
    this.tookWorldmatch = tookWorldmatch;
    return this;
  }

   /**
   * The time required to produce the results in the core (in ms).
   * @return tookWorldmatch
  **/
  @ApiModelProperty(required = true, value = "The time required to produce the results in the core (in ms).")

  public Long getTookWorldmatch() {
    return tookWorldmatch;
  }


  public void setTookWorldmatch(Long tookWorldmatch) {
    this.tookWorldmatch = tookWorldmatch;
  }


  public Result totalHits(Integer totalHits) {
    
    this.totalHits = totalHits;
    return this;
  }

   /**
   * Total number of items in the search result.
   * @return totalHits
  **/
  @ApiModelProperty(required = true, value = "Total number of items in the search result.")

  public Integer getTotalHits() {
    return totalHits;
  }


  public void setTotalHits(Integer totalHits) {
    this.totalHits = totalHits;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result result = (Result) o;
    return Objects.equals(this.answers, result.answers) &&
        Objects.equals(this.articleNumberSearch, result.articleNumberSearch) &&
        Objects.equals(this.breadCrumbTrail, result.breadCrumbTrail) &&
        Objects.equals(this.campaigns, result.campaigns) &&
        Objects.equals(this.facets, result.facets) &&
        Objects.equals(this.fieldRoles, result.fieldRoles) &&
        Objects.equals(this.filters, result.filters) &&
        Objects.equals(this.followSearch, result.followSearch) &&
        Objects.equals(this.geo, result.geo) &&
        Objects.equals(this.hits, result.hits) &&
        Objects.equals(this.paging, result.paging) &&
        Objects.equals(this.scoreFirstHit, result.scoreFirstHit) &&
        Objects.equals(this.scoreLastHit, result.scoreLastHit) &&
        Objects.equals(this.searchControlParams, result.searchControlParams) &&
        Objects.equals(this.searchParams, result.searchParams) &&
        Objects.equals(this.singleWordResults, result.singleWordResults) &&
        Objects.equals(this.sortItems, result.sortItems) &&
        Objects.equals(this.timedOut, result.timedOut) &&
        Objects.equals(this.tookTotal, result.tookTotal) &&
        Objects.equals(this.tookWorldmatch, result.tookWorldmatch) &&
        Objects.equals(this.totalHits, result.totalHits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answers, articleNumberSearch, breadCrumbTrail, campaigns, facets, fieldRoles, filters, followSearch, geo, hits, paging, scoreFirstHit, scoreLastHit, searchControlParams, searchParams, singleWordResults, sortItems, timedOut, tookTotal, tookWorldmatch, totalHits);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    articleNumberSearch: ").append(toIndentedString(articleNumberSearch)).append("\n");
    sb.append("    breadCrumbTrail: ").append(toIndentedString(breadCrumbTrail)).append("\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    facets: ").append(toIndentedString(facets)).append("\n");
    sb.append("    fieldRoles: ").append(toIndentedString(fieldRoles)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    followSearch: ").append(toIndentedString(followSearch)).append("\n");
    sb.append("    geo: ").append(toIndentedString(geo)).append("\n");
    sb.append("    hits: ").append(toIndentedString(hits)).append("\n");
    sb.append("    paging: ").append(toIndentedString(paging)).append("\n");
    sb.append("    scoreFirstHit: ").append(toIndentedString(scoreFirstHit)).append("\n");
    sb.append("    scoreLastHit: ").append(toIndentedString(scoreLastHit)).append("\n");
    sb.append("    searchControlParams: ").append(toIndentedString(searchControlParams)).append("\n");
    sb.append("    searchParams: ").append(toIndentedString(searchParams)).append("\n");
    sb.append("    singleWordResults: ").append(toIndentedString(singleWordResults)).append("\n");
    sb.append("    sortItems: ").append(toIndentedString(sortItems)).append("\n");
    sb.append("    timedOut: ").append(toIndentedString(timedOut)).append("\n");
    sb.append("    tookTotal: ").append(toIndentedString(tookTotal)).append("\n");
    sb.append("    tookWorldmatch: ").append(toIndentedString(tookWorldmatch)).append("\n");
    sb.append("    totalHits: ").append(toIndentedString(totalHits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

