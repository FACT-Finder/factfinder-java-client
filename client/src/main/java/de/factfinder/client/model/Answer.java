/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import de.factfinder.client.model.Question;
import de.factfinder.client.model.SearchParams;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Answer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Answer {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_QUESTIONS = "questions";
  @SerializedName(SERIALIZED_NAME_QUESTIONS)
  private List<Question> questions = null;

  public static final String SERIALIZED_NAME_SEARCH_PARAMS = "searchParams";
  @SerializedName(SERIALIZED_NAME_SEARCH_PARAMS)
  private SearchParams searchParams;

  public static final String SERIALIZED_NAME_SELECTED = "selected";
  @SerializedName(SERIALIZED_NAME_SELECTED)
  private Boolean selected;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;


  public Answer id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of this answer.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "ID of this answer.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public Answer questions(List<Question> questions) {
    
    this.questions = questions;
    return this;
  }

  public Answer addQuestionsItem(Question questionsItem) {
    if (this.questions == null) {
      this.questions = new ArrayList<Question>();
    }
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * The questions to be shown when the answer is selected.
   * @return questions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The questions to be shown when the answer is selected.")

  public List<Question> getQuestions() {
    return questions;
  }


  public void setQuestions(List<Question> questions) {
    this.questions = questions;
  }


  public Answer searchParams(SearchParams searchParams) {
    
    this.searchParams = searchParams;
    return this;
  }

   /**
   * Get searchParams
   * @return searchParams
  **/
  @ApiModelProperty(required = true, value = "")

  public SearchParams getSearchParams() {
    return searchParams;
  }


  public void setSearchParams(SearchParams searchParams) {
    this.searchParams = searchParams;
  }


  public Answer selected(Boolean selected) {
    
    this.selected = selected;
    return this;
  }

   /**
   * True if the answer has been selected.
   * @return selected
  **/
  @ApiModelProperty(required = true, value = "True if the answer has been selected.")

  public Boolean getSelected() {
    return selected;
  }


  public void setSelected(Boolean selected) {
    this.selected = selected;
  }


  public Answer text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Text, shown when the answer is active.
   * @return text
  **/
  @ApiModelProperty(required = true, value = "Text, shown when the answer is active.")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Answer answer = (Answer) o;
    return Objects.equals(this.id, answer.id) &&
        Objects.equals(this.questions, answer.questions) &&
        Objects.equals(this.searchParams, answer.searchParams) &&
        Objects.equals(this.selected, answer.selected) &&
        Objects.equals(this.text, answer.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, questions, searchParams, selected, text);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Answer {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("    searchParams: ").append(toIndentedString(searchParams)).append("\n");
    sb.append("    selected: ").append(toIndentedString(selected)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

