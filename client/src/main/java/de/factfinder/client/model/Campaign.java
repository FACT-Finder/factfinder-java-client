/*
 * FACT-Finder REST-API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import de.factfinder.client.model.FeedbackText;
import de.factfinder.client.model.Question;
import de.factfinder.client.model.RecordWithId;
import de.factfinder.client.model.Target;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Campaign
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-03T08:09:51.291+02:00")
public class Campaign {
  @SerializedName("activeQuestions")
  private List<Question> activeQuestions = new ArrayList<Question>();

  @SerializedName("advisorTree")
  private List<Question> advisorTree = new ArrayList<Question>();

  @SerializedName("category")
  private String category = null;

  @SerializedName("feedbackTexts")
  private List<FeedbackText> feedbackTexts = new ArrayList<FeedbackText>();

  /**
   * Gets or Sets flavour
   */
  public enum FlavourEnum {
    @SerializedName("ADVISOR")
    ADVISOR("ADVISOR"),
    
    @SerializedName("REDIRECT")
    REDIRECT("REDIRECT"),
    
    @SerializedName("FEEDBACK")
    FEEDBACK("FEEDBACK"),
    
    @SerializedName("PRODUCT")
    PRODUCT("PRODUCT");

    private String value;

    FlavourEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("flavour")
  private FlavourEnum flavour = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pushedProductsRecords")
  private List<RecordWithId> pushedProductsRecords = new ArrayList<RecordWithId>();

  @SerializedName("target")
  private Target target = null;

  public Campaign activeQuestions(List<Question> activeQuestions) {
    this.activeQuestions = activeQuestions;
    return this;
  }

  public Campaign addActiveQuestionsItem(Question activeQuestionsItem) {
    this.activeQuestions.add(activeQuestionsItem);
    return this;
  }

   /**
   * Get activeQuestions
   * @return activeQuestions
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Question> getActiveQuestions() {
    return activeQuestions;
  }

  public void setActiveQuestions(List<Question> activeQuestions) {
    this.activeQuestions = activeQuestions;
  }

  public Campaign advisorTree(List<Question> advisorTree) {
    this.advisorTree = advisorTree;
    return this;
  }

  public Campaign addAdvisorTreeItem(Question advisorTreeItem) {
    this.advisorTree.add(advisorTreeItem);
    return this;
  }

   /**
   * Get advisorTree
   * @return advisorTree
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public List<Question> getAdvisorTree() {
    return advisorTree;
  }

  public void setAdvisorTree(List<Question> advisorTree) {
    this.advisorTree = advisorTree;
  }

  public Campaign category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public Campaign feedbackTexts(List<FeedbackText> feedbackTexts) {
    this.feedbackTexts = feedbackTexts;
    return this;
  }

  public Campaign addFeedbackTextsItem(FeedbackText feedbackTextsItem) {
    this.feedbackTexts.add(feedbackTextsItem);
    return this;
  }

   /**
   * Get feedbackTexts
   * @return feedbackTexts
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<FeedbackText> getFeedbackTexts() {
    return feedbackTexts;
  }

  public void setFeedbackTexts(List<FeedbackText> feedbackTexts) {
    this.feedbackTexts = feedbackTexts;
  }

  public Campaign flavour(FlavourEnum flavour) {
    this.flavour = flavour;
    return this;
  }

   /**
   * Get flavour
   * @return flavour
  **/
  @ApiModelProperty(example = "null", required = true, value = "")
  public FlavourEnum getFlavour() {
    return flavour;
  }

  public void setFlavour(FlavourEnum flavour) {
    this.flavour = flavour;
  }

  public Campaign id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Campaign name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Campaign pushedProductsRecords(List<RecordWithId> pushedProductsRecords) {
    this.pushedProductsRecords = pushedProductsRecords;
    return this;
  }

  public Campaign addPushedProductsRecordsItem(RecordWithId pushedProductsRecordsItem) {
    this.pushedProductsRecords.add(pushedProductsRecordsItem);
    return this;
  }

   /**
   * Get pushedProductsRecords
   * @return pushedProductsRecords
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<RecordWithId> getPushedProductsRecords() {
    return pushedProductsRecords;
  }

  public void setPushedProductsRecords(List<RecordWithId> pushedProductsRecords) {
    this.pushedProductsRecords = pushedProductsRecords;
  }

  public Campaign target(Target target) {
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @ApiModelProperty(example = "null", value = "")
  public Target getTarget() {
    return target;
  }

  public void setTarget(Target target) {
    this.target = target;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return Objects.equals(this.activeQuestions, campaign.activeQuestions) &&
        Objects.equals(this.advisorTree, campaign.advisorTree) &&
        Objects.equals(this.category, campaign.category) &&
        Objects.equals(this.feedbackTexts, campaign.feedbackTexts) &&
        Objects.equals(this.flavour, campaign.flavour) &&
        Objects.equals(this.id, campaign.id) &&
        Objects.equals(this.name, campaign.name) &&
        Objects.equals(this.pushedProductsRecords, campaign.pushedProductsRecords) &&
        Objects.equals(this.target, campaign.target);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeQuestions, advisorTree, category, feedbackTexts, flavour, id, name, pushedProductsRecords, target);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    
    sb.append("    activeQuestions: ").append(toIndentedString(activeQuestions)).append("\n");
    sb.append("    advisorTree: ").append(toIndentedString(advisorTree)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    feedbackTexts: ").append(toIndentedString(feedbackTexts)).append("\n");
    sb.append("    flavour: ").append(toIndentedString(flavour)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pushedProductsRecords: ").append(toIndentedString(pushedProductsRecords)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

