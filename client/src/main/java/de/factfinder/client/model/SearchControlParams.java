/*
 * FACT-Finder REST-API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.factfinder.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SearchControlParams
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchControlParams {
  public static final String SERIALIZED_NAME_DEDUPLICATION_FIELD = "deduplicationField";
  @SerializedName(SERIALIZED_NAME_DEDUPLICATION_FIELD)
  private String deduplicationField;

  public static final String SERIALIZED_NAME_IDS_ONLY = "idsOnly";
  @SerializedName(SERIALIZED_NAME_IDS_ONLY)
  private Boolean idsOnly;

  public static final String SERIALIZED_NAME_USE_AB_TEST = "useAbTest";
  @SerializedName(SERIALIZED_NAME_USE_AB_TEST)
  private Boolean useAbTest;

  public static final String SERIALIZED_NAME_USE_ASN = "useAsn";
  @SerializedName(SERIALIZED_NAME_USE_ASN)
  private Boolean useAsn;

  public static final String SERIALIZED_NAME_USE_ASO = "useAso";
  @SerializedName(SERIALIZED_NAME_USE_ASO)
  private Boolean useAso;

  public static final String SERIALIZED_NAME_USE_CACHE = "useCache";
  @SerializedName(SERIALIZED_NAME_USE_CACHE)
  private Boolean useCache;

  public static final String SERIALIZED_NAME_USE_CAMPAIGNS = "useCampaigns";
  @SerializedName(SERIALIZED_NAME_USE_CAMPAIGNS)
  private Boolean useCampaigns;

  public static final String SERIALIZED_NAME_USE_DEDUPLICATION = "useDeduplication";
  @SerializedName(SERIALIZED_NAME_USE_DEDUPLICATION)
  private Boolean useDeduplication;

  public static final String SERIALIZED_NAME_USE_FOUND_WORDS = "useFoundWords";
  @SerializedName(SERIALIZED_NAME_USE_FOUND_WORDS)
  private Boolean useFoundWords;

  public static final String SERIALIZED_NAME_USE_GEO = "useGeo";
  @SerializedName(SERIALIZED_NAME_USE_GEO)
  private Boolean useGeo;

  public static final String SERIALIZED_NAME_USE_PERSONALIZATION = "usePersonalization";
  @SerializedName(SERIALIZED_NAME_USE_PERSONALIZATION)
  private Boolean usePersonalization;

  public static final String SERIALIZED_NAME_USE_RANKING = "useRanking";
  @SerializedName(SERIALIZED_NAME_USE_RANKING)
  private Boolean useRanking;

  public static final String SERIALIZED_NAME_USE_SEARCH = "useSearch";
  @SerializedName(SERIALIZED_NAME_USE_SEARCH)
  private Boolean useSearch;

  public static final String SERIALIZED_NAME_USE_SEMANTIC_ENHANCER = "useSemanticEnhancer";
  @SerializedName(SERIALIZED_NAME_USE_SEMANTIC_ENHANCER)
  private Boolean useSemanticEnhancer;


  public SearchControlParams deduplicationField(String deduplicationField) {
    
    this.deduplicationField = deduplicationField;
    return this;
  }

   /**
   * Specifies on which field variants should be deduplicated.
   * @return deduplicationField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies on which field variants should be deduplicated.")

  public String getDeduplicationField() {
    return deduplicationField;
  }


  public void setDeduplicationField(String deduplicationField) {
    this.deduplicationField = deduplicationField;
  }


  public SearchControlParams idsOnly(Boolean idsOnly) {
    
    this.idsOnly = idsOnly;
    return this;
  }

   /**
   * If true, the returned records will contain only record IDs.
   * @return idsOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the returned records will contain only record IDs.")

  public Boolean getIdsOnly() {
    return idsOnly;
  }


  public void setIdsOnly(Boolean idsOnly) {
    this.idsOnly = idsOnly;
  }


  public SearchControlParams useAbTest(Boolean useAbTest) {
    
    this.useAbTest = useAbTest;
    return this;
  }

   /**
   * If true abTest features will be active.
   * @return useAbTest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true abTest features will be active.")

  public Boolean getUseAbTest() {
    return useAbTest;
  }


  public void setUseAbTest(Boolean useAbTest) {
    this.useAbTest = useAbTest;
  }


  public SearchControlParams useAsn(Boolean useAsn) {
    
    this.useAsn = useAsn;
    return this;
  }

   /**
   * If true, filters should be generated for the result.
   * @return useAsn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, filters should be generated for the result.")

  public Boolean getUseAsn() {
    return useAsn;
  }


  public void setUseAsn(Boolean useAsn) {
    this.useAsn = useAsn;
  }


  public SearchControlParams useAso(Boolean useAso) {
    
    this.useAso = useAso;
    return this;
  }

   /**
   * If true, automatic search optimization will be used.
   * @return useAso
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, automatic search optimization will be used.")

  public Boolean getUseAso() {
    return useAso;
  }


  public void setUseAso(Boolean useAso) {
    this.useAso = useAso;
  }


  public SearchControlParams useCache(Boolean useCache) {
    
    this.useCache = useCache;
    return this;
  }

   /**
   * If true, the search result will be returned from cache memory, if a possible matching result exists.
   * @return useCache
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the search result will be returned from cache memory, if a possible matching result exists.")

  public Boolean getUseCache() {
    return useCache;
  }


  public void setUseCache(Boolean useCache) {
    this.useCache = useCache;
  }


  public SearchControlParams useCampaigns(Boolean useCampaigns) {
    
    this.useCampaigns = useCampaigns;
    return this;
  }

   /**
   * If true, campaigns corresponding to this search result will be returned.
   * @return useCampaigns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, campaigns corresponding to this search result will be returned.")

  public Boolean getUseCampaigns() {
    return useCampaigns;
  }


  public void setUseCampaigns(Boolean useCampaigns) {
    this.useCampaigns = useCampaigns;
  }


  public SearchControlParams useDeduplication(Boolean useDeduplication) {
    
    this.useDeduplication = useDeduplication;
    return this;
  }

   /**
   * If true, the configured deduplication of variants will be used.
   * @return useDeduplication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the configured deduplication of variants will be used.")

  public Boolean getUseDeduplication() {
    return useDeduplication;
  }


  public void setUseDeduplication(Boolean useDeduplication) {
    this.useDeduplication = useDeduplication;
  }


  public SearchControlParams useFoundWords(Boolean useFoundWords) {
    
    this.useFoundWords = useFoundWords;
    return this;
  }

   /**
   * If true, the words that led to the records in the search results will be determined; this may require a large amount of processing time.
   * @return useFoundWords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the words that led to the records in the search results will be determined; this may require a large amount of processing time.")

  public Boolean getUseFoundWords() {
    return useFoundWords;
  }


  public void setUseFoundWords(Boolean useFoundWords) {
    this.useFoundWords = useFoundWords;
  }


  public SearchControlParams useGeo(Boolean useGeo) {
    
    this.useGeo = useGeo;
    return this;
  }

   /**
   * Get useGeo
   * @return useGeo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseGeo() {
    return useGeo;
  }


  public void setUseGeo(Boolean useGeo) {
    this.useGeo = useGeo;
  }


  public SearchControlParams usePersonalization(Boolean usePersonalization) {
    
    this.usePersonalization = usePersonalization;
    return this;
  }

   /**
   * If true, the relevant products in the result will be personalized.
   * @return usePersonalization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the relevant products in the result will be personalized.")

  public Boolean getUsePersonalization() {
    return usePersonalization;
  }


  public void setUsePersonalization(Boolean usePersonalization) {
    this.usePersonalization = usePersonalization;
  }


  public SearchControlParams useRanking(Boolean useRanking) {
    
    this.useRanking = useRanking;
    return this;
  }

   /**
   * If true, ranking will be applied.
   * @return useRanking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, ranking will be applied.")

  public Boolean getUseRanking() {
    return useRanking;
  }


  public void setUseRanking(Boolean useRanking) {
    this.useRanking = useRanking;
  }


  public SearchControlParams useSearch(Boolean useSearch) {
    
    this.useSearch = useSearch;
    return this;
  }

   /**
   * If true, search will be executed for the query.
   * @return useSearch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, search will be executed for the query.")

  public Boolean getUseSearch() {
    return useSearch;
  }


  public void setUseSearch(Boolean useSearch) {
    this.useSearch = useSearch;
  }


  public SearchControlParams useSemanticEnhancer(Boolean useSemanticEnhancer) {
    
    this.useSemanticEnhancer = useSemanticEnhancer;
    return this;
  }

   /**
   * If true, the semantic enhancer will be used.
   * @return useSemanticEnhancer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the semantic enhancer will be used.")

  public Boolean getUseSemanticEnhancer() {
    return useSemanticEnhancer;
  }


  public void setUseSemanticEnhancer(Boolean useSemanticEnhancer) {
    this.useSemanticEnhancer = useSemanticEnhancer;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchControlParams searchControlParams = (SearchControlParams) o;
    return Objects.equals(this.deduplicationField, searchControlParams.deduplicationField) &&
        Objects.equals(this.idsOnly, searchControlParams.idsOnly) &&
        Objects.equals(this.useAbTest, searchControlParams.useAbTest) &&
        Objects.equals(this.useAsn, searchControlParams.useAsn) &&
        Objects.equals(this.useAso, searchControlParams.useAso) &&
        Objects.equals(this.useCache, searchControlParams.useCache) &&
        Objects.equals(this.useCampaigns, searchControlParams.useCampaigns) &&
        Objects.equals(this.useDeduplication, searchControlParams.useDeduplication) &&
        Objects.equals(this.useFoundWords, searchControlParams.useFoundWords) &&
        Objects.equals(this.useGeo, searchControlParams.useGeo) &&
        Objects.equals(this.usePersonalization, searchControlParams.usePersonalization) &&
        Objects.equals(this.useRanking, searchControlParams.useRanking) &&
        Objects.equals(this.useSearch, searchControlParams.useSearch) &&
        Objects.equals(this.useSemanticEnhancer, searchControlParams.useSemanticEnhancer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deduplicationField, idsOnly, useAbTest, useAsn, useAso, useCache, useCampaigns, useDeduplication, useFoundWords, useGeo, usePersonalization, useRanking, useSearch, useSemanticEnhancer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchControlParams {\n");
    sb.append("    deduplicationField: ").append(toIndentedString(deduplicationField)).append("\n");
    sb.append("    idsOnly: ").append(toIndentedString(idsOnly)).append("\n");
    sb.append("    useAbTest: ").append(toIndentedString(useAbTest)).append("\n");
    sb.append("    useAsn: ").append(toIndentedString(useAsn)).append("\n");
    sb.append("    useAso: ").append(toIndentedString(useAso)).append("\n");
    sb.append("    useCache: ").append(toIndentedString(useCache)).append("\n");
    sb.append("    useCampaigns: ").append(toIndentedString(useCampaigns)).append("\n");
    sb.append("    useDeduplication: ").append(toIndentedString(useDeduplication)).append("\n");
    sb.append("    useFoundWords: ").append(toIndentedString(useFoundWords)).append("\n");
    sb.append("    useGeo: ").append(toIndentedString(useGeo)).append("\n");
    sb.append("    usePersonalization: ").append(toIndentedString(usePersonalization)).append("\n");
    sb.append("    useRanking: ").append(toIndentedString(useRanking)).append("\n");
    sb.append("    useSearch: ").append(toIndentedString(useSearch)).append("\n");
    sb.append("    useSemanticEnhancer: ").append(toIndentedString(useSemanticEnhancer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

