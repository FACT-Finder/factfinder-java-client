/*
 * FACT-Finder REST-API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.GroupElement;
import java.util.ArrayList;
import java.util.List;

/**
 * Group
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-14T06:49:07.742+02:00")
public class Group {
  @SerializedName("detailedLinks")
  private Integer detailedLinks = null;

  @SerializedName("elements")
  private List<GroupElement> elements = new ArrayList<GroupElement>();

  /**
   * Gets or Sets filterStyle
   */
  public enum FilterStyleEnum {
    @SerializedName("DEFAULT")
    DEFAULT("DEFAULT"),
    
    @SerializedName("SLIDER")
    SLIDER("SLIDER"),
    
    @SerializedName("MULTISELECT")
    MULTISELECT("MULTISELECT"),
    
    @SerializedName("TREE")
    TREE("TREE");

    private String value;

    FilterStyleEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("filterStyle")
  private FilterStyleEnum filterStyle = null;

  @SerializedName("groupOrder")
  private Integer groupOrder = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("selectedElements")
  private List<GroupElement> selectedElements = new ArrayList<GroupElement>();

  /**
   * Gets or Sets selectionType
   */
  public enum SelectionTypeEnum {
    @SerializedName("singleHideUnselected")
    SINGLEHIDEUNSELECTED("singleHideUnselected"),
    
    @SerializedName("singleShowUnselected")
    SINGLESHOWUNSELECTED("singleShowUnselected"),
    
    @SerializedName("multiSelectOr")
    MULTISELECTOR("multiSelectOr"),
    
    @SerializedName("multiSelectAnd")
    MULTISELECTAND("multiSelectAnd");

    private String value;

    SelectionTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("selectionType")
  private SelectionTypeEnum selectionType = null;

  @SerializedName("showPreviewImages")
  private Boolean showPreviewImages = null;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    @SerializedName("number")
    NUMBER("number"),
    
    @SerializedName("multi")
    MULTI("multi"),
    
    @SerializedName("text")
    TEXT("text"),
    
    @SerializedName("categoryPath")
    CATEGORYPATH("categoryPath");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("unit")
  private String unit = null;

  public Group detailedLinks(Integer detailedLinks) {
    this.detailedLinks = detailedLinks;
    return this;
  }

   /**
   * Get detailedLinks
   * @return detailedLinks
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getDetailedLinks() {
    return detailedLinks;
  }

  public void setDetailedLinks(Integer detailedLinks) {
    this.detailedLinks = detailedLinks;
  }

  public Group elements(List<GroupElement> elements) {
    this.elements = elements;
    return this;
  }

  public Group addElementsItem(GroupElement elementsItem) {
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * Get elements
   * @return elements
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<GroupElement> getElements() {
    return elements;
  }

  public void setElements(List<GroupElement> elements) {
    this.elements = elements;
  }

  public Group filterStyle(FilterStyleEnum filterStyle) {
    this.filterStyle = filterStyle;
    return this;
  }

   /**
   * Get filterStyle
   * @return filterStyle
  **/
  @ApiModelProperty(example = "null", value = "")
  public FilterStyleEnum getFilterStyle() {
    return filterStyle;
  }

  public void setFilterStyle(FilterStyleEnum filterStyle) {
    this.filterStyle = filterStyle;
  }

  public Group groupOrder(Integer groupOrder) {
    this.groupOrder = groupOrder;
    return this;
  }

   /**
   * Get groupOrder
   * @return groupOrder
  **/
  @ApiModelProperty(example = "null", value = "")
  public Integer getGroupOrder() {
    return groupOrder;
  }

  public void setGroupOrder(Integer groupOrder) {
    this.groupOrder = groupOrder;
  }

  public Group name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Group selectedElements(List<GroupElement> selectedElements) {
    this.selectedElements = selectedElements;
    return this;
  }

  public Group addSelectedElementsItem(GroupElement selectedElementsItem) {
    this.selectedElements.add(selectedElementsItem);
    return this;
  }

   /**
   * Get selectedElements
   * @return selectedElements
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<GroupElement> getSelectedElements() {
    return selectedElements;
  }

  public void setSelectedElements(List<GroupElement> selectedElements) {
    this.selectedElements = selectedElements;
  }

  public Group selectionType(SelectionTypeEnum selectionType) {
    this.selectionType = selectionType;
    return this;
  }

   /**
   * Get selectionType
   * @return selectionType
  **/
  @ApiModelProperty(example = "null", value = "")
  public SelectionTypeEnum getSelectionType() {
    return selectionType;
  }

  public void setSelectionType(SelectionTypeEnum selectionType) {
    this.selectionType = selectionType;
  }

  public Group showPreviewImages(Boolean showPreviewImages) {
    this.showPreviewImages = showPreviewImages;
    return this;
  }

   /**
   * Get showPreviewImages
   * @return showPreviewImages
  **/
  @ApiModelProperty(example = "null", value = "")
  public Boolean getShowPreviewImages() {
    return showPreviewImages;
  }

  public void setShowPreviewImages(Boolean showPreviewImages) {
    this.showPreviewImages = showPreviewImages;
  }

  public Group type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Group unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @ApiModelProperty(example = "null", value = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Group group = (Group) o;
    return Objects.equals(this.detailedLinks, group.detailedLinks) &&
        Objects.equals(this.elements, group.elements) &&
        Objects.equals(this.filterStyle, group.filterStyle) &&
        Objects.equals(this.groupOrder, group.groupOrder) &&
        Objects.equals(this.name, group.name) &&
        Objects.equals(this.selectedElements, group.selectedElements) &&
        Objects.equals(this.selectionType, group.selectionType) &&
        Objects.equals(this.showPreviewImages, group.showPreviewImages) &&
        Objects.equals(this.type, group.type) &&
        Objects.equals(this.unit, group.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(detailedLinks, elements, filterStyle, groupOrder, name, selectedElements, selectionType, showPreviewImages, type, unit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Group {\n");
    
    sb.append("    detailedLinks: ").append(toIndentedString(detailedLinks)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    filterStyle: ").append(toIndentedString(filterStyle)).append("\n");
    sb.append("    groupOrder: ").append(toIndentedString(groupOrder)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    selectedElements: ").append(toIndentedString(selectedElements)).append("\n");
    sb.append("    selectionType: ").append(toIndentedString(selectionType)).append("\n");
    sb.append("    showPreviewImages: ").append(toIndentedString(showPreviewImages)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

